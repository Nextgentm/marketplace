{
  "contractName": "Trade",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_buyerFee",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_sellerFee",
          "type": "uint8"
        },
        {
          "internalType": "contract ITransferProxy",
          "name": "_transferProxy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "assetOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "BuyAsset",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "buyerFee",
          "type": "uint8"
        }
      ],
      "name": "BuyerFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "assetOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "ExecuteBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "sellerFee",
          "type": "uint8"
        }
      ],
      "name": "SellerFee",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "signer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "transferProxy",
      "outputs": [
        {
          "internalType": "contract ITransferProxy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "buyerServiceFee",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "sellerServiceFee",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_buyerFeePermille",
          "type": "uint8"
        }
      ],
      "name": "setBuyerServiceFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_sellerFeePermille",
          "type": "uint8"
        }
      ],
      "name": "setSellerServiceFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        }
      ],
      "name": "setSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "isOrderClosed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "erc20Address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            },
            {
              "internalType": "enum Trade.BuyingAssetType",
              "name": "nftType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "unitPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nftOrderQuantity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "skipRoyalty",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "qty",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "sellerOrdersignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "buyerOrdersignature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Trade.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "cancelOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "erc20Address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            },
            {
              "internalType": "enum Trade.BuyingAssetType",
              "name": "nftType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "unitPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nftOrderQuantity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "skipRoyalty",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "qty",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "sellerOrdersignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "buyerOrdersignature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Trade.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "buyAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "erc20Address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            },
            {
              "internalType": "enum Trade.BuyingAssetType",
              "name": "nftType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "unitPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nftOrderQuantity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "skipRoyalty",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "qty",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "sellerOrdersignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "buyerOrdersignature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Trade.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "executeBid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "erc20Address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            },
            {
              "internalType": "enum Trade.BuyingAssetType",
              "name": "nftType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "unitPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nftOrderQuantity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "skipRoyalty",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "qty",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "sellerOrdersignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "buyerOrdersignature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Trade.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getFees",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "platformFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assetFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "royaltyFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenCreator",
              "type": "address"
            }
          ],
          "internalType": "struct Trade.Fee",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "erc20Address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            },
            {
              "internalType": "enum Trade.BuyingAssetType",
              "name": "nftType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "unitPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nftOrderQuantity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "skipRoyalty",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "qty",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "sellerOrdersignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "buyerOrdersignature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Trade.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "deliverNFT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "erc20Address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            },
            {
              "internalType": "enum Trade.BuyingAssetType",
              "name": "nftType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "unitPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nftOrderQuantity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "skipRoyalty",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "qty",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "sellerOrdersignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "buyerOrdersignature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Trade.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getOrderSellerHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "erc20Address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            },
            {
              "internalType": "enum Trade.BuyingAssetType",
              "name": "nftType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "unitPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nftOrderQuantity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "skipRoyalty",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "qty",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "sellerOrdersignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "buyerOrdersignature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Trade.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getOrderBuyerHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_buyerFee\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_sellerFee\",\"type\":\"uint8\"},{\"internalType\":\"contract ITransferProxy\",\"name\":\"_transferProxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assetOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"BuyAsset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"buyerFee\",\"type\":\"uint8\"}],\"name\":\"BuyerFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assetOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"ExecuteBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"sellerFee\",\"type\":\"uint8\"}],\"name\":\"SellerFee\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"enum Trade.BuyingAssetType\",\"name\":\"nftType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"unitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftOrderQuantity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"skipRoyalty\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sellerOrdersignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"buyerOrdersignature\",\"type\":\"bytes\"}],\"internalType\":\"struct Trade.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"buyAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyerServiceFee\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"enum Trade.BuyingAssetType\",\"name\":\"nftType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"unitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftOrderQuantity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"skipRoyalty\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sellerOrdersignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"buyerOrdersignature\",\"type\":\"bytes\"}],\"internalType\":\"struct Trade.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"cancelOrder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"enum Trade.BuyingAssetType\",\"name\":\"nftType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"unitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftOrderQuantity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"skipRoyalty\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sellerOrdersignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"buyerOrdersignature\",\"type\":\"bytes\"}],\"internalType\":\"struct Trade.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"deliverNFT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"enum Trade.BuyingAssetType\",\"name\":\"nftType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"unitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftOrderQuantity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"skipRoyalty\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sellerOrdersignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"buyerOrdersignature\",\"type\":\"bytes\"}],\"internalType\":\"struct Trade.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"executeBid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"enum Trade.BuyingAssetType\",\"name\":\"nftType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"unitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftOrderQuantity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"skipRoyalty\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sellerOrdersignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"buyerOrdersignature\",\"type\":\"bytes\"}],\"internalType\":\"struct Trade.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"getFees\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"platformFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"royaltyFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenCreator\",\"type\":\"address\"}],\"internalType\":\"struct Trade.Fee\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"enum Trade.BuyingAssetType\",\"name\":\"nftType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"unitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftOrderQuantity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"skipRoyalty\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sellerOrdersignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"buyerOrdersignature\",\"type\":\"bytes\"}],\"internalType\":\"struct Trade.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"getOrderBuyerHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"enum Trade.BuyingAssetType\",\"name\":\"nftType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"unitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftOrderQuantity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"skipRoyalty\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sellerOrdersignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"buyerOrdersignature\",\"type\":\"bytes\"}],\"internalType\":\"struct Trade.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"getOrderSellerHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"isOrderClosed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellerServiceFee\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_buyerFeePermille\",\"type\":\"uint8\"}],\"name\":\"setBuyerServiceFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_sellerFeePermille\",\"type\":\"uint8\"}],\"name\":\"setSellerServiceFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"setSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferProxy\",\"outputs\":[{\"internalType\":\"contract ITransferProxy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buyAsset((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"order\":\"ordervalues(seller, buyer,...).\"}},\"cancelOrder((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"order\":\"ordervalues(seller, buyer,...). this will cancel the invalid use of sign order data\"}},\"deliverNFT((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"order\":\"ordervalues(seller, buyer,...).\"}},\"getOrderBuyerHash((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"order\":\"ordervalues(seller, buyer,...).\"}},\"getOrderSellerHash((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"order\":\"ordervalues(seller, buyer,...).\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyAsset((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"excuting the NFT order.\"},\"buyerServiceFee()\":{\"notice\":\"returns the buyerservice Fee in multiply of 1000.\"},\"cancelOrder((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"cancel Order.\"},\"deliverNFT((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"transfers the NFTs by external wallets\"},\"getOrderBuyerHash((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"get Order Hash for buyer.\"},\"getOrderSellerHash((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"get Order Hash for seller.\"},\"isOrderClosed(bytes32)\":{\"notice\":\"returns the whether the order is already exists or not.\"},\"sellerServiceFee()\":{\"notice\":\"returns the sellerservice Fee in multiply of 1000.\"},\"setBuyerServiceFee(uint8)\":{\"notice\":\"returns the buyerservice Fee in multiply of 1000.\"},\"setSellerServiceFee(uint8)\":{\"notice\":\"returns the sellerservice Fee in multiply of 1000.\"},\"setSigner(address)\":{\"notice\":\"set the signer in address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/trade.sol\":\"Trade\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x10a6688bc4154b1b76268dbaf497bd8b24f77525ecb9cf829bd3cccec98eefc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68663f939b79e88a5bb677cf6c549e88eb4f587379c09f80d19cde14b0eb984b\",\"dweb:/ipfs/QmVfeL1uxQ5161d25DsNqptjaur7VQugjCSGitrRscTdmV\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"project:/src/contracts/interface/ILazyMint.sol\":{\"keccak256\":\"0x8a282fa6ebb828cebcdf9ae8f32fa611863a2b27c162b01c6f31c11ffb2deb20\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://83c4cb99a468488b1ab7b5d352d53f3efc89b78e525cf54b62414d4f150a852b\",\"dweb:/ipfs/QmNhvQUjiaUr3JeKwi46Eh8z5XkA8p2TchX5FaP8spwvtE\"]},\"project:/src/contracts/interface/ITransferProxy.sol\":{\"keccak256\":\"0x39c501e50e81361046f55f2f5c672d180d7c173e69facd7d0588c8be8d4c3b75\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8157a88040ed2facd96b1eb57aed6c64dbfa26fc4943cbff13489a514da31fa8\",\"dweb:/ipfs/QmfBZJzefBpLVcAxDZSSbTvYnvkzguL5Lf5Zsw1HYgDfbJ\"]},\"project:/src/contracts/trade.sol\":{\"keccak256\":\"0xf80af0fd193d2d2005da6ab275479d57177261d3cd2418bd466d50d629592dc8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b90cc94cbdc2ebbcd8edc1ea4106b6549f818ef2bd5fa9bc5e2d4383ede01701\",\"dweb:/ipfs/QmTda5Bx6C8VDJ43PR9wQxhPQVcosvL3J5YvQuVh3fCaJo\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002a8e38038062002a8e8339810160408190526200003491620000a5565b600180546001600160a01b03909216620100000262010000600160b01b031960ff9485166101000261ffff1990941694909516939093179190911792909216179055600280546001600160a01b03191633179055620000ff565b805160ff81168114620000a057600080fd5b919050565b600080600060608486031215620000bb57600080fd5b620000c6846200008e565b9250620000d6602085016200008e565b60408501519092506001600160a01b0381168114620000f457600080fd5b809150509250925092565b61297f806200010f6000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c80638162b6bd116100e3578063a217fddf1161008c578063d547741f11610066578063d547741f146103c8578063dab56b48146103db578063f5c7c83d146103ee57600080fd5b8063a217fddf1461039a578063a3667c7b146103a2578063a96b446d146103b557600080fd5b806391d14854116100bd57806391d148541461034557806396c94acf1461037c5780639c66809d1461038f57600080fd5b80638162b6bd1461030c5780638da5cb5b1461031f5780638e1615ac1461033257600080fd5b806336568abe116101455780636c19e7831161011f5780636c19e783146102cd5780636e667db3146102e057806377c1b664146102f957600080fd5b806336568abe1461023e5780634cf4d2b71461025157806360085da6146102af57600080fd5b8063238ac93311610176578063238ac933146101db578063248a9ca3146102065780632f2ff15d1461022957600080fd5b806301ffc9a71461019257806303365857146101ba575b600080fd5b6101a56101a03660046124a4565b610401565b60405190151581526020015b60405180910390f35b6101cd6101c83660046124ce565b61046a565b6040519081526020016101b1565b6003546101ee906001600160a01b031681565b6040516001600160a01b0390911681526020016101b1565b6101cd61021436600461250a565b60009081526020819052604090206001015490565b61023c610237366004612538565b61050c565b005b61023c61024c366004612538565b610536565b61026461025f3660046124ce565b6105c7565b6040516101b19190600060a082019050825182526020830151602083015260408301516040830152606083015160608301526001600160a01b03608084015116608083015292915050565b600154610100900460ff165b60405160ff90911681526020016101b1565b61023c6102db366004612568565b6107e7565b6001546101ee906201000090046001600160a01b031681565b6101cd6103073660046124ce565b6108d8565b6101a561031a3660046124ce565b610948565b6002546101ee906001600160a01b031681565b6101a561034036600461250a565b610e42565b6101a5610353366004612538565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6101a561038a3660046124ce565b610ea2565b60015460ff166102bb565b6101cd600081565b61023c6103b0366004612585565b611057565b61023c6103c3366004612585565b611129565b61023c6103d6366004612538565b6111f0565b6101a56103e93660046124ce565b611215565b6101a56103fc3660046124ce565b611726565b60006001600160e01b031982167f7965db0b00000000000000000000000000000000000000000000000000000000148061046457507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60006104796020830183612568565b6104896060840160408501612568565b6104996080850160608601612568565b6104a960a08601608087016125a8565b60a086013560c08701356104c4610100890160e08a016125c9565b8861010001358961012001358a61014001356040516020016104ef9a99989796959493929190612626565b604051602081830303815290604052805190602001209050919050565b600082815260208190526040902060010154610527816119ff565b6105318383611a0c565b505050565b6001600160a01b03811633146105b95760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b6105c38282611aaa565b5050565b6106026040518060a001604052806000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b600154600090819081908190819061061f9060ff166103e86126ae565b61ffff166106346101608901356103e86126d4565b61063e91906126f3565b90506000610651826101608a0135612715565b6001549091506000906103e89061067090610100900460ff16856126d4565b61067a91906126f3565b9050610686818361272c565b95506106996101008a0160e08b016125c9565b1580156106f0575060016106b360a08b0160808c016125a8565b60018111156106c4576106c46125eb565b14806106f0575060006106dd60a08b0160808c016125a8565b60018111156106ee576106ee6125eb565b145b156107995761070560808a0160608b01612568565b6040517f2a55205a0000000000000000000000000000000000000000000000000000000081526101408b01356004820152602481018590526001600160a01b039190911690632a55205a906044016040805180830381865afa15801561076f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107939190612744565b90975094505b806107a48685612715565b6107ae9190612715565b6040805160a081018252978852602088019190915286019490945250606084015250506001600160a01b03909116608082015292915050565b6002546001600160a01b031633146108415760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79206f776e65722063616e20616c6c20746869732066756e6374696f6e60448201526064016105b0565b6003546001600160a01b0380831691160361089e5760405162461bcd60e51b815260206004820152601460248201527f5369676e65722076616c75652069732073616d6500000000000000000000000060448201526064016105b0565b600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60006108ea6040830160208401612568565b6108fa6060840160408501612568565b61090a6080850160608601612568565b61091a60a08601608087016125a8565b8560a001358661014001358761016001358861018001356040516020016104ef989796959493929190612772565b600081816109596020830183612568565b6001600160a01b0316036109af5760405162461bcd60e51b815260206004820152601660248201527f53656c6c65722063616e6e6f7420626520656d7074790000000000000000000060448201526064016105b0565b60006109c16040830160208401612568565b6001600160a01b031603610a175760405162461bcd60e51b815260206004820152601560248201527f42757965722063616e6e6f7420626520656d707479000000000000000000000060448201526064016105b0565b6000610a296080830160608401612568565b6001600160a01b031603610a7f5760405162461bcd60e51b815260206004820152601b60248201527f4e465420416464726573732063616e6e6f7420626520656d707479000000000060448201526064016105b0565b428161010001351115610ad45760405162461bcd60e51b815260206004820152601a60248201527f41756374696f6e206973206e6f7420737461727465642079657400000000000060448201526064016105b0565b8061012001354210610b285760405162461bcd60e51b815260206004820152601060248201527f41756374696f6e20697320656e6465640000000000000000000000000000000060448201526064016105b0565b60008160a0013511610b7c5760405162461bcd60e51b815260206004820152601960248201527f556e69742070726963652063616e6e6f74206265207a65726f0000000000000060448201526064016105b0565b600081610140013511610bd15760405162461bcd60e51b815260206004820152601660248201527f546f6b656e49642063616e6e6f74206265207a65726f0000000000000000000060448201526064016105b0565b600081610160013511610c265760405162461bcd60e51b815260206004820152601560248201527f416d6f756e742063616e6e6f74206265207a65726f000000000000000000000060448201526064016105b0565b600081610180013511610c7b5760405162461bcd60e51b815260206004820152601760248201527f5175616e746974792063616e6e6f74206265207a65726f00000000000000000060448201526064016105b0565b610c8b6040840160208501612568565b6001600160a01b0316336001600160a01b031614610d115760405162461bcd60e51b815260206004820152602560248201527f4f6e6c79206f726465722062757965722063616e2063616c6c2074686973206d60448201527f6574686f6400000000000000000000000000000000000000000000000000000060648201526084016105b0565b6000610d1c846105c7565b9050610d3161018085013560a08601356126d4565b81606001511115610d845760405162461bcd60e51b815260206004820152601360248201527f5061696420696e76616c696420616d6f756e740000000000000000000000000060448201526064016105b0565b610d8d84611b29565b15610e3657610db98482610da76040830160208401612568565b610db46020890189612568565b611d5d565b610dc96040850160208601612568565b6001600160a01b0316610140850135610de56020870187612568565b6001600160a01b03167fb10197cef009fd301a90b892d25451c22c3701eb18ee2df1250d31e514fff394876101800135604051610e2491815260200190565b60405180910390a46001925050610e3c565b60009250505b50919050565b6000600260008381526004602052604090206001015460ff166003811115610e6c57610e6c6125eb565b14806104645750600360008381526004602052604090206001015460ff166003811115610e9b57610e9b6125eb565b1492915050565b600080610eae8361046a565b90506000610ebb82612109565b905033610ecb6020860186612568565b6001600160a01b031614610f215760405162461bcd60e51b815260206004820152601a60248201527f43616c6c6572206973206e6f74206f726465722073656c6c657200000000000060448201526064016105b0565b610f6d81610f336101a08701876127d4565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061214492505050565b6001600160a01b0316610f836020860186612568565b6001600160a01b031614610fd95760405162461bcd60e51b815260206004820152601560248201527f496e76616c6964206f726465722064657461696c73000000000000000000000060448201526064016105b0565b610fe281610e42565b1561102f5760405162461bcd60e51b815260206004820181905260248201527f4f7264657220616c726561647920636f6d706c746564206f722063616e63656c60448201526064016105b0565b60009081526004602052604081209081556001908101805460ff191660031790559392505050565b6002546001600160a01b031633146110b15760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79206f776e65722063616e20616c6c20746869732066756e6374696f6e60448201526064016105b0565b60015460ff808316610100909204160361110d5760405162461bcd60e51b815260206004820152601f60248201527f53656c6c65724665655065726d696c6c652076616c75652069732073616d650060448201526064016105b0565b6001805460ff9092166101000261ff0019909216919091179055565b6002546001600160a01b031633146111835760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79206f776e65722063616e20616c6c20746869732066756e6374696f6e60448201526064016105b0565b60015460ff8083169116036111da5760405162461bcd60e51b815260206004820152601e60248201527f42757965724665655065726d696c6c652076616c75652069732073616d65000060448201526064016105b0565b6001805460ff191660ff92909216919091179055565b60008281526020819052604090206001015461120b816119ff565b6105318383611aaa565b600081816112266020830183612568565b6001600160a01b03160361127c5760405162461bcd60e51b815260206004820152601660248201527f53656c6c65722063616e6e6f7420626520656d7074790000000000000000000060448201526064016105b0565b600061128e6040830160208401612568565b6001600160a01b0316036112e45760405162461bcd60e51b815260206004820152601560248201527f42757965722063616e6e6f7420626520656d707479000000000000000000000060448201526064016105b0565b60006112f66080830160608401612568565b6001600160a01b03160361134c5760405162461bcd60e51b815260206004820152601b60248201527f4e465420416464726573732063616e6e6f7420626520656d707479000000000060448201526064016105b0565b4281610100013511156113a15760405162461bcd60e51b815260206004820152601a60248201527f41756374696f6e206973206e6f7420737461727465642079657400000000000060448201526064016105b0565b80610120013542106113f55760405162461bcd60e51b815260206004820152601060248201527f41756374696f6e20697320656e6465640000000000000000000000000000000060448201526064016105b0565b60008160a00135116114495760405162461bcd60e51b815260206004820152601960248201527f556e69742070726963652063616e6e6f74206265207a65726f0000000000000060448201526064016105b0565b60008161014001351161149e5760405162461bcd60e51b815260206004820152601660248201527f546f6b656e49642063616e6e6f74206265207a65726f0000000000000000000060448201526064016105b0565b6000816101600135116114f35760405162461bcd60e51b815260206004820152601560248201527f416d6f756e742063616e6e6f74206265207a65726f000000000000000000000060448201526064016105b0565b6000816101800135116115485760405162461bcd60e51b815260206004820152601760248201527f5175616e746974792063616e6e6f74206265207a65726f00000000000000000060448201526064016105b0565b826000611554826108d8565b9050600061156182612109565b905061157581610f336101c08601866127d4565b6001600160a01b031661158e6040850160208601612568565b6001600160a01b0316146115e45760405162461bcd60e51b815260206004820152601360248201527f496e76616c6964206269642064657461696c730000000000000000000000000060448201526064016105b0565b6115f16020870187612568565b6001600160a01b0316336001600160a01b0316146116775760405162461bcd60e51b815260206004820152602660248201527f4f6e6c79206f726465722073656c6c65722063616e2063616c6c20746869732060448201527f6d6574686f64000000000000000000000000000000000000000000000000000060648201526084016105b0565b6000611682876105c7565b90506116a687826116996040830160208401612568565b610db460208c018c612568565b6116b66040880160208901612568565b6001600160a01b03166101408801356116d260208a018a612568565b6001600160a01b03167fec34853c156da04e4792f1c735112ae54e5ed52bac58db5014b26746f306a3628a610180013560405161171191815260200190565b60405180910390a45060019695505050505050565b6003546000906001600160a01b031633146117a95760405162461bcd60e51b815260206004820152602160248201527f4f6e6c79207369676e65722063616e20616c6c20746869732066756e6374696f60448201527f6e0000000000000000000000000000000000000000000000000000000000000060648201526084016105b0565b60016117bb60a08401608085016125a8565b60018111156117cc576117cc6125eb565b0361188a576001546201000090046001600160a01b031663f709b9066117f86080850160608601612568565b6118056020860186612568565b6118156040870160208801612568565b60405160e085901b6001600160e01b03191681526001600160a01b039384166004820152918316602483015290911660448201526101408501356064820152608401600060405180830381600087803b15801561187157600080fd5b505af1158015611885573d6000803e3d6000fd5b505050505b600061189c60a08401608085016125a8565b60018111156118ad576118ad6125eb565b03611984576001546201000090046001600160a01b0316639c1c2ee96118d96080850160608601612568565b6118e66020860186612568565b6118f66040870160208801612568565b60405160e085901b6001600160e01b03191681526001600160a01b039384166004820152918316602483015290911660448201526101408501356064820152610180850135608482015260c060a4820152600060c482015260e401600060405180830381600087803b15801561196b57600080fd5b505af115801561197f573d6000803e3d6000fd5b505050505b6119946040830160208401612568565b6001600160a01b03166101408301356119b06020850185612568565b6001600160a01b03167fb10197cef009fd301a90b892d25451c22c3701eb18ee2df1250d31e514fff3948561018001356040516119ef91815260200190565b60405180910390a4506001919050565b611a0981336121c3565b50565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166105c3576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055611a663390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16156105c3576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600080611b358361046a565b90506000611b4282612109565b9050611b5681610f336101a08701876127d4565b6001600160a01b0316611b6c6020860186612568565b6001600160a01b031614611bc25760405162461bcd60e51b815260206004820152601560248201527f496e76616c6964206f726465722064657461696c73000000000000000000000060448201526064016105b0565b611bcb81610e42565b15611c185760405162461bcd60e51b815260206004820152600c60248201527f4f7264657220636c6f736564000000000000000000000000000000000000000060448201526064016105b0565b60008181526004602052604081206001015460ff166003811115611c3e57611c3e6125eb565b03611c6d57600081815260046020526040902060c085013581556001908101805460ff19169091179055611d53565b600160008281526004602052604090206001015460ff166003811115611c9557611c956125eb565b03611d53576000818152600460205260409020546101808501351115611cfd5760405162461bcd60e51b815260206004820152601960248201527f4f72646572205175616e7469747920697320696e76616c69640000000000000060448201526064016105b0565b600081815260046020526040812054611d1c9061018087013590612715565b905080600003611d43576000828152600460205260409020600101805460ff191660021790555b6000828152600460205260409020555b5060019392505050565b6001611d6f60a08601608087016125a8565b6001811115611d8057611d806125eb565b03611e21576001546201000090046001600160a01b031663f709b906611dac6080870160608801612568565b6040516001600160e01b031960e084901b1681526001600160a01b039182166004820152818516602482015290851660448201526101408701356064820152608401600060405180830381600087803b158015611e0857600080fd5b505af1158015611e1c573d6000803e3d6000fd5b505050505b6000611e3360a08601608087016125a8565b6001811115611e4457611e446125eb565b03611efe576001546201000090046001600160a01b0316639c1c2ee9611e706080870160608801612568565b6040516001600160e01b031960e084901b1681526001600160a01b039182166004820152818516602482015290851660448201526101408701356064820152610180870135608482015260c060a4820152600060c482015260e401600060405180830381600087803b158015611ee557600080fd5b505af1158015611ef9573d6000803e3d6000fd5b505050505b825115611fa1576001546201000090046001600160a01b031663776062c3611f2c6060870160408801612568565b600254865160405160e085901b6001600160e01b03191681526001600160a01b03938416600482015283881660248201529290911660448301526064820152608401600060405180830381600087803b158015611f8857600080fd5b505af1158015611f9c573d6000803e3d6000fd5b505050505b60008360400151118015611fc35750611fc1610100850160e086016125c9565b155b15612069576001546201000090046001600160a01b031663776062c3611fef6060870160408801612568565b608086015160408088015190516001600160e01b031960e086901b1681526001600160a01b03938416600482015283881660248201529290911660448301526064820152608401600060405180830381600087803b15801561205057600080fd5b505af1158015612064573d6000803e3d6000fd5b505050505b6001546201000090046001600160a01b031663776062c36120906060870160408801612568565b60208601516040516001600160e01b031960e085901b1681526001600160a01b039283166004820152828716602482015291851660448301526064820152608401600060405180830381600087803b1580156120eb57600080fd5b505af11580156120ff573d6000803e3d6000fd5b5050505050505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c016104ef565b60008060008061215385612236565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa1580156121ae573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166105c3576121f4816122aa565b6121ff8360206122bc565b604051602001612210929190612852565b60408051601f198184030181529082905262461bcd60e51b82526105b0916004016128d3565b6000806000835160411461228c5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064016105b0565b50505060208101516040820151606090920151909260009190911a90565b60606104646001600160a01b03831660145b606060006122cb8360026126d4565b6122d690600261272c565b67ffffffffffffffff8111156122ee576122ee612906565b6040519080825280601f01601f191660200182016040528015612318576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061234f5761234f61291c565b60200101906001600160f81b031916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061239a5761239a61291c565b60200101906001600160f81b031916908160001a90535060006123be8460026126d4565b6123c990600161272c565b90505b600181111561244e577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061240a5761240a61291c565b1a60f81b8282815181106124205761242061291c565b60200101906001600160f81b031916908160001a90535060049490941c9361244781612932565b90506123cc565b50831561249d5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016105b0565b9392505050565b6000602082840312156124b657600080fd5b81356001600160e01b03198116811461249d57600080fd5b6000602082840312156124e057600080fd5b813567ffffffffffffffff8111156124f757600080fd5b82016101e0818503121561249d57600080fd5b60006020828403121561251c57600080fd5b5035919050565b6001600160a01b0381168114611a0957600080fd5b6000806040838503121561254b57600080fd5b82359150602083013561255d81612523565b809150509250929050565b60006020828403121561257a57600080fd5b813561249d81612523565b60006020828403121561259757600080fd5b813560ff8116811461249d57600080fd5b6000602082840312156125ba57600080fd5b81356002811061249d57600080fd5b6000602082840312156125db57600080fd5b8135801515811461249d57600080fd5b634e487b7160e01b600052602160045260246000fd5b6002811061261f57634e487b7160e01b600052602160045260246000fd5b60f81b9052565b60006bffffffffffffffffffffffff19808d60601b168352808c60601b166014840152808b60601b16602884015250612662603c83018a612601565b50603d810196909652605d86019490945291151560f81b607d850152607e840152609e83015260be82015260de01949350505050565b634e487b7160e01b600052601160045260246000fd5b600061ffff8083168185168083038211156126cb576126cb612698565b01949350505050565b60008160001904831182151516156126ee576126ee612698565b500290565b60008261271057634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561272757612727612698565b500390565b6000821982111561273f5761273f612698565b500190565b6000806040838503121561275757600080fd5b825161276281612523565b6020939093015192949293505050565b60006bffffffffffffffffffffffff19808b60601b168352808a60601b166014840152808960601b166028840152506127ae603c830188612601565b50603d810194909452605d840192909252607d830152609d82015260bd01949350505050565b6000808335601e198436030181126127eb57600080fd5b83018035915067ffffffffffffffff82111561280657600080fd5b60200191503681900382131561281b57600080fd5b9250929050565b60005b8381101561283d578181015183820152602001612825565b8381111561284c576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161288a816017850160208801612822565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516128c7816028840160208801612822565b01602801949350505050565b60208152600082518060208401526128f2816040850160208701612822565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008161294157612941612698565b50600019019056fea2646970667358221220c4aba6ac9cee5ca512ba2565ea368902c0ab74270c372654ebfcbdd9bdcc7b7e64736f6c634300080e0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018d5760003560e01c80638162b6bd116100e3578063a217fddf1161008c578063d547741f11610066578063d547741f146103c8578063dab56b48146103db578063f5c7c83d146103ee57600080fd5b8063a217fddf1461039a578063a3667c7b146103a2578063a96b446d146103b557600080fd5b806391d14854116100bd57806391d148541461034557806396c94acf1461037c5780639c66809d1461038f57600080fd5b80638162b6bd1461030c5780638da5cb5b1461031f5780638e1615ac1461033257600080fd5b806336568abe116101455780636c19e7831161011f5780636c19e783146102cd5780636e667db3146102e057806377c1b664146102f957600080fd5b806336568abe1461023e5780634cf4d2b71461025157806360085da6146102af57600080fd5b8063238ac93311610176578063238ac933146101db578063248a9ca3146102065780632f2ff15d1461022957600080fd5b806301ffc9a71461019257806303365857146101ba575b600080fd5b6101a56101a03660046124a4565b610401565b60405190151581526020015b60405180910390f35b6101cd6101c83660046124ce565b61046a565b6040519081526020016101b1565b6003546101ee906001600160a01b031681565b6040516001600160a01b0390911681526020016101b1565b6101cd61021436600461250a565b60009081526020819052604090206001015490565b61023c610237366004612538565b61050c565b005b61023c61024c366004612538565b610536565b61026461025f3660046124ce565b6105c7565b6040516101b19190600060a082019050825182526020830151602083015260408301516040830152606083015160608301526001600160a01b03608084015116608083015292915050565b600154610100900460ff165b60405160ff90911681526020016101b1565b61023c6102db366004612568565b6107e7565b6001546101ee906201000090046001600160a01b031681565b6101cd6103073660046124ce565b6108d8565b6101a561031a3660046124ce565b610948565b6002546101ee906001600160a01b031681565b6101a561034036600461250a565b610e42565b6101a5610353366004612538565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6101a561038a3660046124ce565b610ea2565b60015460ff166102bb565b6101cd600081565b61023c6103b0366004612585565b611057565b61023c6103c3366004612585565b611129565b61023c6103d6366004612538565b6111f0565b6101a56103e93660046124ce565b611215565b6101a56103fc3660046124ce565b611726565b60006001600160e01b031982167f7965db0b00000000000000000000000000000000000000000000000000000000148061046457507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60006104796020830183612568565b6104896060840160408501612568565b6104996080850160608601612568565b6104a960a08601608087016125a8565b60a086013560c08701356104c4610100890160e08a016125c9565b8861010001358961012001358a61014001356040516020016104ef9a99989796959493929190612626565b604051602081830303815290604052805190602001209050919050565b600082815260208190526040902060010154610527816119ff565b6105318383611a0c565b505050565b6001600160a01b03811633146105b95760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b6105c38282611aaa565b5050565b6106026040518060a001604052806000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b600154600090819081908190819061061f9060ff166103e86126ae565b61ffff166106346101608901356103e86126d4565b61063e91906126f3565b90506000610651826101608a0135612715565b6001549091506000906103e89061067090610100900460ff16856126d4565b61067a91906126f3565b9050610686818361272c565b95506106996101008a0160e08b016125c9565b1580156106f0575060016106b360a08b0160808c016125a8565b60018111156106c4576106c46125eb565b14806106f0575060006106dd60a08b0160808c016125a8565b60018111156106ee576106ee6125eb565b145b156107995761070560808a0160608b01612568565b6040517f2a55205a0000000000000000000000000000000000000000000000000000000081526101408b01356004820152602481018590526001600160a01b039190911690632a55205a906044016040805180830381865afa15801561076f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107939190612744565b90975094505b806107a48685612715565b6107ae9190612715565b6040805160a081018252978852602088019190915286019490945250606084015250506001600160a01b03909116608082015292915050565b6002546001600160a01b031633146108415760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79206f776e65722063616e20616c6c20746869732066756e6374696f6e60448201526064016105b0565b6003546001600160a01b0380831691160361089e5760405162461bcd60e51b815260206004820152601460248201527f5369676e65722076616c75652069732073616d6500000000000000000000000060448201526064016105b0565b600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60006108ea6040830160208401612568565b6108fa6060840160408501612568565b61090a6080850160608601612568565b61091a60a08601608087016125a8565b8560a001358661014001358761016001358861018001356040516020016104ef989796959493929190612772565b600081816109596020830183612568565b6001600160a01b0316036109af5760405162461bcd60e51b815260206004820152601660248201527f53656c6c65722063616e6e6f7420626520656d7074790000000000000000000060448201526064016105b0565b60006109c16040830160208401612568565b6001600160a01b031603610a175760405162461bcd60e51b815260206004820152601560248201527f42757965722063616e6e6f7420626520656d707479000000000000000000000060448201526064016105b0565b6000610a296080830160608401612568565b6001600160a01b031603610a7f5760405162461bcd60e51b815260206004820152601b60248201527f4e465420416464726573732063616e6e6f7420626520656d707479000000000060448201526064016105b0565b428161010001351115610ad45760405162461bcd60e51b815260206004820152601a60248201527f41756374696f6e206973206e6f7420737461727465642079657400000000000060448201526064016105b0565b8061012001354210610b285760405162461bcd60e51b815260206004820152601060248201527f41756374696f6e20697320656e6465640000000000000000000000000000000060448201526064016105b0565b60008160a0013511610b7c5760405162461bcd60e51b815260206004820152601960248201527f556e69742070726963652063616e6e6f74206265207a65726f0000000000000060448201526064016105b0565b600081610140013511610bd15760405162461bcd60e51b815260206004820152601660248201527f546f6b656e49642063616e6e6f74206265207a65726f0000000000000000000060448201526064016105b0565b600081610160013511610c265760405162461bcd60e51b815260206004820152601560248201527f416d6f756e742063616e6e6f74206265207a65726f000000000000000000000060448201526064016105b0565b600081610180013511610c7b5760405162461bcd60e51b815260206004820152601760248201527f5175616e746974792063616e6e6f74206265207a65726f00000000000000000060448201526064016105b0565b610c8b6040840160208501612568565b6001600160a01b0316336001600160a01b031614610d115760405162461bcd60e51b815260206004820152602560248201527f4f6e6c79206f726465722062757965722063616e2063616c6c2074686973206d60448201527f6574686f6400000000000000000000000000000000000000000000000000000060648201526084016105b0565b6000610d1c846105c7565b9050610d3161018085013560a08601356126d4565b81606001511115610d845760405162461bcd60e51b815260206004820152601360248201527f5061696420696e76616c696420616d6f756e740000000000000000000000000060448201526064016105b0565b610d8d84611b29565b15610e3657610db98482610da76040830160208401612568565b610db46020890189612568565b611d5d565b610dc96040850160208601612568565b6001600160a01b0316610140850135610de56020870187612568565b6001600160a01b03167fb10197cef009fd301a90b892d25451c22c3701eb18ee2df1250d31e514fff394876101800135604051610e2491815260200190565b60405180910390a46001925050610e3c565b60009250505b50919050565b6000600260008381526004602052604090206001015460ff166003811115610e6c57610e6c6125eb565b14806104645750600360008381526004602052604090206001015460ff166003811115610e9b57610e9b6125eb565b1492915050565b600080610eae8361046a565b90506000610ebb82612109565b905033610ecb6020860186612568565b6001600160a01b031614610f215760405162461bcd60e51b815260206004820152601a60248201527f43616c6c6572206973206e6f74206f726465722073656c6c657200000000000060448201526064016105b0565b610f6d81610f336101a08701876127d4565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061214492505050565b6001600160a01b0316610f836020860186612568565b6001600160a01b031614610fd95760405162461bcd60e51b815260206004820152601560248201527f496e76616c6964206f726465722064657461696c73000000000000000000000060448201526064016105b0565b610fe281610e42565b1561102f5760405162461bcd60e51b815260206004820181905260248201527f4f7264657220616c726561647920636f6d706c746564206f722063616e63656c60448201526064016105b0565b60009081526004602052604081209081556001908101805460ff191660031790559392505050565b6002546001600160a01b031633146110b15760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79206f776e65722063616e20616c6c20746869732066756e6374696f6e60448201526064016105b0565b60015460ff808316610100909204160361110d5760405162461bcd60e51b815260206004820152601f60248201527f53656c6c65724665655065726d696c6c652076616c75652069732073616d650060448201526064016105b0565b6001805460ff9092166101000261ff0019909216919091179055565b6002546001600160a01b031633146111835760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79206f776e65722063616e20616c6c20746869732066756e6374696f6e60448201526064016105b0565b60015460ff8083169116036111da5760405162461bcd60e51b815260206004820152601e60248201527f42757965724665655065726d696c6c652076616c75652069732073616d65000060448201526064016105b0565b6001805460ff191660ff92909216919091179055565b60008281526020819052604090206001015461120b816119ff565b6105318383611aaa565b600081816112266020830183612568565b6001600160a01b03160361127c5760405162461bcd60e51b815260206004820152601660248201527f53656c6c65722063616e6e6f7420626520656d7074790000000000000000000060448201526064016105b0565b600061128e6040830160208401612568565b6001600160a01b0316036112e45760405162461bcd60e51b815260206004820152601560248201527f42757965722063616e6e6f7420626520656d707479000000000000000000000060448201526064016105b0565b60006112f66080830160608401612568565b6001600160a01b03160361134c5760405162461bcd60e51b815260206004820152601b60248201527f4e465420416464726573732063616e6e6f7420626520656d707479000000000060448201526064016105b0565b4281610100013511156113a15760405162461bcd60e51b815260206004820152601a60248201527f41756374696f6e206973206e6f7420737461727465642079657400000000000060448201526064016105b0565b80610120013542106113f55760405162461bcd60e51b815260206004820152601060248201527f41756374696f6e20697320656e6465640000000000000000000000000000000060448201526064016105b0565b60008160a00135116114495760405162461bcd60e51b815260206004820152601960248201527f556e69742070726963652063616e6e6f74206265207a65726f0000000000000060448201526064016105b0565b60008161014001351161149e5760405162461bcd60e51b815260206004820152601660248201527f546f6b656e49642063616e6e6f74206265207a65726f0000000000000000000060448201526064016105b0565b6000816101600135116114f35760405162461bcd60e51b815260206004820152601560248201527f416d6f756e742063616e6e6f74206265207a65726f000000000000000000000060448201526064016105b0565b6000816101800135116115485760405162461bcd60e51b815260206004820152601760248201527f5175616e746974792063616e6e6f74206265207a65726f00000000000000000060448201526064016105b0565b826000611554826108d8565b9050600061156182612109565b905061157581610f336101c08601866127d4565b6001600160a01b031661158e6040850160208601612568565b6001600160a01b0316146115e45760405162461bcd60e51b815260206004820152601360248201527f496e76616c6964206269642064657461696c730000000000000000000000000060448201526064016105b0565b6115f16020870187612568565b6001600160a01b0316336001600160a01b0316146116775760405162461bcd60e51b815260206004820152602660248201527f4f6e6c79206f726465722073656c6c65722063616e2063616c6c20746869732060448201527f6d6574686f64000000000000000000000000000000000000000000000000000060648201526084016105b0565b6000611682876105c7565b90506116a687826116996040830160208401612568565b610db460208c018c612568565b6116b66040880160208901612568565b6001600160a01b03166101408801356116d260208a018a612568565b6001600160a01b03167fec34853c156da04e4792f1c735112ae54e5ed52bac58db5014b26746f306a3628a610180013560405161171191815260200190565b60405180910390a45060019695505050505050565b6003546000906001600160a01b031633146117a95760405162461bcd60e51b815260206004820152602160248201527f4f6e6c79207369676e65722063616e20616c6c20746869732066756e6374696f60448201527f6e0000000000000000000000000000000000000000000000000000000000000060648201526084016105b0565b60016117bb60a08401608085016125a8565b60018111156117cc576117cc6125eb565b0361188a576001546201000090046001600160a01b031663f709b9066117f86080850160608601612568565b6118056020860186612568565b6118156040870160208801612568565b60405160e085901b6001600160e01b03191681526001600160a01b039384166004820152918316602483015290911660448201526101408501356064820152608401600060405180830381600087803b15801561187157600080fd5b505af1158015611885573d6000803e3d6000fd5b505050505b600061189c60a08401608085016125a8565b60018111156118ad576118ad6125eb565b03611984576001546201000090046001600160a01b0316639c1c2ee96118d96080850160608601612568565b6118e66020860186612568565b6118f66040870160208801612568565b60405160e085901b6001600160e01b03191681526001600160a01b039384166004820152918316602483015290911660448201526101408501356064820152610180850135608482015260c060a4820152600060c482015260e401600060405180830381600087803b15801561196b57600080fd5b505af115801561197f573d6000803e3d6000fd5b505050505b6119946040830160208401612568565b6001600160a01b03166101408301356119b06020850185612568565b6001600160a01b03167fb10197cef009fd301a90b892d25451c22c3701eb18ee2df1250d31e514fff3948561018001356040516119ef91815260200190565b60405180910390a4506001919050565b611a0981336121c3565b50565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166105c3576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055611a663390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16156105c3576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600080611b358361046a565b90506000611b4282612109565b9050611b5681610f336101a08701876127d4565b6001600160a01b0316611b6c6020860186612568565b6001600160a01b031614611bc25760405162461bcd60e51b815260206004820152601560248201527f496e76616c6964206f726465722064657461696c73000000000000000000000060448201526064016105b0565b611bcb81610e42565b15611c185760405162461bcd60e51b815260206004820152600c60248201527f4f7264657220636c6f736564000000000000000000000000000000000000000060448201526064016105b0565b60008181526004602052604081206001015460ff166003811115611c3e57611c3e6125eb565b03611c6d57600081815260046020526040902060c085013581556001908101805460ff19169091179055611d53565b600160008281526004602052604090206001015460ff166003811115611c9557611c956125eb565b03611d53576000818152600460205260409020546101808501351115611cfd5760405162461bcd60e51b815260206004820152601960248201527f4f72646572205175616e7469747920697320696e76616c69640000000000000060448201526064016105b0565b600081815260046020526040812054611d1c9061018087013590612715565b905080600003611d43576000828152600460205260409020600101805460ff191660021790555b6000828152600460205260409020555b5060019392505050565b6001611d6f60a08601608087016125a8565b6001811115611d8057611d806125eb565b03611e21576001546201000090046001600160a01b031663f709b906611dac6080870160608801612568565b6040516001600160e01b031960e084901b1681526001600160a01b039182166004820152818516602482015290851660448201526101408701356064820152608401600060405180830381600087803b158015611e0857600080fd5b505af1158015611e1c573d6000803e3d6000fd5b505050505b6000611e3360a08601608087016125a8565b6001811115611e4457611e446125eb565b03611efe576001546201000090046001600160a01b0316639c1c2ee9611e706080870160608801612568565b6040516001600160e01b031960e084901b1681526001600160a01b039182166004820152818516602482015290851660448201526101408701356064820152610180870135608482015260c060a4820152600060c482015260e401600060405180830381600087803b158015611ee557600080fd5b505af1158015611ef9573d6000803e3d6000fd5b505050505b825115611fa1576001546201000090046001600160a01b031663776062c3611f2c6060870160408801612568565b600254865160405160e085901b6001600160e01b03191681526001600160a01b03938416600482015283881660248201529290911660448301526064820152608401600060405180830381600087803b158015611f8857600080fd5b505af1158015611f9c573d6000803e3d6000fd5b505050505b60008360400151118015611fc35750611fc1610100850160e086016125c9565b155b15612069576001546201000090046001600160a01b031663776062c3611fef6060870160408801612568565b608086015160408088015190516001600160e01b031960e086901b1681526001600160a01b03938416600482015283881660248201529290911660448301526064820152608401600060405180830381600087803b15801561205057600080fd5b505af1158015612064573d6000803e3d6000fd5b505050505b6001546201000090046001600160a01b031663776062c36120906060870160408801612568565b60208601516040516001600160e01b031960e085901b1681526001600160a01b039283166004820152828716602482015291851660448301526064820152608401600060405180830381600087803b1580156120eb57600080fd5b505af11580156120ff573d6000803e3d6000fd5b5050505050505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c016104ef565b60008060008061215385612236565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa1580156121ae573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166105c3576121f4816122aa565b6121ff8360206122bc565b604051602001612210929190612852565b60408051601f198184030181529082905262461bcd60e51b82526105b0916004016128d3565b6000806000835160411461228c5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064016105b0565b50505060208101516040820151606090920151909260009190911a90565b60606104646001600160a01b03831660145b606060006122cb8360026126d4565b6122d690600261272c565b67ffffffffffffffff8111156122ee576122ee612906565b6040519080825280601f01601f191660200182016040528015612318576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061234f5761234f61291c565b60200101906001600160f81b031916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061239a5761239a61291c565b60200101906001600160f81b031916908160001a90535060006123be8460026126d4565b6123c990600161272c565b90505b600181111561244e577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061240a5761240a61291c565b1a60f81b8282815181106124205761242061291c565b60200101906001600160f81b031916908160001a90535060049490941c9361244781612932565b90506123cc565b50831561249d5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016105b0565b9392505050565b6000602082840312156124b657600080fd5b81356001600160e01b03198116811461249d57600080fd5b6000602082840312156124e057600080fd5b813567ffffffffffffffff8111156124f757600080fd5b82016101e0818503121561249d57600080fd5b60006020828403121561251c57600080fd5b5035919050565b6001600160a01b0381168114611a0957600080fd5b6000806040838503121561254b57600080fd5b82359150602083013561255d81612523565b809150509250929050565b60006020828403121561257a57600080fd5b813561249d81612523565b60006020828403121561259757600080fd5b813560ff8116811461249d57600080fd5b6000602082840312156125ba57600080fd5b81356002811061249d57600080fd5b6000602082840312156125db57600080fd5b8135801515811461249d57600080fd5b634e487b7160e01b600052602160045260246000fd5b6002811061261f57634e487b7160e01b600052602160045260246000fd5b60f81b9052565b60006bffffffffffffffffffffffff19808d60601b168352808c60601b166014840152808b60601b16602884015250612662603c83018a612601565b50603d810196909652605d86019490945291151560f81b607d850152607e840152609e83015260be82015260de01949350505050565b634e487b7160e01b600052601160045260246000fd5b600061ffff8083168185168083038211156126cb576126cb612698565b01949350505050565b60008160001904831182151516156126ee576126ee612698565b500290565b60008261271057634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561272757612727612698565b500390565b6000821982111561273f5761273f612698565b500190565b6000806040838503121561275757600080fd5b825161276281612523565b6020939093015192949293505050565b60006bffffffffffffffffffffffff19808b60601b168352808a60601b166014840152808960601b166028840152506127ae603c830188612601565b50603d810194909452605d840192909252607d830152609d82015260bd01949350505050565b6000808335601e198436030181126127eb57600080fd5b83018035915067ffffffffffffffff82111561280657600080fd5b60200191503681900382131561281b57600080fd5b9250929050565b60005b8381101561283d578181015183820152602001612825565b8381111561284c576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161288a816017850160208801612822565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516128c7816028840160208801612822565b01602801949350505050565b60208152600082518060208401526128f2816040850160208701612822565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008161294157612941612698565b50600019019056fea2646970667358221220c4aba6ac9cee5ca512ba2565ea368902c0ab74270c372654ebfcbdd9bdcc7b7e64736f6c634300080e0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:657:81",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:81",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "72:102:81",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "82:22:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "91:5:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "91:13:81"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "82:5:81"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "152:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "161:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "164:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "154:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "154:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "154:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:81"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:81"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "144:4:81",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:16:81"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:27:81"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:35:81"
                  },
                  "nodeType": "YulIf",
                  "src": "113:55:81"
                }
              ]
            },
            "name": "abi_decode_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "51:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "62:5:81",
                "type": ""
              }
            ],
            "src": "14:160:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "314:341:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "360:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "369:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "372:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "362:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "362:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "362:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "335:7:81"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "344:9:81"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "331:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "331:23:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "356:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "327:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "327:32:81"
                  },
                  "nodeType": "YulIf",
                  "src": "324:52:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "385:48:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "423:9:81"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint8_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "395:27:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "395:38:81"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "385:6:81"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "442:57:81",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "484:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "495:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "480:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:18:81"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint8_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "452:27:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "452:47:81"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "442:6:81"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "508:38:81",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "531:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "542:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "527:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "527:18:81"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "521:5:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "521:25:81"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "512:5:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "609:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "618:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "621:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "611:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "611:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "611:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "568:5:81"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "579:5:81"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "594:3:81",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "599:1:81",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "590:3:81"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "590:11:81"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "603:1:81",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "586:3:81"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "586:19:81"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "575:3:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "575:31:81"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "565:2:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "565:42:81"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "558:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "558:50:81"
                  },
                  "nodeType": "YulIf",
                  "src": "555:70:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "634:15:81",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "644:5:81"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "634:6:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8t_uint8t_contract$_ITransferProxy_$14765_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "264:9:81",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "275:7:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "287:6:81",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "295:6:81",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "303:6:81",
                "type": ""
              }
            ],
            "src": "179:476:81"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_uint8_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint8t_uint8t_contract$_ITransferProxy_$14765_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint8_fromMemory(headStart)\n        value1 := abi_decode_uint8_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value2 := value\n    }\n}",
      "id": 81,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:22623:81",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:81",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:263:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "129:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "138:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "141:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "131:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "131:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "131:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "104:7:81"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "113:9:81"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "100:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "100:23:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "125:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "96:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:32:81"
                  },
                  "nodeType": "YulIf",
                  "src": "93:52:81"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "154:36:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "180:9:81"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "167:12:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "167:23:81"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "158:5:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "300:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "309:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "312:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "302:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "302:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "302:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "212:5:81"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "223:5:81"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "230:66:81",
                                "type": "",
                                "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "219:3:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "219:78:81"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "209:2:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "209:89:81"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "202:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "202:97:81"
                  },
                  "nodeType": "YulIf",
                  "src": "199:117:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "325:15:81",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "335:5:81"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "325:6:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "49:9:81",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "60:7:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "72:6:81",
                "type": ""
              }
            ],
            "src": "14:332:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "446:92:81",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "456:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "468:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "479:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "464:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "464:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "456:4:81"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "498:9:81"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "523:6:81"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "516:6:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "516:14:81"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "509:6:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "509:22:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "491:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "491:41:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "491:41:81"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "415:9:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "426:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "437:4:81",
                "type": ""
              }
            ],
            "src": "351:187:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "639:290:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "685:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "694:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "697:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "687:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "687:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "687:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "660:7:81"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "669:9:81"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "656:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "656:23:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "681:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "652:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "652:32:81"
                  },
                  "nodeType": "YulIf",
                  "src": "649:52:81"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "710:37:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "737:9:81"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "724:12:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "724:23:81"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "714:6:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "790:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "799:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "802:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "792:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "792:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "792:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "762:6:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "770:18:81",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "759:2:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "759:30:81"
                  },
                  "nodeType": "YulIf",
                  "src": "756:50:81"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "815:32:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "829:9:81"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "840:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "825:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "825:22:81"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "819:2:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "886:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "895:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "898:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "888:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "888:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "888:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "867:7:81"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "876:2:81"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "863:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "863:16:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "881:3:81",
                        "type": "",
                        "value": "480"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "859:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "859:26:81"
                  },
                  "nodeType": "YulIf",
                  "src": "856:46:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "911:12:81",
                  "value": {
                    "name": "_1",
                    "nodeType": "YulIdentifier",
                    "src": "921:2:81"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "911:6:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_Order_$14868_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "605:9:81",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "616:7:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "628:6:81",
                "type": ""
              }
            ],
            "src": "543:386:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1035:76:81",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1045:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1057:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1068:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1053:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1053:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1045:4:81"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1087:9:81"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1098:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1080:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1080:25:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1080:25:81"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1004:9:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1015:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1026:4:81",
                "type": ""
              }
            ],
            "src": "934:177:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1217:125:81",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1227:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1239:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1250:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1235:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1235:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1227:4:81"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1269:9:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1284:6:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1292:42:81",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1280:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1280:55:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1262:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1262:74:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1262:74:81"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1186:9:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1197:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1208:4:81",
                "type": ""
              }
            ],
            "src": "1116:226:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1417:110:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1463:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1472:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1475:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1465:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1465:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1465:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1438:7:81"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1447:9:81"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1434:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1434:23:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1459:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1430:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1430:32:81"
                  },
                  "nodeType": "YulIf",
                  "src": "1427:52:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1488:33:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1511:9:81"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1498:12:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1498:23:81"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1488:6:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1383:9:81",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1394:7:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1406:6:81",
                "type": ""
              }
            ],
            "src": "1347:180:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1577:109:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1664:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1673:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1676:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1666:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1666:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1666:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1600:5:81"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1611:5:81"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1618:42:81",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1607:3:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1607:54:81"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1597:2:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1597:65:81"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1590:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1590:73:81"
                  },
                  "nodeType": "YulIf",
                  "src": "1587:93:81"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1566:5:81",
                "type": ""
              }
            ],
            "src": "1532:154:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1778:228:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1824:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1833:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1836:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1826:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1826:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1826:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1799:7:81"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1808:9:81"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1795:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1795:23:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1820:2:81",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1791:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1791:32:81"
                  },
                  "nodeType": "YulIf",
                  "src": "1788:52:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1849:33:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1872:9:81"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1859:12:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1859:23:81"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1849:6:81"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1891:45:81",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1921:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1932:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1917:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1917:18:81"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1904:12:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1904:32:81"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1895:5:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1970:5:81"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1945:24:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1945:31:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1945:31:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1985:15:81",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1995:5:81"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1985:6:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1736:9:81",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1747:7:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1759:6:81",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1767:6:81",
                "type": ""
              }
            ],
            "src": "1691:315:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2156:385:81",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2166:27:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2178:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2189:3:81",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2174:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2174:19:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2166:4:81"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2209:9:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2226:6:81"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2220:5:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2220:13:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2202:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2202:32:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2202:32:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2254:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2265:4:81",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2250:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2250:20:81"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2282:6:81"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2290:4:81",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2278:3:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2278:17:81"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2272:5:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2272:24:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2243:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2243:54:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2243:54:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2317:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2328:4:81",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2313:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2313:20:81"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2345:6:81"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2353:4:81",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2341:3:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2341:17:81"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2335:5:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2335:24:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2306:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2306:54:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2306:54:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2380:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2391:4:81",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2376:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2376:20:81"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2408:6:81"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2416:4:81",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2404:3:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2404:17:81"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2398:5:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2398:24:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2369:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2369:54:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2369:54:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2443:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2454:4:81",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2439:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2439:20:81"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2475:6:81"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2483:4:81",
                                    "type": "",
                                    "value": "0x80"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2471:3:81"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2471:17:81"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "2465:5:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2465:24:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2491:42:81",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2461:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2461:73:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2432:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2432:103:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2432:103:81"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Fee_$14836_memory_ptr__to_t_struct$_Fee_$14836_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2125:9:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2136:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2147:4:81",
                "type": ""
              }
            ],
            "src": "2011:530:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2643:87:81",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2653:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2665:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2676:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2661:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2661:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2653:4:81"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2695:9:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2710:6:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2718:4:81",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2706:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2706:17:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2688:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2688:36:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2688:36:81"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2612:9:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2623:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2634:4:81",
                "type": ""
              }
            ],
            "src": "2546:184:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2805:177:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2851:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2860:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2863:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2853:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2853:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2853:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2826:7:81"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2835:9:81"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2822:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2822:23:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2847:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2818:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2818:32:81"
                  },
                  "nodeType": "YulIf",
                  "src": "2815:52:81"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2876:36:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2902:9:81"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2889:12:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2889:23:81"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2880:5:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2946:5:81"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2921:24:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2921:31:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2921:31:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2961:15:81",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2971:5:81"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2961:6:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2771:9:81",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2782:7:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2794:6:81",
                "type": ""
              }
            ],
            "src": "2735:247:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3112:125:81",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3122:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3134:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3145:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3130:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3130:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3122:4:81"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3164:9:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3179:6:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3187:42:81",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3175:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3175:55:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3157:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3157:74:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3157:74:81"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ITransferProxy_$14765__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3081:9:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3092:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3103:4:81",
                "type": ""
              }
            ],
            "src": "2987:250:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3310:201:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3356:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3365:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3368:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3358:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3358:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3358:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3331:7:81"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3340:9:81"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3327:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3327:23:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3352:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3323:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3323:32:81"
                  },
                  "nodeType": "YulIf",
                  "src": "3320:52:81"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3381:36:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3407:9:81"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3394:12:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3394:23:81"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3385:5:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3465:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3474:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3477:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3467:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3467:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3467:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3439:5:81"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3450:5:81"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3457:4:81",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3446:3:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3446:16:81"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3436:2:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3436:27:81"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3429:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3429:35:81"
                  },
                  "nodeType": "YulIf",
                  "src": "3426:55:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3490:15:81",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3500:5:81"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3490:6:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3276:9:81",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3287:7:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3299:6:81",
                "type": ""
              }
            ],
            "src": "3242:269:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3607:186:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3653:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3662:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3665:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3655:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3655:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3655:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3628:7:81"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3637:9:81"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3624:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3624:23:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3649:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3620:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3620:32:81"
                  },
                  "nodeType": "YulIf",
                  "src": "3617:52:81"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3678:36:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3704:9:81"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3691:12:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3691:23:81"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3682:5:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3747:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3756:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3759:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3749:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3749:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3749:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3736:5:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3743:1:81",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3733:2:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3733:12:81"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3726:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3726:20:81"
                  },
                  "nodeType": "YulIf",
                  "src": "3723:40:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3772:15:81",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3782:5:81"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3772:6:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_BuyingAssetType_$14775",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3573:9:81",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3584:7:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3596:6:81",
                "type": ""
              }
            ],
            "src": "3516:277:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3865:206:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3911:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3920:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3923:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3913:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3913:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3913:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3886:7:81"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3895:9:81"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3882:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3882:23:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3907:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3878:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3878:32:81"
                  },
                  "nodeType": "YulIf",
                  "src": "3875:52:81"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3936:36:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3962:9:81"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3949:12:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3949:23:81"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3940:5:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4025:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4034:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4037:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4027:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4027:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4027:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3994:5:81"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4015:5:81"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4008:6:81"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4008:13:81"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4001:6:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4001:21:81"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3991:2:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3991:32:81"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3984:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3984:40:81"
                  },
                  "nodeType": "YulIf",
                  "src": "3981:60:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4050:15:81",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4060:5:81"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4050:6:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3831:9:81",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3842:7:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3854:6:81",
                "type": ""
              }
            ],
            "src": "3798:273:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4108:152:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4125:1:81",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4128:77:81",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4118:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4118:88:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4118:88:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4222:1:81",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4225:4:81",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4215:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4215:15:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4215:15:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4246:1:81",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4249:4:81",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4239:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4239:15:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4239:15:81"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "4076:184:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4322:253:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4364:168:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4385:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4388:77:81",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4378:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4378:88:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4378:88:81"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4486:1:81",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4489:4:81",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4479:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4479:15:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4479:15:81"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4514:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4517:4:81",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4507:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4507:15:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4507:15:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4345:5:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4352:1:81",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4342:2:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4342:12:81"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4335:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4335:20:81"
                  },
                  "nodeType": "YulIf",
                  "src": "4332:200:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4548:3:81"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4557:3:81",
                            "type": "",
                            "value": "248"
                          },
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4562:5:81"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4553:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4553:15:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4541:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4541:28:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4541:28:81"
                }
              ]
            },
            "name": "abi_encode_enum_BuyingAssetType",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4306:5:81",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4313:3:81",
                "type": ""
              }
            ],
            "src": "4265:310:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4964:556:81",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4974:41:81",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4988:26:81",
                        "type": "",
                        "value": "0xffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "4984:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4984:31:81"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4978:2:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5031:3:81"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5044:2:81",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5048:6:81"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5040:3:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5040:15:81"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5057:2:81"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5036:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5036:24:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5024:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5024:37:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5024:37:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5081:3:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5086:2:81",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5077:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5077:12:81"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5099:2:81",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "5103:6:81"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5095:3:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5095:15:81"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5112:2:81"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5091:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5091:24:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5070:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5070:46:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5070:46:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5136:3:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5141:2:81",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5132:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5132:12:81"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5154:2:81",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "5158:6:81"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5150:3:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5150:15:81"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5167:2:81"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5146:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5146:24:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5125:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5125:46:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5125:46:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5212:6:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5224:3:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5229:2:81",
                            "type": "",
                            "value": "60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5220:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5220:12:81"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_BuyingAssetType",
                      "nodeType": "YulIdentifier",
                      "src": "5180:31:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5180:53:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5180:53:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5253:3:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5258:2:81",
                            "type": "",
                            "value": "61"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5249:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5249:12:81"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "5263:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5242:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5242:28:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5242:28:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5290:3:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5295:2:81",
                            "type": "",
                            "value": "93"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5286:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5286:12:81"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "5300:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5279:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5279:28:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5279:28:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5327:3:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5332:3:81",
                            "type": "",
                            "value": "125"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5323:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5323:13:81"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5342:3:81",
                            "type": "",
                            "value": "248"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "5361:6:81"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5354:6:81"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5354:14:81"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5347:6:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5347:22:81"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5338:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5338:32:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5316:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5316:55:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5316:55:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5391:3:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5396:3:81",
                            "type": "",
                            "value": "126"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5387:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5387:13:81"
                      },
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "5402:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5380:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5380:29:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5380:29:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5429:3:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5434:3:81",
                            "type": "",
                            "value": "158"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5425:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5425:13:81"
                      },
                      {
                        "name": "value8",
                        "nodeType": "YulIdentifier",
                        "src": "5440:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5418:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5418:29:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5418:29:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5467:3:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5472:3:81",
                            "type": "",
                            "value": "190"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5463:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5463:13:81"
                      },
                      {
                        "name": "value9",
                        "nodeType": "YulIdentifier",
                        "src": "5478:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5456:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5456:29:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5456:29:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5494:20:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5505:3:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5510:3:81",
                        "type": "",
                        "value": "222"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5501:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5501:13:81"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5494:3:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address_t_address_t_enum$_BuyingAssetType_$14775_t_uint256_t_uint256_t_bool_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint8_t_uint256_t_uint256_t_bool_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4868:3:81",
                "type": ""
              },
              {
                "name": "value9",
                "nodeType": "YulTypedName",
                "src": "4873:6:81",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "4881:6:81",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "4889:6:81",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "4897:6:81",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "4905:6:81",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4913:6:81",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4921:6:81",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4929:6:81",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4937:6:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4945:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4956:3:81",
                "type": ""
              }
            ],
            "src": "4580:940:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5699:237:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5716:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5727:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5709:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5709:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5709:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5750:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5761:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5746:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5746:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5766:2:81",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5739:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5739:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5739:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5789:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5800:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5785:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5785:18:81"
                      },
                      {
                        "hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5805:34:81",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5778:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5778:62:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5778:62:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5860:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5871:2:81",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5856:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5856:18:81"
                      },
                      {
                        "hexValue": "20726f6c657320666f722073656c66",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5876:17:81",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5849:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5849:45:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5849:45:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5903:27:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5915:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5926:3:81",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5911:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5911:19:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5903:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5676:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5690:4:81",
                "type": ""
              }
            ],
            "src": "5525:411:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5973:152:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5990:1:81",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5993:77:81",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5983:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5983:88:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5983:88:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6087:1:81",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6090:4:81",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6080:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6080:15:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6080:15:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6111:1:81",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6114:4:81",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6104:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6104:15:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6104:15:81"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "5941:184:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6177:177:81",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6187:16:81",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6197:6:81",
                    "type": "",
                    "value": "0xffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6191:2:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6212:21:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6227:1:81"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6230:2:81"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6223:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6223:10:81"
                  },
                  "variables": [
                    {
                      "name": "x_1",
                      "nodeType": "YulTypedName",
                      "src": "6216:3:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6242:21:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6257:1:81"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6260:2:81"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6253:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6253:10:81"
                  },
                  "variables": [
                    {
                      "name": "y_1",
                      "nodeType": "YulTypedName",
                      "src": "6246:3:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6297:22:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6299:16:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6299:18:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6299:18:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "6278:3:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6287:2:81"
                          },
                          {
                            "name": "y_1",
                            "nodeType": "YulIdentifier",
                            "src": "6291:3:81"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6283:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6283:12:81"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6275:2:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6275:21:81"
                  },
                  "nodeType": "YulIf",
                  "src": "6272:47:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6328:20:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "6339:3:81"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "6344:3:81"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6335:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6335:13:81"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6328:3:81"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6160:1:81",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6163:1:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6169:3:81",
                "type": ""
              }
            ],
            "src": "6130:224:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6411:116:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6470:22:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6472:16:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6472:18:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6472:18:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6442:1:81"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6435:6:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6435:9:81"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6428:6:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6428:17:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6450:1:81"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6461:1:81",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6457:3:81"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6457:6:81"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6465:1:81"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "6453:3:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6453:14:81"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6447:2:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6447:21:81"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6424:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6424:45:81"
                  },
                  "nodeType": "YulIf",
                  "src": "6421:71:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6501:20:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6516:1:81"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6519:1:81"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "6512:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6512:9:81"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "6501:7:81"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6390:1:81",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6393:1:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "6399:7:81",
                "type": ""
              }
            ],
            "src": "6359:168:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6578:228:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6609:168:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6630:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6633:77:81",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6623:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6623:88:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6623:88:81"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6731:1:81",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6734:4:81",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6724:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6724:15:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6724:15:81"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6759:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6762:4:81",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6752:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6752:15:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6752:15:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6598:1:81"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6591:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6591:9:81"
                  },
                  "nodeType": "YulIf",
                  "src": "6588:189:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6786:14:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6795:1:81"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6798:1:81"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "6791:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6791:9:81"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "6786:1:81"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6563:1:81",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6566:1:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "6572:1:81",
                "type": ""
              }
            ],
            "src": "6532:274:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6860:76:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6882:22:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6884:16:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6884:18:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6884:18:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6876:1:81"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6879:1:81"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6873:2:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6873:8:81"
                  },
                  "nodeType": "YulIf",
                  "src": "6870:34:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6913:17:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6925:1:81"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6928:1:81"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6921:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6921:9:81"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "6913:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6842:1:81",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6845:1:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "6851:4:81",
                "type": ""
              }
            ],
            "src": "6811:125:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6989:80:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7016:22:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7018:16:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7018:18:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7018:18:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7005:1:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7012:1:81"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7008:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7008:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7002:2:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7002:13:81"
                  },
                  "nodeType": "YulIf",
                  "src": "6999:39:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7047:16:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7058:1:81"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7061:1:81"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7054:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7054:9:81"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7047:3:81"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6972:1:81",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6975:1:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6981:3:81",
                "type": ""
              }
            ],
            "src": "6941:128:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7203:119:81",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7213:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7225:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7236:2:81",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7221:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7221:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7213:4:81"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7255:9:81"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7266:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7248:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7248:25:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7248:25:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7293:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7304:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7289:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7289:18:81"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7309:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7282:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7282:34:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7282:34:81"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7164:9:81",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7175:6:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7183:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7194:4:81",
                "type": ""
              }
            ],
            "src": "7074:248:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7425:214:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7471:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7480:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7483:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7473:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7473:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7473:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7446:7:81"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7455:9:81"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7442:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7442:23:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7467:2:81",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7438:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7438:32:81"
                  },
                  "nodeType": "YulIf",
                  "src": "7435:52:81"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7496:29:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7515:9:81"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7509:5:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7509:16:81"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7500:5:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7559:5:81"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "7534:24:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7534:31:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7534:31:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7574:15:81",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7584:5:81"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7574:6:81"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7598:35:81",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7618:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7629:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7614:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7614:18:81"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7608:5:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7608:25:81"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7598:6:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7383:9:81",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7394:7:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7406:6:81",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7414:6:81",
                "type": ""
              }
            ],
            "src": "7327:312:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7818:182:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7835:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7846:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7828:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7828:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7828:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7869:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7880:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7865:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7865:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7885:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7858:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7858:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7858:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7908:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7919:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7904:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7904:18:81"
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e20616c6c20746869732066756e6374696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7924:34:81",
                        "type": "",
                        "value": "Only owner can all this function"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7897:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7897:62:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7897:62:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7968:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7980:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7991:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7976:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7976:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7968:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_51ad396264f84709ad4269026509e9a624e8487203b518fbe12cbf6e3bd45edc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7795:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7809:4:81",
                "type": ""
              }
            ],
            "src": "7644:356:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8179:170:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8196:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8207:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8189:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8189:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8189:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8230:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8241:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8226:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8226:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8246:2:81",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8219:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8219:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8219:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8269:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8280:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8265:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8265:18:81"
                      },
                      {
                        "hexValue": "5369676e65722076616c75652069732073616d65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8285:22:81",
                        "type": "",
                        "value": "Signer value is same"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8258:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8258:50:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8258:50:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8317:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8329:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8340:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8325:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8325:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8317:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b330f54cb3b506e1ff7dd011cf0af03f672b9aa361bc07d55d3a09f4938be41c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8156:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8170:4:81",
                "type": ""
              }
            ],
            "src": "8005:344:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8688:454:81",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8698:41:81",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8712:26:81",
                        "type": "",
                        "value": "0xffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "8708:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8708:31:81"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8702:2:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8755:3:81"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8768:2:81",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "8772:6:81"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "8764:3:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8764:15:81"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8781:2:81"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8760:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8760:24:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8748:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8748:37:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8748:37:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8805:3:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8810:2:81",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8801:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8801:12:81"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8823:2:81",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "8827:6:81"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "8819:3:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8819:15:81"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8836:2:81"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8815:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8815:24:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8794:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8794:46:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8794:46:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8860:3:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8865:2:81",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8856:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8856:12:81"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8878:2:81",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "8882:6:81"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "8874:3:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8874:15:81"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8891:2:81"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8870:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8870:24:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8849:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8849:46:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8849:46:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "8936:6:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8948:3:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8953:2:81",
                            "type": "",
                            "value": "60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8944:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8944:12:81"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_BuyingAssetType",
                      "nodeType": "YulIdentifier",
                      "src": "8904:31:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8904:53:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8904:53:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8977:3:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8982:2:81",
                            "type": "",
                            "value": "61"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8973:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8973:12:81"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "8987:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8966:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8966:28:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8966:28:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9014:3:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9019:2:81",
                            "type": "",
                            "value": "93"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9010:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9010:12:81"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "9024:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9003:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9003:28:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9003:28:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9051:3:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9056:3:81",
                            "type": "",
                            "value": "125"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9047:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9047:13:81"
                      },
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "9062:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9040:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9040:29:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9040:29:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9089:3:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9094:3:81",
                            "type": "",
                            "value": "157"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9085:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9085:13:81"
                      },
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "9100:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9078:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9078:29:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9078:29:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9116:20:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9127:3:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9132:3:81",
                        "type": "",
                        "value": "189"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9123:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9123:13:81"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9116:3:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address_t_address_t_enum$_BuyingAssetType_$14775_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8608:3:81",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "8613:6:81",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "8621:6:81",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "8629:6:81",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "8637:6:81",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8645:6:81",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8653:6:81",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8661:6:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8669:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8680:3:81",
                "type": ""
              }
            ],
            "src": "8354:788:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9321:172:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9338:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9349:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9331:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9331:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9331:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9372:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9383:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9368:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9368:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9388:2:81",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9361:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9361:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9361:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9411:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9422:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9407:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9407:18:81"
                      },
                      {
                        "hexValue": "53656c6c65722063616e6e6f7420626520656d707479",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9427:24:81",
                        "type": "",
                        "value": "Seller cannot be empty"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9400:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9400:52:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9400:52:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9461:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9473:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9484:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9469:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9469:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9461:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0232994d300f1855432717262d46f657ff60402553233f5cab772e9cc006f548__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9298:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9312:4:81",
                "type": ""
              }
            ],
            "src": "9147:346:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9672:171:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9689:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9700:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9682:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9682:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9682:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9723:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9734:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9719:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9719:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9739:2:81",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9712:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9712:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9712:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9762:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9773:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9758:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9758:18:81"
                      },
                      {
                        "hexValue": "42757965722063616e6e6f7420626520656d707479",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9778:23:81",
                        "type": "",
                        "value": "Buyer cannot be empty"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9751:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9751:51:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9751:51:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9811:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9823:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9834:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9819:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9819:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9811:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1fb710e407d3acf7c76b5184aac53e479a04425b545529056daaa017a41197de__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9649:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9663:4:81",
                "type": ""
              }
            ],
            "src": "9498:345:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10022:177:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10039:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10050:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10032:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10032:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10032:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10073:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10084:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10069:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10069:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10089:2:81",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10062:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10062:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10062:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10112:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10123:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10108:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10108:18:81"
                      },
                      {
                        "hexValue": "4e465420416464726573732063616e6e6f7420626520656d707479",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10128:29:81",
                        "type": "",
                        "value": "NFT Address cannot be empty"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10101:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10101:57:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10101:57:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10167:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10179:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10190:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10175:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10175:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10167:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e780f352d098f9a16b0fb7523366752ff32ed4302ddaad054445e5458bac72e7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9999:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10013:4:81",
                "type": ""
              }
            ],
            "src": "9848:351:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10378:176:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10395:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10406:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10388:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10388:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10388:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10429:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10440:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10425:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10425:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10445:2:81",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10418:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10418:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10418:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10468:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10479:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10464:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10464:18:81"
                      },
                      {
                        "hexValue": "41756374696f6e206973206e6f74207374617274656420796574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10484:28:81",
                        "type": "",
                        "value": "Auction is not started yet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10457:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10457:56:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10457:56:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10522:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10534:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10545:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10530:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10530:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10522:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f5a9b8cb24de78b4cc0610fef5a7806abc7253e6b7442e76e50ba2862e966585__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10355:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10369:4:81",
                "type": ""
              }
            ],
            "src": "10204:350:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10733:166:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10750:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10761:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10743:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10743:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10743:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10784:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10795:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10780:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10780:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10800:2:81",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10773:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10773:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10773:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10823:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10834:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10819:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10819:18:81"
                      },
                      {
                        "hexValue": "41756374696f6e20697320656e646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10839:18:81",
                        "type": "",
                        "value": "Auction is ended"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10812:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10812:46:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10812:46:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10867:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10879:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10890:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10875:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10875:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10867:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f6411240398b6c1614d1df84c9aa8aea8046a0212eeb55a9a59b7cc84c1b0939__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10710:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10724:4:81",
                "type": ""
              }
            ],
            "src": "10559:340:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11078:175:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11095:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11106:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11088:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11088:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11088:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11129:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11140:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11125:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11125:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11145:2:81",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11118:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11118:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11118:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11168:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11179:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11164:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11164:18:81"
                      },
                      {
                        "hexValue": "556e69742070726963652063616e6e6f74206265207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11184:27:81",
                        "type": "",
                        "value": "Unit price cannot be zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11157:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11157:55:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11157:55:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11221:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11233:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11244:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11229:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11229:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11221:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_530ab7dc56782b1c8db2179ce8929e7f68bd8990eea5c3b3c18ec0e36f36b331__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11055:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11069:4:81",
                "type": ""
              }
            ],
            "src": "10904:349:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11432:172:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11449:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11460:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11442:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11442:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11442:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11483:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11494:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11479:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11479:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11499:2:81",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11472:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11472:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11472:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11522:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11533:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11518:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11518:18:81"
                      },
                      {
                        "hexValue": "546f6b656e49642063616e6e6f74206265207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11538:24:81",
                        "type": "",
                        "value": "TokenId cannot be zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11511:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11511:52:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11511:52:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11572:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11584:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11595:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11580:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11580:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11572:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_935879e226d4bdb9bd7e7e780091d0a26cb918d532ef3ba1f3e9947deddfc286__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11409:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11423:4:81",
                "type": ""
              }
            ],
            "src": "11258:346:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11783:171:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11800:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11811:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11793:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11793:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11793:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11834:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11845:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11830:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11830:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11850:2:81",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11823:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11823:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11823:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11873:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11884:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11869:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11869:18:81"
                      },
                      {
                        "hexValue": "416d6f756e742063616e6e6f74206265207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11889:23:81",
                        "type": "",
                        "value": "Amount cannot be zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11862:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11862:51:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11862:51:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11922:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11934:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11945:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11930:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11930:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11922:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8beea76deddeff1012d90e1e8da369393f885b0575eb094a33da9912cc4bbb8b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11760:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11774:4:81",
                "type": ""
              }
            ],
            "src": "11609:345:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12133:173:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12150:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12161:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12143:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12143:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12143:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12184:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12195:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12180:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12180:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12200:2:81",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12173:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12173:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12173:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12223:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12234:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12219:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12219:18:81"
                      },
                      {
                        "hexValue": "5175616e746974792063616e6e6f74206265207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12239:25:81",
                        "type": "",
                        "value": "Quantity cannot be zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12212:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12212:53:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12212:53:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12274:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12286:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12297:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12282:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12282:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12274:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_662e76c4c7be31c911ead8c8dc124c282d7230289373f196ee23a95cc629918b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12110:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12124:4:81",
                "type": ""
              }
            ],
            "src": "11959:347:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12485:227:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12502:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12513:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12495:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12495:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12495:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12536:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12547:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12532:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12532:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12552:2:81",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12525:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12525:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12525:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12575:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12586:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12571:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12571:18:81"
                      },
                      {
                        "hexValue": "4f6e6c79206f726465722062757965722063616e2063616c6c2074686973206d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12591:34:81",
                        "type": "",
                        "value": "Only order buyer can call this m"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12564:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12564:62:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12564:62:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12646:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12657:2:81",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12642:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12642:18:81"
                      },
                      {
                        "hexValue": "6574686f64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12662:7:81",
                        "type": "",
                        "value": "ethod"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12635:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12635:35:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12635:35:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12679:27:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12691:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12702:3:81",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12687:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12687:19:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12679:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ba600277e48edf73e4c4cfe3b5ef7ab485c317e94395cf181dcd19efbd5f916e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12462:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12476:4:81",
                "type": ""
              }
            ],
            "src": "12311:401:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12891:169:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12908:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12919:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12901:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12901:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12901:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12942:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12953:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12938:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12938:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12958:2:81",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12931:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12931:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12931:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12981:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12992:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12977:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12977:18:81"
                      },
                      {
                        "hexValue": "5061696420696e76616c696420616d6f756e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12997:21:81",
                        "type": "",
                        "value": "Paid invalid amount"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12970:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12970:49:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12970:49:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13028:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13040:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13051:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13036:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13036:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13028:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1720ac4e2a48e81b9bc85ccf3361a2938d26d92bf9e3070ee081eb99ab7f6caa__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12868:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12882:4:81",
                "type": ""
              }
            ],
            "src": "12717:343:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13166:76:81",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13176:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13188:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13199:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13184:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13184:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13176:4:81"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13218:9:81"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13229:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13211:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13211:25:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13211:25:81"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13135:9:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13146:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13157:4:81",
                "type": ""
              }
            ],
            "src": "13065:177:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13421:176:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13438:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13449:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13431:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13431:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13431:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13472:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13483:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13468:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13468:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13488:2:81",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13461:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13461:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13461:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13511:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13522:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13507:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13507:18:81"
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f74206f726465722073656c6c6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13527:28:81",
                        "type": "",
                        "value": "Caller is not order seller"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13500:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13500:56:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13500:56:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13565:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13577:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13588:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13573:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13573:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13565:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b736b3a4b26bc43c4b574dc3beb4a35e025f1fea386508885f1007a1f18d9143__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13398:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13412:4:81",
                "type": ""
              }
            ],
            "src": "13247:350:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13696:427:81",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13706:51:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr_to_tail",
                        "nodeType": "YulIdentifier",
                        "src": "13745:11:81"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "13732:12:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13732:25:81"
                  },
                  "variables": [
                    {
                      "name": "rel_offset_of_tail",
                      "nodeType": "YulTypedName",
                      "src": "13710:18:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13846:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13855:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13858:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13848:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13848:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13848:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "rel_offset_of_tail",
                            "nodeType": "YulIdentifier",
                            "src": "13780:18:81"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "calldatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "13808:12:81"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13808:14:81"
                                  },
                                  {
                                    "name": "base_ref",
                                    "nodeType": "YulIdentifier",
                                    "src": "13824:8:81"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "13804:3:81"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13804:29:81"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13839:2:81",
                                    "type": "",
                                    "value": "30"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "13835:3:81"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13835:7:81"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13800:3:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13800:43:81"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "13776:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13776:68:81"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13769:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13769:76:81"
                  },
                  "nodeType": "YulIf",
                  "src": "13766:96:81"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13871:47:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "base_ref",
                        "nodeType": "YulIdentifier",
                        "src": "13889:8:81"
                      },
                      {
                        "name": "rel_offset_of_tail",
                        "nodeType": "YulIdentifier",
                        "src": "13899:18:81"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13885:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13885:33:81"
                  },
                  "variables": [
                    {
                      "name": "addr_1",
                      "nodeType": "YulTypedName",
                      "src": "13875:6:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13927:30:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "addr_1",
                        "nodeType": "YulIdentifier",
                        "src": "13950:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "13937:12:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13937:20:81"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "13927:6:81"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14000:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14009:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14012:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14002:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14002:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14002:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13972:6:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13980:18:81",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "13969:2:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13969:30:81"
                  },
                  "nodeType": "YulIf",
                  "src": "13966:50:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14025:25:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "addr_1",
                        "nodeType": "YulIdentifier",
                        "src": "14037:6:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14045:4:81",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14033:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14033:17:81"
                  },
                  "variableNames": [
                    {
                      "name": "addr",
                      "nodeType": "YulIdentifier",
                      "src": "14025:4:81"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14101:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14110:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14113:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14103:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14103:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14103:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "addr",
                        "nodeType": "YulIdentifier",
                        "src": "14066:4:81"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "calldatasize",
                              "nodeType": "YulIdentifier",
                              "src": "14076:12:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14076:14:81"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "14092:6:81"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14072:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14072:27:81"
                      }
                    ],
                    "functionName": {
                      "name": "sgt",
                      "nodeType": "YulIdentifier",
                      "src": "14062:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14062:38:81"
                  },
                  "nodeType": "YulIf",
                  "src": "14059:58:81"
                }
              ]
            },
            "name": "access_calldata_tail_t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base_ref",
                "nodeType": "YulTypedName",
                "src": "13653:8:81",
                "type": ""
              },
              {
                "name": "ptr_to_tail",
                "nodeType": "YulTypedName",
                "src": "13663:11:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "addr",
                "nodeType": "YulTypedName",
                "src": "13679:4:81",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "13685:6:81",
                "type": ""
              }
            ],
            "src": "13602:521:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14302:171:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14319:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14330:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14312:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14312:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14312:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14353:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14364:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14349:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14349:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14369:2:81",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14342:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14342:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14342:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14392:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14403:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14388:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14388:18:81"
                      },
                      {
                        "hexValue": "496e76616c6964206f726465722064657461696c73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14408:23:81",
                        "type": "",
                        "value": "Invalid order details"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14381:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14381:51:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14381:51:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14441:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14453:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14464:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14449:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14449:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14441:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_78a9165f89a9f51c6398b08106809c65c4102ad9fd7f52adf2a2cf61e69e86d0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14279:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14293:4:81",
                "type": ""
              }
            ],
            "src": "14128:345:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14652:182:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14669:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14680:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14662:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14662:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14662:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14703:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14714:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14699:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14699:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14719:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14692:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14692:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14692:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14742:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14753:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14738:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14738:18:81"
                      },
                      {
                        "hexValue": "4f7264657220616c726561647920636f6d706c746564206f722063616e63656c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14758:34:81",
                        "type": "",
                        "value": "Order already complted or cancel"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14731:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14731:62:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14731:62:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14802:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14814:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14825:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14810:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14810:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14802:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0c99eb1f384c1a02d19b903debb028bbe28a4ade3502226eaaa61a9ea9668aab__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14629:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14643:4:81",
                "type": ""
              }
            ],
            "src": "14478:356:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15013:181:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15030:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15041:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15023:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15023:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15023:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15064:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15075:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15060:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15060:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15080:2:81",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15053:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15053:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15053:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15103:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15114:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15099:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15099:18:81"
                      },
                      {
                        "hexValue": "53656c6c65724665655065726d696c6c652076616c75652069732073616d65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15119:33:81",
                        "type": "",
                        "value": "SellerFeePermille value is same"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15092:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15092:61:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15092:61:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15162:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15174:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15185:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15170:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15170:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15162:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e1b6679d28c127b63a0e7639ff84499fdd30665ebfc1a5554ab3f05786b087d7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14990:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15004:4:81",
                "type": ""
              }
            ],
            "src": "14839:355:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15373:180:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15390:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15401:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15383:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15383:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15383:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15424:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15435:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15420:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15420:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15440:2:81",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15413:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15413:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15413:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15463:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15474:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15459:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15459:18:81"
                      },
                      {
                        "hexValue": "42757965724665655065726d696c6c652076616c75652069732073616d65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15479:32:81",
                        "type": "",
                        "value": "BuyerFeePermille value is same"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15452:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15452:60:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15452:60:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15521:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15533:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15544:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15529:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15529:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15521:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_45ab2a59a0e95a2d07251692a1073e091187085eb92f80257f932439a93f4b62__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15350:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15364:4:81",
                "type": ""
              }
            ],
            "src": "15199:354:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15732:169:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15749:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15760:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15742:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15742:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15742:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15783:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15794:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15779:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15779:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15799:2:81",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15772:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15772:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15772:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15822:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15833:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15818:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15818:18:81"
                      },
                      {
                        "hexValue": "496e76616c6964206269642064657461696c73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15838:21:81",
                        "type": "",
                        "value": "Invalid bid details"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15811:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15811:49:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15811:49:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15869:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15881:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15892:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15877:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15877:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15869:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6e68da84f21b80e71d3487e97fb1fff1029163585f2eaa681b648b6d33c0e2fa__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15709:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15723:4:81",
                "type": ""
              }
            ],
            "src": "15558:343:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16080:228:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16097:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16108:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16090:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16090:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16090:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16131:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16142:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16127:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16127:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16147:2:81",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16120:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16120:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16120:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16170:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16181:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16166:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16166:18:81"
                      },
                      {
                        "hexValue": "4f6e6c79206f726465722073656c6c65722063616e2063616c6c207468697320",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16186:34:81",
                        "type": "",
                        "value": "Only order seller can call this "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16159:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16159:62:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16159:62:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16241:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16252:2:81",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16237:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16237:18:81"
                      },
                      {
                        "hexValue": "6d6574686f64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16257:8:81",
                        "type": "",
                        "value": "method"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16230:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16230:36:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16230:36:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16275:27:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16287:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16298:3:81",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16283:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16283:19:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16275:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7781e8c9acdd69da49f1e6194130023eb30523cfd8e98d7d3dc6a8996b296997__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16057:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16071:4:81",
                "type": ""
              }
            ],
            "src": "15906:402:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16487:223:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16504:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16515:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16497:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16497:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16497:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16538:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16549:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16534:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16534:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16554:2:81",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16527:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16527:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16527:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16577:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16588:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16573:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16573:18:81"
                      },
                      {
                        "hexValue": "4f6e6c79207369676e65722063616e20616c6c20746869732066756e6374696f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16593:34:81",
                        "type": "",
                        "value": "Only signer can all this functio"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16566:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16566:62:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16566:62:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16648:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16659:2:81",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16644:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16644:18:81"
                      },
                      {
                        "hexValue": "6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16664:3:81",
                        "type": "",
                        "value": "n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16637:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16637:31:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16637:31:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16677:27:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16689:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16700:3:81",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16685:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16685:19:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16677:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_818e0918d5f8f3c22488584ebd17e1866e4077457a7a7fbab6c59de50fbc5a43__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16464:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16478:4:81",
                "type": ""
              }
            ],
            "src": "16313:397:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16917:294:81",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16927:27:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16939:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16950:3:81",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16935:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16935:19:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16927:4:81"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16963:52:81",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "16973:42:81",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "16967:2:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17031:9:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "17046:6:81"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "17054:2:81"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17042:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17042:15:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17024:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17024:34:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17024:34:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17078:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17089:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17074:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17074:18:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "17098:6:81"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "17106:2:81"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17094:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17094:15:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17067:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17067:43:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17067:43:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17130:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17141:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17126:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17126:18:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "17150:6:81"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "17158:2:81"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17146:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17146:15:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17119:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17119:43:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17119:43:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17182:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17193:2:81",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17178:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17178:18:81"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "17198:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17171:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17171:34:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17171:34:81"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC721_$10465_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16862:9:81",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "16873:6:81",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "16881:6:81",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16889:6:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16897:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16908:4:81",
                "type": ""
              }
            ],
            "src": "16715:496:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17546:418:81",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17556:52:81",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "17566:42:81",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "17560:2:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17624:9:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "17639:6:81"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "17647:2:81"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17635:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17635:15:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17617:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17617:34:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17617:34:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17671:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17682:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17667:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17667:18:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "17691:6:81"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "17699:2:81"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17687:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17687:15:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17660:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17660:43:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17660:43:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17723:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17734:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17719:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17719:18:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "17743:6:81"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "17751:2:81"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17739:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17739:15:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17712:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17712:43:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17712:43:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17775:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17786:2:81",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17771:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17771:18:81"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "17791:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17764:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17764:34:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17764:34:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17818:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17829:3:81",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17814:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17814:19:81"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "17835:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17807:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17807:35:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17807:35:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17862:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17873:3:81",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17858:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17858:19:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17879:3:81",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17851:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17851:32:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17851:32:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17903:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17914:3:81",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17899:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17899:19:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17920:1:81",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17892:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17892:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17892:30:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17931:27:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17943:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17954:3:81",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17939:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17939:19:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17931:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC1155_$8591_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17483:9:81",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "17494:6:81",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "17502:6:81",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "17510:6:81",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "17518:6:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17526:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17537:4:81",
                "type": ""
              }
            ],
            "src": "17216:748:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18143:162:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18160:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18171:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18153:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18153:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18153:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18194:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18205:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18190:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18190:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18210:2:81",
                        "type": "",
                        "value": "12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18183:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18183:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18183:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18233:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18244:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18229:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18229:18:81"
                      },
                      {
                        "hexValue": "4f7264657220636c6f736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18249:14:81",
                        "type": "",
                        "value": "Order closed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18222:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18222:42:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18222:42:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18273:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18285:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18296:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18281:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18281:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18273:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ee7795d41bcacc139a12c4d8a7d29e2e70d3d410cf6ed4eda0b4229156b7a294__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18120:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18134:4:81",
                "type": ""
              }
            ],
            "src": "17969:336:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18484:175:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18501:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18512:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18494:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18494:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18494:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18535:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18546:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18531:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18531:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18551:2:81",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18524:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18524:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18524:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18574:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18585:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18570:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18570:18:81"
                      },
                      {
                        "hexValue": "4f72646572205175616e7469747920697320696e76616c6964",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18590:27:81",
                        "type": "",
                        "value": "Order Quantity is invalid"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18563:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18563:55:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18563:55:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18627:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18639:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18650:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18635:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18635:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18627:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d6b39d85b143f9803d307392c43cc4279a0ab934faeb0976571dd4e99e023a0c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18461:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18475:4:81",
                "type": ""
              }
            ],
            "src": "18310:349:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18864:294:81",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18874:27:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18886:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18897:3:81",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18882:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18882:19:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18874:4:81"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18910:52:81",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "18920:42:81",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "18914:2:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18978:9:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "18993:6:81"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "19001:2:81"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "18989:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18989:15:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18971:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18971:34:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18971:34:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19025:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19036:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19021:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19021:18:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "19045:6:81"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "19053:2:81"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "19041:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19041:15:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19014:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19014:43:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19014:43:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19077:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19088:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19073:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19073:18:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "19097:6:81"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "19105:2:81"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "19093:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19093:15:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19066:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19066:43:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19066:43:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19129:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19140:2:81",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19125:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19125:18:81"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "19145:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19118:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19118:34:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19118:34:81"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$9397_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18809:9:81",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "18820:6:81",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "18828:6:81",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18836:6:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18844:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18855:4:81",
                "type": ""
              }
            ],
            "src": "18664:494:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19383:160:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19400:3:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19405:66:81",
                        "type": "",
                        "value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19393:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19393:79:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19393:79:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "19492:3:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19497:2:81",
                            "type": "",
                            "value": "28"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19488:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19488:12:81"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "19502:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19481:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19481:28:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19481:28:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19518:19:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19529:3:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19534:2:81",
                        "type": "",
                        "value": "60"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19525:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19525:12:81"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "19518:3:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "19359:3:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19364:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "19375:3:81",
                "type": ""
              }
            ],
            "src": "19163:380:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19729:217:81",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19739:27:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19751:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19762:3:81",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19747:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19747:19:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19739:4:81"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19782:9:81"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "19793:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19775:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19775:25:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19775:25:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19820:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19831:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19816:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19816:18:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "19840:6:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19848:4:81",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "19836:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19836:17:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19809:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19809:45:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19809:45:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19874:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19885:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19870:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19870:18:81"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "19890:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19863:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19863:34:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19863:34:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19917:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19928:2:81",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19913:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19913:18:81"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "19933:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19906:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19906:34:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19906:34:81"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19674:9:81",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "19685:6:81",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "19693:6:81",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19701:6:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19709:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19720:4:81",
                "type": ""
              }
            ],
            "src": "19548:398:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20004:205:81",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20014:10:81",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "20023:1:81",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "20018:1:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20083:63:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "20108:3:81"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "20113:1:81"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "20104:3:81"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "20104:11:81"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "20127:3:81"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "20132:1:81"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "20123:3:81"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "20123:11:81"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "20117:5:81"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "20117:18:81"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "20097:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20097:39:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20097:39:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "20044:1:81"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20047:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "20041:2:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20041:13:81"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "20055:19:81",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "20057:15:81",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "20066:1:81"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20069:2:81",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "20062:3:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20062:10:81"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "20057:1:81"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "20037:3:81",
                    "statements": []
                  },
                  "src": "20033:113:81"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20172:31:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "20185:3:81"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "20190:6:81"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "20181:3:81"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "20181:16:81"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20199:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "20174:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20174:27:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20174:27:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "20161:1:81"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20164:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "20158:2:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20158:13:81"
                  },
                  "nodeType": "YulIf",
                  "src": "20155:48:81"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "19982:3:81",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "19987:3:81",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "19992:6:81",
                "type": ""
              }
            ],
            "src": "19951:258:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20603:397:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20620:3:81"
                      },
                      {
                        "hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20625:25:81",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20613:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20613:38:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20613:38:81"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20660:27:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "20680:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "20674:5:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20674:13:81"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "20664:6:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "20722:6:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20730:4:81",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20718:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20718:17:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "20741:3:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20746:2:81",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20737:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20737:12:81"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20751:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "20696:21:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20696:62:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20696:62:81"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20767:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20781:3:81"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20786:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20777:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20777:16:81"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "20771:2:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "20813:2:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20817:2:81",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20809:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20809:11:81"
                      },
                      {
                        "hexValue": "206973206d697373696e6720726f6c6520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20822:19:81",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20802:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20802:40:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20802:40:81"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20851:29:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "20873:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "20867:5:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20867:13:81"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "20855:8:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "20915:6:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20923:4:81",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20911:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20911:17:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "20934:2:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20938:2:81",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20930:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20930:11:81"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "20943:8:81"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "20889:21:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20889:63:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20889:63:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20961:33:81",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "20976:2:81"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "20980:8:81"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20972:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20972:17:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20991:2:81",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20968:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20968:26:81"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "20961:3:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "20571:3:81",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "20576:6:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20584:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "20595:3:81",
                "type": ""
              }
            ],
            "src": "20214:786:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21126:262:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21143:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21154:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21136:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21136:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21136:21:81"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21166:27:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "21186:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21180:5:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21180:13:81"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "21170:6:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21213:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21224:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21209:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21209:18:81"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21229:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21202:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21202:34:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21202:34:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "21271:6:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21279:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21267:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21267:15:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21288:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21299:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21284:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21284:18:81"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21304:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "21245:21:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21245:66:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21245:66:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21320:62:81",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21336:9:81"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "21355:6:81"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21363:2:81",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21351:3:81"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21351:15:81"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21372:2:81",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "21368:3:81"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21368:7:81"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "21347:3:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21347:29:81"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21332:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21332:45:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21379:2:81",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21328:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21328:54:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21320:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21095:9:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21106:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21117:4:81",
                "type": ""
              }
            ],
            "src": "21005:383:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21567:174:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21584:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21595:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21577:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21577:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21577:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21618:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21629:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21614:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21614:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21634:2:81",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21607:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21607:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21607:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21657:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21668:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21653:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21653:18:81"
                      },
                      {
                        "hexValue": "696e76616c6964207369676e6174757265206c656e677468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21673:26:81",
                        "type": "",
                        "value": "invalid signature length"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21646:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21646:54:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21646:54:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21709:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21721:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21732:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21717:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21717:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21709:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21544:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21558:4:81",
                "type": ""
              }
            ],
            "src": "21393:348:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21778:152:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21795:1:81",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21798:77:81",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21788:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21788:88:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21788:88:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21892:1:81",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21895:4:81",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21885:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21885:15:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21885:15:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21916:1:81",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21919:4:81",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "21909:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21909:15:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21909:15:81"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "21746:184:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21967:152:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21984:1:81",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21987:77:81",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21977:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21977:88:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21977:88:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22081:1:81",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22084:4:81",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22074:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22074:15:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22074:15:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22105:1:81",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22108:4:81",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "22098:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22098:15:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22098:15:81"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "21935:184:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22171:89:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22198:22:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "22200:16:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22200:18:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22200:18:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "22191:5:81"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "22184:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22184:13:81"
                  },
                  "nodeType": "YulIf",
                  "src": "22181:39:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22229:25:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "22240:5:81"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22251:1:81",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "22247:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22247:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22236:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22236:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "22229:3:81"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "22153:5:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "22163:3:81",
                "type": ""
              }
            ],
            "src": "22124:136:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22439:182:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22456:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22467:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22449:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22449:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22449:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22490:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22501:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22486:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22486:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22506:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22479:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22479:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22479:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22529:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22540:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22525:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22525:18:81"
                      },
                      {
                        "hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22545:34:81",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22518:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22518:62:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22518:62:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22589:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22601:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22612:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22597:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22597:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22589:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22416:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22430:4:81",
                "type": ""
              }
            ],
            "src": "22265:356:81"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_struct$_Order_$14868_calldata_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if slt(sub(dataEnd, _1), 480) { revert(0, 0) }\n        value0 := _1\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_struct$_Fee_$14836_memory_ptr__to_t_struct$_Fee_$14836_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), and(mload(add(value0, 0x80)), 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_ITransferProxy_$14765__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_enum$_BuyingAssetType_$14775(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 2)) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_BuyingAssetType(value, pos)\n    {\n        if iszero(lt(value, 2))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, shl(248, value))\n    }\n    function abi_encode_tuple_packed_t_address_t_address_t_address_t_enum$_BuyingAssetType_$14775_t_uint256_t_uint256_t_bool_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint8_t_uint256_t_uint256_t_bool_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        mstore(add(pos, 40), and(shl(96, value2), _1))\n        abi_encode_enum_BuyingAssetType(value3, add(pos, 60))\n        mstore(add(pos, 61), value4)\n        mstore(add(pos, 93), value5)\n        mstore(add(pos, 125), shl(248, iszero(iszero(value6))))\n        mstore(add(pos, 126), value7)\n        mstore(add(pos, 158), value8)\n        mstore(add(pos, 190), value9)\n        end := add(pos, 222)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint16(x, y) -> sum\n    {\n        let _1 := 0xffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if gt(x_1, sub(_1, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_51ad396264f84709ad4269026509e9a624e8487203b518fbe12cbf6e3bd45edc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Only owner can all this function\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b330f54cb3b506e1ff7dd011cf0af03f672b9aa361bc07d55d3a09f4938be41c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Signer value is same\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_address_t_address_t_enum$_BuyingAssetType_$14775_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value7, value6, value5, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        mstore(add(pos, 40), and(shl(96, value2), _1))\n        abi_encode_enum_BuyingAssetType(value3, add(pos, 60))\n        mstore(add(pos, 61), value4)\n        mstore(add(pos, 93), value5)\n        mstore(add(pos, 125), value6)\n        mstore(add(pos, 157), value7)\n        end := add(pos, 189)\n    }\n    function abi_encode_tuple_t_stringliteral_0232994d300f1855432717262d46f657ff60402553233f5cab772e9cc006f548__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Seller cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1fb710e407d3acf7c76b5184aac53e479a04425b545529056daaa017a41197de__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Buyer cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e780f352d098f9a16b0fb7523366752ff32ed4302ddaad054445e5458bac72e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"NFT Address cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f5a9b8cb24de78b4cc0610fef5a7806abc7253e6b7442e76e50ba2862e966585__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Auction is not started yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f6411240398b6c1614d1df84c9aa8aea8046a0212eeb55a9a59b7cc84c1b0939__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Auction is ended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_530ab7dc56782b1c8db2179ce8929e7f68bd8990eea5c3b3c18ec0e36f36b331__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Unit price cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_935879e226d4bdb9bd7e7e780091d0a26cb918d532ef3ba1f3e9947deddfc286__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"TokenId cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8beea76deddeff1012d90e1e8da369393f885b0575eb094a33da9912cc4bbb8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Amount cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_662e76c4c7be31c911ead8c8dc124c282d7230289373f196ee23a95cc629918b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Quantity cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ba600277e48edf73e4c4cfe3b5ef7ab485c317e94395cf181dcd19efbd5f916e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Only order buyer can call this m\")\n        mstore(add(headStart, 96), \"ethod\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1720ac4e2a48e81b9bc85ccf3361a2938d26d92bf9e3070ee081eb99ab7f6caa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Paid invalid amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_b736b3a4b26bc43c4b574dc3beb4a35e025f1fea386508885f1007a1f18d9143__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Caller is not order seller\")\n        tail := add(headStart, 96)\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function abi_encode_tuple_t_stringliteral_78a9165f89a9f51c6398b08106809c65c4102ad9fd7f52adf2a2cf61e69e86d0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid order details\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0c99eb1f384c1a02d19b903debb028bbe28a4ade3502226eaaa61a9ea9668aab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Order already complted or cancel\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e1b6679d28c127b63a0e7639ff84499fdd30665ebfc1a5554ab3f05786b087d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"SellerFeePermille value is same\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_45ab2a59a0e95a2d07251692a1073e091187085eb92f80257f932439a93f4b62__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"BuyerFeePermille value is same\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6e68da84f21b80e71d3487e97fb1fff1029163585f2eaa681b648b6d33c0e2fa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid bid details\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7781e8c9acdd69da49f1e6194130023eb30523cfd8e98d7d3dc6a8996b296997__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Only order seller can call this \")\n        mstore(add(headStart, 96), \"method\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_818e0918d5f8f3c22488584ebd17e1866e4077457a7a7fbab6c59de50fbc5a43__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Only signer can all this functio\")\n        mstore(add(headStart, 96), \"n\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_contract$_IERC721_$10465_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_contract$_IERC1155_$8591_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), 192)\n        mstore(add(headStart, 192), 0)\n        tail := add(headStart, 224)\n    }\n    function abi_encode_tuple_t_stringliteral_ee7795d41bcacc139a12c4d8a7d29e2e70d3d410cf6ed4eda0b4229156b7a294__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Order closed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d6b39d85b143f9803d307392c43cc4279a0ab934faeb0976571dd4e99e023a0c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Order Quantity is invalid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$9397_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 81,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "223:16780:80:-:0;;;3812:261;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3930:16;:28;;-1:-1:-1;;;;;4008:30:80;;;;;-1:-1:-1;;;;;;3930:28:80;3968:30;;;3930:28;3968:30;-1:-1:-1;;3968:30:80;;;3930:28;;;;3968:30;;;;;;;;4008;;;;;;;:13;4048:18;;-1:-1:-1;;;;;;4048:18:80;4056:10;4048:18;;;223:16780;;14:160:81;91:13;;144:4;133:16;;123:27;;113:55;;164:1;161;154:12;113:55;14:160;;;:::o;179:476::-;287:6;295;303;356:2;344:9;335:7;331:23;327:32;324:52;;;372:1;369;362:12;324:52;395:38;423:9;395:38;:::i;:::-;385:48;;452:47;495:2;484:9;480:18;452:47;:::i;:::-;542:2;527:18;;521:25;442:57;;-1:-1:-1;;;;;;575:31:81;;565:42;;555:70;;621:1;618;611:12;555:70;644:5;634:15;;;179:476;;;;;:::o;:::-;223:16780:80;;;;;;",
  "deployedSourceMap": "223:16780:80:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:34;;;;;;:::i;:::-;;:::i;:::-;;;516:14:81;;509:22;491:41;;479:2;464:18;2732:202:34;;;;;;;;14376:593:80;;;;;;:::i;:::-;;:::i;:::-;;;1080:25:81;;;1068:2;1053:18;14376:593:80;934:177:81;1116:21:80;;;;;-1:-1:-1;;;;;1116:21:80;;;;;;-1:-1:-1;;;;;1280:55:81;;;1262:74;;1250:2;1235:18;1116:21:80;:226:81;4504:129:34;;;;;;:::i;:::-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129;4929:145;;;;;;:::i;:::-;;:::i;:::-;;6038:214;;;;;;:::i;:::-;;:::i;10892:887:80:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;2147:4:81;2189:3;2178:9;2174:19;2166:27;;2226:6;2220:13;2209:9;2202:32;2290:4;2282:6;2278:17;2272:24;2265:4;2254:9;2250:20;2243:54;2353:4;2345:6;2341:17;2335:24;2328:4;2317:9;2313:20;2306:54;2416:4;2408:6;2404:17;2398:24;2391:4;2380:9;2376:20;2369:54;-1:-1:-1;;;;;2483:4:81;2475:6;2471:17;2465:24;2461:73;2454:4;2443:9;2439:20;2432:103;2011:530;;;;;5762:107:80;5845:17;;;;;;;5762:107;;;2718:4:81;2706:17;;;2688:36;;2676:2;2661:18;5762:107:80;2546:184:81;6516:143:80;;;;;;:::i;:::-;;:::i;1027:35::-;;;;;;;;-1:-1:-1;;;;;1027:35:80;;;15077:501;;;;;;:::i;:::-;;:::i;9830:615::-;;;;;;:::i;:::-;;:::i;1089:20::-;;;;;-1:-1:-1;;;;;1089:20:80;;;6745:214;;;;;;:::i;:::-;;:::i;3021:145:34:-;;;;;;:::i;:::-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:34;;;;;;;;;;;;;;;3021:145;7115:855:80;;;;;;:::i;:::-;;:::i;5576:105::-;5658:16;;;;5576:105;;2153:49:34;;2198:4;2153:49;;6242:217:80;;;;;;:::i;:::-;;:::i;5950:210::-;;;;;;:::i;:::-;;:::i;5354:147:34:-;;;;;;:::i;:::-;;:::i;10451:435:80:-;;;;;;:::i;:::-;;:::i;13447:786::-;;;;;;:::i;:::-;;:::i;2732:202:34:-;2817:4;-1:-1:-1;;;;;;2840:47:34;;2855:32;2840:47;;:87;;-1:-1:-1;952:25:65;-1:-1:-1;;;;;;937:40:65;;;2891:36:34;2833:94;2732:202;-1:-1:-1;;2732:202:34:o;14376:593:80:-;14471:7;14578:12;;;;:5;:12;:::i;:::-;14612:18;;;;;;;;:::i;:::-;14652:16;;;;;;;;:::i;:::-;14690:13;;;;;;;;:::i;:::-;14725:15;;;;14762:22;;;;14806:17;;;;;;;;:::i;:::-;14845:5;:15;;;14882:5;:13;;;14917:5;:13;;;14540:408;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14513:449;;;;;;14494:468;;14376:593;;;:::o;4929:145:34:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;6038:214::-;-1:-1:-1;;;;;6133:23:34;;734:10:62;6133:23:34;6125:83;;;;-1:-1:-1;;;6125:83:34;;5727:2:81;6125:83:34;;;5709:21:81;5766:2;5746:18;;;5739:30;5805:34;5785:18;;;5778:62;5876:17;5856:18;;;5849:45;5911:19;;6125:83:34;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;10892:887:80:-;10952:10;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10952:10:80;11135:16;;10974:20;;;;;;;;;;11128:23;;11135:16;;11128:4;:23;:::i;:::-;11103:49;;11104:19;:12;;;;11119:4;11104:19;:::i;:::-;11103:49;;;;:::i;:::-;11087:65;-1:-1:-1;11162:16:80;11181:20;11087:65;11181:12;;;;:20;:::i;:::-;11240:17;;11162:39;;-1:-1:-1;11211:17:80;;11261:4;;11232:25;;11240:17;;;;;11232:5;:25;:::i;:::-;11231:34;;;;:::i;:::-;11211:54;-1:-1:-1;11289:20:80;11211:54;11289:8;:20;:::i;:::-;11275:34;-1:-1:-1;11337:17:80;;;;;;;;:::i;:::-;11336:18;:139;;;;-1:-1:-1;11389:22:80;11372:13;;;;;;;;:::i;:::-;:39;;;;;;;;:::i;:::-;;11371:103;;;-1:-1:-1;11450:23:80;11433:13;;;;;;;;:::i;:::-;:40;;;;;;;;:::i;:::-;;11371:103;11319:327;;;11538:16;;;;;;;;:::i;:::-;11529:106;;;;;11585:13;;;;11529:106;;;7248:25:81;7289:18;;;7282:34;;;-1:-1:-1;;;;;11529:38:80;;;;;;;7221:18:81;;11529:106:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11500:135;;-1:-1:-1;11500:135:80;-1:-1:-1;11319:327:80;11687:9;11666:18;11674:10;11666:5;:18;:::i;:::-;:30;;;;:::i;:::-;11713:59;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11713:59:80;;;;-1:-1:-1;;;;;;;11713:59:80;;;;;;;;10892:887;-1:-1:-1;;10892:887:80:o;6516:143::-;4129:5;;-1:-1:-1;;;;;4129:5:80;4117:10;:17;4109:61;;;;-1:-1:-1;;;4109:61:80;;7846:2:81;4109:61:80;;;7828:21:81;;;7865:18;;;7858:30;7924:34;7904:18;;;7897:62;7976:18;;4109:61:80;7644:356:81;4109:61:80;6589:6:::1;::::0;-1:-1:-1;;;;;6589:15:80;;::::1;:6:::0;::::1;:15:::0;6581:47:::1;;;::::0;-1:-1:-1;;;6581:47:80;;8207:2:81;6581:47:80::1;::::0;::::1;8189:21:81::0;8246:2;8226:18;;;8219:30;8285:22;8265:18;;;8258:50;8325:18;;6581:47:80::1;8005:344:81::0;6581:47:80::1;6638:6;:14:::0;;;::::1;-1:-1:-1::0;;;;;6638:14:80;;;::::1;::::0;;;::::1;::::0;;6516:143::o;15077:501::-;15171:7;15278:11;;;;;;;;:::i;:::-;15311:18;;;;;;;;:::i;:::-;15351:16;;;;;;;;:::i;:::-;15389:13;;;;;;;;:::i;:::-;15424:5;:15;;;15461:5;:13;;;15496:5;:12;;;15530:5;:9;;;15240:317;;;;;;;;;;;;;;;:::i;9830:615::-;9932:4;9908:5;9932:4;4424:12;;;;9908:5;4424:12;:::i;:::-;-1:-1:-1;;;;;4424:26:80;;4416:61;;;;-1:-1:-1;;;4416:61:80;;9349:2:81;4416:61:80;;;9331:21:81;9388:2;9368:18;;;9361:30;9427:24;9407:18;;;9400:52;9469:18;;4416:61:80;9147:346:81;4416:61:80;4518:1;4495:11;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4495:25:80;;4487:59;;;;-1:-1:-1;;;4487:59:80;;9700:2:81;4487:59:80;;;9682:21:81;9739:2;9719:18;;;9712:30;9778:23;9758:18;;;9751:51;9819:18;;4487:59:80;9498:345:81;4487:59:80;4592:1;4564:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4564:30:80;;4556:70;;;;-1:-1:-1;;;4556:70:80;;10050:2:81;4556:70:80;;;10032:21:81;10089:2;10069:18;;;10062:30;10128:29;10108:18;;;10101:57;10175:18;;4556:70:80;9848:351:81;4556:70:80;4676:15;4657:5;:15;;;:34;;4636:107;;;;-1:-1:-1;;;4636:107:80;;10406:2:81;4636:107:80;;;10388:21:81;10445:2;10425:18;;;10418:30;10484:28;10464:18;;;10457:56;10530:18;;4636:107:80;10204:350:81;4636:107:80;4779:5;:13;;;4761:15;:31;4753:60;;;;-1:-1:-1;;;4753:60:80;;10761:2:81;4753:60:80;;;10743:21:81;10800:2;10780:18;;;10773:30;10839:18;10819;;;10812:46;10875:18;;4753:60:80;10559:340:81;4753:60:80;4849:1;4831:5;:15;;;:19;4823:57;;;;-1:-1:-1;;;4823:57:80;;11106:2:81;4823:57:80;;;11088:21:81;11145:2;11125:18;;;11118:30;11184:27;11164:18;;;11157:55;11229:18;;4823:57:80;10904:349:81;4823:57:80;4914:1;4898:5;:13;;;:17;4890:52;;;;-1:-1:-1;;;4890:52:80;;11460:2:81;4890:52:80;;;11442:21:81;11499:2;11479:18;;;11472:30;11538:24;11518:18;;;11511:52;11580:18;;4890:52:80;11258:346:81;4890:52:80;4975:1;4960:5;:12;;;:16;4952:50;;;;-1:-1:-1;;;4952:50:80;;11811:2:81;4952:50:80;;;11793:21:81;11850:2;11830:18;;;11823:30;11889:23;11869:18;;;11862:51;11930:18;;4952:50:80;11609:345:81;4952:50:80;5032:1;5020:5;:9;;;:13;5012:49;;;;-1:-1:-1;;;5012:49:80;;12161:2:81;5012:49:80;;;12143:21:81;12200:2;12180:18;;;12173:30;12239:25;12219:18;;;12212:53;12282:18;;5012:49:80;11959:347:81;5012:49:80;9972:11:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;9960:23:80::1;:10;-1:-1:-1::0;;;;;9960:23:80::1;;9952:72;;;::::0;-1:-1:-1;;;9952:72:80;;12513:2:81;9952:72:80::1;::::0;::::1;12495:21:81::0;12552:2;12532:18;;;12525:30;12591:34;12571:18;;;12564:62;12662:7;12642:18;;;12635:35;12687:19;;9952:72:80::1;12311:401:81::0;9952:72:80::1;10034:14;10051;10059:5;10051:7;:14::i;:::-;10034:31:::0;-1:-1:-1;10110:27:80::1;10128:9;::::0;::::1;;10110:15;::::0;::::1;;:27;:::i;:::-;10097:3;:9;;;:40;;10075:109;;;::::0;-1:-1:-1;;;10075:109:80;;12919:2:81;10075:109:80::1;::::0;::::1;12901:21:81::0;12958:2;12938:18;;;12931:30;12997:21;12977:18;;;12970:49;13036:18;;10075:109:80::1;12717:343:81::0;10075:109:80::1;10198:38;10230:5;10198:31;:38::i;:::-;10194:223;;;10252:49;10263:5:::0;10270:3;10275:11:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;10288:12;;::::0;::::1;:5:::0;:12:::1;:::i;:::-;10252:10;:49::i;:::-;10369:11;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;10320:61:80::1;10343:13;::::0;::::1;;10329:12;;::::0;::::1;10343:5:::0;10329:12:::1;:::i;:::-;-1:-1:-1::0;;;;;10320:61:80::1;;10358:5;:9;;;10320:61;;;;1080:25:81::0;;1068:2;1053:18;;934:177;10320:61:80::1;;;;;;;;10402:4;10395:11;;;;;10194:223;10433:5;10426:12;;;5071:1;9830:615:::0;;;;:::o;6745:214::-;6808:4;6875:16;6843:21;;;;:10;:21;;;;;:28;;;;;:48;;;;;;;;:::i;:::-;;:109;;;-1:-1:-1;6939:13:80;6907:21;;;;:10;:21;;;;;:28;;;;;:45;;;;;;;;:::i;:::-;;6824:128;6745:214;-1:-1:-1;;6745:214:80:o;7115:855::-;7174:4;7190:23;7216:25;7235:5;7216:18;:25::i;:::-;7190:51;;7251:30;7284:25;7293:15;7284:8;:25::i;:::-;7251:58;-1:-1:-1;7344:10:80;7328:12;;;;:5;:12;:::i;:::-;-1:-1:-1;;;;;7328:26:80;;7320:65;;;;-1:-1:-1;;;7320:65:80;;13449:2:81;7320:65:80;;;13431:21:81;13488:2;13468:18;;;13461:30;13527:28;13507:18;;;13500:56;13573:18;;7320:65:80;13247:350:81;7320:65:80;7448:123;7483:22;7527:26;;;;:5;:26;:::i;:::-;7448:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7448:13:80;;-1:-1:-1;;;7448:123:80:i;:::-;-1:-1:-1;;;;;7416:155:80;:12;;;;:5;:12;:::i;:::-;-1:-1:-1;;;;;7416:155:80;;7395:223;;;;-1:-1:-1;;;7395:223:80;;14330:2:81;7395:223:80;;;14312:21:81;14369:2;14349:18;;;14342:30;14408:23;14388:18;;;14381:51;14449:18;;7395:223:80;14128:345:81;7395:223:80;7650:37;7664:22;7650:13;:37::i;:::-;7649:38;7628:117;;;;-1:-1:-1;;;7628:117:80;;14680:2:81;7628:117:80;;;14662:21:81;;;14699:18;;;14692:30;14758:34;14738:18;;;14731:62;14810:18;;7628:117:80;14478:356:81;7628:117:80;7873:1;7826:34;;;:10;:34;;;;;:48;;;7884:41;;;;:57;;-1:-1:-1;;7884:57:80;7928:13;7884:57;;;:41;7959:4;-1:-1:-1;;;7115:855:80:o;6242:217::-;4129:5;;-1:-1:-1;;;;;4129:5:80;4117:10;:17;4109:61;;;;-1:-1:-1;;;4109:61:80;;7846:2:81;4109:61:80;;;7828:21:81;;;7865:18;;;7858:30;7924:34;7904:18;;;7897:62;7976:18;;4109:61:80;7644:356:81;4109:61:80;6334:17:::1;::::0;:37:::1;::::0;;::::1;:17;::::0;;::::1;;:37:::0;6326:80:::1;;;::::0;-1:-1:-1;;;6326:80:80;;15041:2:81;6326:80:80::1;::::0;::::1;15023:21:81::0;15080:2;15060:18;;;15053:30;15119:33;15099:18;;;15092:61;15170:18;;6326:80:80::1;14839:355:81::0;6326:80:80::1;6416:17;:36:::0;;::::1;::::0;;::::1;;;-1:-1:-1::0;;6416:36:80;;::::1;::::0;;;::::1;::::0;;6242:217::o;5950:210::-;4129:5;;-1:-1:-1;;;;;4129:5:80;4117:10;:17;4109:61;;;;-1:-1:-1;;;4109:61:80;;7846:2:81;4109:61:80;;;7828:21:81;;;7865:18;;;7858:30;7924:34;7904:18;;;7897:62;7976:18;;4109:61:80;7644:356:81;4109:61:80;6040:16:::1;::::0;:35:::1;::::0;;::::1;:16:::0;::::1;:35:::0;6032:77:::1;;;::::0;-1:-1:-1;;;6032:77:80;;15401:2:81;6032:77:80::1;::::0;::::1;15383:21:81::0;15440:2;15420:18;;;15413:30;15479:32;15459:18;;;15452:60;15529:18;;6032:77:80::1;15199:354:81::0;6032:77:80::1;6119:16;:34:::0;;-1:-1:-1;;6119:34:80::1;;::::0;;;::::1;::::0;;;::::1;::::0;;5950:210::o;5354:147:34:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;10451:435:80:-:0;10586:4;10531:5;10586:4;4424:12;;;;10531:5;4424:12;:::i;:::-;-1:-1:-1;;;;;4424:26:80;;4416:61;;;;-1:-1:-1;;;4416:61:80;;9349:2:81;4416:61:80;;;9331:21:81;9388:2;9368:18;;;9361:30;9427:24;9407:18;;;9400:52;9469:18;;4416:61:80;9147:346:81;4416:61:80;4518:1;4495:11;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4495:25:80;;4487:59;;;;-1:-1:-1;;;4487:59:80;;9700:2:81;4487:59:80;;;9682:21:81;9739:2;9719:18;;;9712:30;9778:23;9758:18;;;9751:51;9819:18;;4487:59:80;9498:345:81;4487:59:80;4592:1;4564:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4564:30:80;;4556:70;;;;-1:-1:-1;;;4556:70:80;;10050:2:81;4556:70:80;;;10032:21:81;10089:2;10069:18;;;10062:30;10128:29;10108:18;;;10101:57;10175:18;;4556:70:80;9848:351:81;4556:70:80;4676:15;4657:5;:15;;;:34;;4636:107;;;;-1:-1:-1;;;4636:107:80;;10406:2:81;4636:107:80;;;10388:21:81;10445:2;10425:18;;;10418:30;10484:28;10464:18;;;10457:56;10530:18;;4636:107:80;10204:350:81;4636:107:80;4779:5;:13;;;4761:15;:31;4753:60;;;;-1:-1:-1;;;4753:60:80;;10761:2:81;4753:60:80;;;10743:21:81;10800:2;10780:18;;;10773:30;10839:18;10819;;;10812:46;10875:18;;4753:60:80;10559:340:81;4753:60:80;4849:1;4831:5;:15;;;:19;4823:57;;;;-1:-1:-1;;;4823:57:80;;11106:2:81;4823:57:80;;;11088:21:81;11145:2;11125:18;;;11118:30;11184:27;11164:18;;;11157:55;11229:18;;4823:57:80;10904:349:81;4823:57:80;4914:1;4898:5;:13;;;:17;4890:52;;;;-1:-1:-1;;;4890:52:80;;11460:2:81;4890:52:80;;;11442:21:81;11499:2;11479:18;;;11472:30;11538:24;11518:18;;;11511:52;11580:18;;4890:52:80;11258:346:81;4890:52:80;4975:1;4960:5;:12;;;:16;4952:50;;;;-1:-1:-1;;;4952:50:80;;11811:2:81;4952:50:80;;;11793:21:81;11850:2;11830:18;;;11823:30;11889:23;11869:18;;;11862:51;11930:18;;4952:50:80;11609:345:81;4952:50:80;5032:1;5020:5;:9;;;:13;5012:49;;;;-1:-1:-1;;;5012:49:80;;12161:2:81;5012:49:80;;;12143:21:81;12200:2;12180:18;;;12173:30;12239:25;12219:18;;;12212:53;12282:18;;5012:49:80;11959:347:81;5012:49:80;10562:5:::1;5192:22;5217:24;5235:5;5217:17;:24::i;:::-;5192:49;;5251:29;5283:24;5292:14;5283:8;:24::i;:::-;5251:56:::0;-1:-1:-1;5370:63:80::1;5251:56:::0;5407:25:::1;;::::0;::::1;:5:::0;:25:::1;:::i;5370:63::-;-1:-1:-1::0;;;;;5339:94:80::1;:11;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;5339:94:80::1;;5318:160;;;::::0;-1:-1:-1;;;5318:160:80;;15760:2:81;5318:160:80::1;::::0;::::1;15742:21:81::0;15799:2;15779:18;;;15772:30;15838:21;15818:18;;;15811:49;15877:18;;5318:160:80::1;15558:343:81::0;5318:160:80::1;10626:12:::2;;::::0;::::2;:5:::0;:12:::2;:::i;:::-;-1:-1:-1::0;;;;;10614:24:80::2;:10;-1:-1:-1::0;;;;;10614:24:80::2;;10606:74;;;::::0;-1:-1:-1;;;10606:74:80;;16108:2:81;10606:74:80::2;::::0;::::2;16090:21:81::0;16147:2;16127:18;;;16120:30;16186:34;16166:18;;;16159:62;16257:8;16237:18;;;16230:36;16283:19;;10606:74:80::2;15906:402:81::0;10606:74:80::2;10690:14;10707;10715:5;10707:7;:14::i;:::-;10690:31:::0;-1:-1:-1;10731:49:80::2;10742:5:::0;10690:31;10754:11:::2;::::0;;;::::2;::::0;::::2;;:::i;:::-;10767:12;;::::0;::::2;:5:::0;:12:::2;:::i;10731:49::-;10846:11;::::0;;;::::2;::::0;::::2;;:::i;:::-;-1:-1:-1::0;;;;;10795:63:80::2;10820:13;::::0;::::2;;10806:12;;::::0;::::2;10820:5:::0;10806:12:::2;:::i;:::-;-1:-1:-1::0;;;;;10795:63:80::2;;10835:5;:9;;;10795:63;;;;1080:25:81::0;;1068:2;1053:18;;934:177;10795:63:80::2;;;;;;;;-1:-1:-1::0;10875:4:80::2;::::0;10451:435;-1:-1:-1;;;;;;10451:435:80:o;13447:786::-;4245:6;;13544:4;;-1:-1:-1;;;;;4245:6:80;4233:10;:18;4225:63;;;;-1:-1:-1;;;4225:63:80;;16515:2:81;4225:63:80;;;16497:21:81;16554:2;16534:18;;;16527:30;16593:34;16573:18;;;16566:62;16664:3;16644:18;;;16637:31;16685:19;;4225:63:80;16313:397:81;4225:63:80;13585:22:::1;13568:13;::::0;;;::::1;::::0;::::1;;:::i;:::-;:39;;;;;;;;:::i;:::-;::::0;13564:253:::1;;13623:13;::::0;;;::::1;-1:-1:-1::0;;;;;13623:13:80::1;:36;13685:16;::::0;;;::::1;::::0;::::1;;:::i;:::-;13720:12;;::::0;::::1;:5:::0;:12:::1;:::i;:::-;13750:11;::::0;;;::::1;::::0;::::1;;:::i;:::-;13623:183;::::0;::::1;::::0;;;-1:-1:-1;;;;;;13623:183:80;;;-1:-1:-1;;;;;17042:15:81;;;13623:183:80::1;::::0;::::1;17024:34:81::0;17094:15;;;17074:18;;;17067:43;17146:15;;;17126:18;;;17119:43;13779:13:80::1;::::0;::::1;;17178:18:81::0;;;17171:34;16935:19;;13623:183:80::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;13564:253;13847:23;13830:13;::::0;;;::::1;::::0;::::1;;:::i;:::-;:40;;;;;;;;:::i;:::-;::::0;13826:303:::1;;13886:13;::::0;;;::::1;-1:-1:-1::0;;;;;13886:13:80::1;:37;13950:16;::::0;;;::::1;::::0;::::1;;:::i;:::-;13985:12;;::::0;::::1;:5:::0;:12:::1;:::i;:::-;14015:11;::::0;;;::::1;::::0;::::1;;:::i;:::-;13886:232;::::0;::::1;::::0;;;-1:-1:-1;;;;;;13886:232:80;;;-1:-1:-1;;;;;17635:15:81;;;13886:232:80::1;::::0;::::1;17617:34:81::0;17687:15;;;17667:18;;;17660:43;17739:15;;;17719:18;;;17712:43;14044:13:80::1;::::0;::::1;;17771:18:81::0;;;17764:34;14075:9:80::1;::::0;::::1;;17814:19:81::0;;;17807:35;17879:3;17858:19;;;17851:32;-1:-1:-1;17899:19:81;;;17892:30;17939:19;;13886:232:80::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;13826:303;14193:11;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;14144:61:80::1;14167:13;::::0;::::1;;14153:12;;::::0;::::1;14167:5:::0;14153:12:::1;:::i;:::-;-1:-1:-1::0;;;;;14144:61:80::1;;14182:5;:9;;;14144:61;;;;1080:25:81::0;;1068:2;1053:18;;934:177;14144:61:80::1;;;;;;;;-1:-1:-1::0;14222:4:80::1;13447:786:::0;;;:::o;3460:103:34:-;3526:30;3537:4;734:10:62;3526::34;:30::i;:::-;3460:103;:::o;7587:233::-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:34;;;;;;;;;;;;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:34;;;;;;;;;:36;;-1:-1:-1;;7708:36:34;7740:4;7708:36;;;7790:12;734:10:62;;655:96;7790:12:34;-1:-1:-1;;;;;7763:40:34;7781:7;-1:-1:-1;;;;;7763:40:34;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;7991:234::-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:34;;;;;;;;;;;;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:34;;;;;;;;;;:37;;-1:-1:-1;;8112:37:34;;;8168:40;734:10:62;;8112:12:34;;8168:40;;8144:5;8168:40;7991:234;;:::o;8157:1567:80:-;8255:4;8275:23;8301:25;8320:5;8301:18;:25::i;:::-;8275:51;;8336:30;8369:25;8378:15;8369:8;:25::i;:::-;8336:58;-1:-1:-1;8458:123:80;8336:58;8537:26;;;;:5;:26;:::i;8458:123::-;-1:-1:-1;;;;;8426:155:80;:12;;;;:5;:12;:::i;:::-;-1:-1:-1;;;;;8426:155:80;;8405:223;;;;-1:-1:-1;;;8405:223:80;;14330:2:81;8405:223:80;;;14312:21:81;14369:2;14349:18;;;14342:30;14408:23;14388:18;;;14381:51;14449:18;;8405:223:80;14128:345:81;8405:223:80;8647:37;8661:22;8647:13;:37::i;:::-;8646:38;8638:63;;;;-1:-1:-1;;;8638:63:80;;18171:2:81;8638:63:80;;;18153:21:81;18210:2;18190:18;;;18183:30;18249:14;18229:18;;;18222:42;18281:18;;8638:63:80;17969:336:81;8638:63:80;8823:11;8778:34;;;:10;:34;;;;;:41;;;;;:56;;;;;;;;:::i;:::-;;8774:922;;8850:34;;;;:10;:34;;;;;8897:22;;;;8850:69;;8977:11;8933:41;;;:55;;-1:-1:-1;;8933:55:80;;;;;;8774:922;;;9054:11;9009:34;;;;:10;:34;;;;;:41;;;;;:56;;;;;;;;:::i;:::-;;9005:691;;9106:34;;;;:10;:34;;;;;:44;9154:9;;;;-1:-1:-1;9106:57:80;9081:141;;;;-1:-1:-1;;;9081:141:80;;18512:2:81;9081:141:80;;;18494:21:81;18551:2;18531:18;;;18524:30;18590:27;18570:18;;;18563:55;18635:18;;9081:141:80;18310:349:81;9081:141:80;9291:25;9319:34;;;:10;:34;;;;;:61;:73;;9383:9;;;;;9319:73;:::i;:::-;9291:101;;9410:17;9431:1;9410:22;9406:202;;9533:34;;;;:10;:34;;;;;:41;;:60;;-1:-1:-1;;9533:60:80;9577:16;9533:60;;;9406:202;9621:34;;;;:10;:34;;;;;:64;9005:691;-1:-1:-1;9713:4:80;;8157:1567;-1:-1:-1;;;8157:1567:80:o;11953:1357::-;12128:22;12111:13;;;;;;;;:::i;:::-;:39;;;;;;;;:::i;:::-;;12107:241;;12166:13;;;;;-1:-1:-1;;;;;12166:13:80;:36;12228:16;;;;;;;;:::i;:::-;12166:171;;-1:-1:-1;;;;;;12166:171:80;;;;;;;-1:-1:-1;;;;;17042:15:81;;;12166:171:80;;;17024:34:81;17094:15;;;17074:18;;;17067:43;17146:15;;;17126:18;;;17119:43;12310:13:80;;;;17178:18:81;;;17171:34;16935:19;;12166:171:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12107:241;12378:23;12361:13;;;;;;;;:::i;:::-;:40;;;;;;;;:::i;:::-;;12357:291;;12417:13;;;;;-1:-1:-1;;;;;12417:13:80;:37;12481:16;;;;;;;;:::i;:::-;12417:220;;-1:-1:-1;;;;;;12417:220:80;;;;;;;-1:-1:-1;;;;;17635:15:81;;;12417:220:80;;;17617:34:81;17687:15;;;17667:18;;;17660:43;17739:15;;;17719:18;;;17712:43;12563:13:80;;;;17771:18:81;;;17764:34;12594:9:80;;;;17814:19:81;;;17807:35;17879:3;17858:19;;;17851:32;-1:-1:-1;17899:19:81;;;17892:30;17939:19;;12417:220:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12357:291;12662:15;;:19;12658:222;;12697:13;;;;;-1:-1:-1;;;;;12697:13:80;:35;12757:18;;;;;;;;:::i;:::-;12817:5;;12840:15;;12697:172;;;;;;-1:-1:-1;;;;;;12697:172:80;;;-1:-1:-1;;;;;17042:15:81;;;12697:172:80;;;17024:34:81;17094:15;;;17074:18;;;17067:43;12817:5:80;;;;17126:18:81;;;17119:43;17178:18;;;17171:34;16935:19;;12697:172:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12658:222;12910:1;12893:3;:14;;;:18;:42;;;;-1:-1:-1;12917:17:80;;;;;;;;:::i;:::-;12916:18;12893:42;12889:255;;;12951:13;;;;;-1:-1:-1;;;;;12951:13:80;:35;13011:18;;;;;;;;:::i;:::-;13071:16;;;;13105:14;;;;;12951:182;;-1:-1:-1;;;;;;12951:182:80;;;;;;;-1:-1:-1;;;;;17042:15:81;;;12951:182:80;;;17024:34:81;17094:15;;;17074:18;;;17067:43;17146:15;;;;17126:18;;;17119:43;17178:18;;;17171:34;16935:19;;12951:182:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12889:255;13153:13;;;;;-1:-1:-1;;;;;13153:13:80;:35;13209:18;;;;;;;;:::i;:::-;13281:12;;;;13153:150;;-1:-1:-1;;;;;;13153:150:80;;;;;;;-1:-1:-1;;;;;17042:15:81;;;13153:150:80;;;17024:34:81;17094:15;;;17074:18;;;17067:43;17146:15;;;17126:18;;;17119:43;17178:18;;;17171:34;16935:19;;13153:150:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11953:1357;;;;:::o;15584:273::-;15712:124;;19405:66:81;15712:124:80;;;19393:79:81;19488:12;;;19481:28;;;15647:7:80;;19525:12:81;;15712:124:80;19163:380:81;15863:269:80;15986:7;16010:9;16021;16032:7;16043:26;16058:10;16043:14;:26::i;:::-;16087:38;;;;;;;;;;;;19775:25:81;;;19848:4;19836:17;;19816:18;;;19809:45;;;;19870:18;;;19863:34;;;19913:18;;;19906:34;;;16009:60:80;;-1:-1:-1;16009:60:80;;-1:-1:-1;16009:60:80;-1:-1:-1;16087:38:80;;19747:19:81;;16087:38:80;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16087:38:80;;-1:-1:-1;;16087:38:80;;;15863:269;-1:-1:-1;;;;;;;15863:269:80:o;3844:479:34:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:34;;;;;;;;;;;;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:34;;;;;;;;;;-1:-1:-1;;;3970:336:34;;;;;;;:::i;16138:863:80:-;16240:9;16263;16286:7;16326:3;:10;16340:2;16326:16;16318:53;;;;-1:-1:-1;;;16318:53:80;;21595:2:81;16318:53:80;;;21577:21:81;21634:2;21614:18;;;21607:30;21673:26;21653:18;;;21646:54;21717:18;;16318:53:80;21393:348:81;16318:53:80;-1:-1:-1;;;16767:2:80;16758:12;;16752:19;16835:2;16826:12;;16820:19;16940:2;16931:12;;;16925:19;16752;;16922:1;16917:28;;;;;16138:863::o;2407:149:64:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:64;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:64;;1918:47;;1975:15;:6;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:64;;;;;;;;;2000;:6;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:64;;;;;;;;-1:-1:-1;2030:9:64;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;2096:8;2105:5;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:64;;;;;;;;-1:-1:-1;2141:1:64;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:64;;2162:55;;;;-1:-1:-1;;;2162:55:64;;22467:2:81;2162:55:64;;;22449:21:81;;;22486:18;;;22479:30;22545:34;22525:18;;;22518:62;22597:18;;2162:55:64;22265:356:81;2162:55:64;2241:6;1818:437;-1:-1:-1;;;1818:437:64:o;14:332:81:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;-1:-1:-1;;;;;;223:5:81;219:78;212:5;209:89;199:117;;312:1;309;302:12;543:386;628:6;681:2;669:9;660:7;656:23;652:32;649:52;;;697:1;694;687:12;649:52;737:9;724:23;770:18;762:6;759:30;756:50;;;802:1;799;792:12;756:50;825:22;;881:3;863:16;;;859:26;856:46;;;898:1;895;888:12;1347:180;1406:6;1459:2;1447:9;1438:7;1434:23;1430:32;1427:52;;;1475:1;1472;1465:12;1427:52;-1:-1:-1;1498:23:81;;1347:180;-1:-1:-1;1347:180:81:o;1532:154::-;-1:-1:-1;;;;;1611:5:81;1607:54;1600:5;1597:65;1587:93;;1676:1;1673;1666:12;1691:315;1759:6;1767;1820:2;1808:9;1799:7;1795:23;1791:32;1788:52;;;1836:1;1833;1826:12;1788:52;1872:9;1859:23;1849:33;;1932:2;1921:9;1917:18;1904:32;1945:31;1970:5;1945:31;:::i;:::-;1995:5;1985:15;;;1691:315;;;;;:::o;2735:247::-;2794:6;2847:2;2835:9;2826:7;2822:23;2818:32;2815:52;;;2863:1;2860;2853:12;2815:52;2902:9;2889:23;2921:31;2946:5;2921:31;:::i;3242:269::-;3299:6;3352:2;3340:9;3331:7;3327:23;3323:32;3320:52;;;3368:1;3365;3358:12;3320:52;3407:9;3394:23;3457:4;3450:5;3446:16;3439:5;3436:27;3426:55;;3477:1;3474;3467:12;3516:277;3596:6;3649:2;3637:9;3628:7;3624:23;3620:32;3617:52;;;3665:1;3662;3655:12;3617:52;3704:9;3691:23;3743:1;3736:5;3733:12;3723:40;;3759:1;3756;3749:12;3798:273;3854:6;3907:2;3895:9;3886:7;3882:23;3878:32;3875:52;;;3923:1;3920;3913:12;3875:52;3962:9;3949:23;4015:5;4008:13;4001:21;3994:5;3991:32;3981:60;;4037:1;4034;4027:12;4076:184;-1:-1:-1;;;4125:1:81;4118:88;4225:4;4222:1;4215:15;4249:4;4246:1;4239:15;4265:310;4352:1;4345:5;4342:12;4332:200;;-1:-1:-1;;;4385:1:81;4378:88;4489:4;4486:1;4479:15;4517:4;4514:1;4507:15;4332:200;4557:3;4553:15;4541:28;;4265:310::o;4580:940::-;4956:3;4988:26;4984:31;5057:2;5048:6;5044:2;5040:15;5036:24;5031:3;5024:37;5112:2;5103:6;5099:2;5095:15;5091:24;5086:2;5081:3;5077:12;5070:46;5167:2;5158:6;5154:2;5150:15;5146:24;5141:2;5136:3;5132:12;5125:46;;5180:53;5229:2;5224:3;5220:12;5212:6;5180:53;:::i;:::-;-1:-1:-1;5258:2:81;5249:12;;5242:28;;;;5295:2;5286:12;;5279:28;;;;5354:14;;5347:22;5342:3;5338:32;5332:3;5323:13;;5316:55;5396:3;5387:13;;5380:29;5434:3;5425:13;;5418:29;5472:3;5463:13;;5456:29;5510:3;5501:13;;4580:940;-1:-1:-1;;;;4580:940:81:o;5941:184::-;-1:-1:-1;;;5990:1:81;5983:88;6090:4;6087:1;6080:15;6114:4;6111:1;6104:15;6130:224;6169:3;6197:6;6230:2;6227:1;6223:10;6260:2;6257:1;6253:10;6291:3;6287:2;6283:12;6278:3;6275:21;6272:47;;;6299:18;;:::i;:::-;6335:13;;6130:224;-1:-1:-1;;;;6130:224:81:o;6359:168::-;6399:7;6465:1;6461;6457:6;6453:14;6450:1;6447:21;6442:1;6435:9;6428:17;6424:45;6421:71;;;6472:18;;:::i;:::-;-1:-1:-1;6512:9:81;;6359:168::o;6532:274::-;6572:1;6598;6588:189;;-1:-1:-1;;;6630:1:81;6623:88;6734:4;6731:1;6724:15;6762:4;6759:1;6752:15;6588:189;-1:-1:-1;6791:9:81;;6532:274::o;6811:125::-;6851:4;6879:1;6876;6873:8;6870:34;;;6884:18;;:::i;:::-;-1:-1:-1;6921:9:81;;6811:125::o;6941:128::-;6981:3;7012:1;7008:6;7005:1;7002:13;6999:39;;;7018:18;;:::i;:::-;-1:-1:-1;7054:9:81;;6941:128::o;7327:312::-;7406:6;7414;7467:2;7455:9;7446:7;7442:23;7438:32;7435:52;;;7483:1;7480;7473:12;7435:52;7515:9;7509:16;7534:31;7559:5;7534:31;:::i;:::-;7629:2;7614:18;;;;7608:25;7584:5;;7608:25;;-1:-1:-1;;;7327:312:81:o;8354:788::-;8680:3;8712:26;8708:31;8781:2;8772:6;8768:2;8764:15;8760:24;8755:3;8748:37;8836:2;8827:6;8823:2;8819:15;8815:24;8810:2;8805:3;8801:12;8794:46;8891:2;8882:6;8878:2;8874:15;8870:24;8865:2;8860:3;8856:12;8849:46;;8904:53;8953:2;8948:3;8944:12;8936:6;8904:53;:::i;:::-;-1:-1:-1;8982:2:81;8973:12;;8966:28;;;;9019:2;9010:12;;9003:28;;;;9056:3;9047:13;;9040:29;9094:3;9085:13;;9078:29;9132:3;9123:13;;8354:788;-1:-1:-1;;;;8354:788:81:o;13602:521::-;13679:4;13685:6;13745:11;13732:25;13839:2;13835:7;13824:8;13808:14;13804:29;13800:43;13780:18;13776:68;13766:96;;13858:1;13855;13848:12;13766:96;13885:33;;13937:20;;;-1:-1:-1;13980:18:81;13969:30;;13966:50;;;14012:1;14009;14002:12;13966:50;14045:4;14033:17;;-1:-1:-1;14076:14:81;14072:27;;;14062:38;;14059:58;;;14113:1;14110;14103:12;14059:58;13602:521;;;;;:::o;19951:258::-;20023:1;20033:113;20047:6;20044:1;20041:13;20033:113;;;20123:11;;;20117:18;20104:11;;;20097:39;20069:2;20062:10;20033:113;;;20164:6;20161:1;20158:13;20155:48;;;20199:1;20190:6;20185:3;20181:16;20174:27;20155:48;;19951:258;;;:::o;20214:786::-;20625:25;20620:3;20613:38;20595:3;20680:6;20674:13;20696:62;20751:6;20746:2;20741:3;20737:12;20730:4;20722:6;20718:17;20696:62;:::i;:::-;20822:19;20817:2;20777:16;;;20809:11;;;20802:40;20867:13;;20889:63;20867:13;20938:2;20930:11;;20923:4;20911:17;;20889:63;:::i;:::-;20972:17;20991:2;20968:26;;20214:786;-1:-1:-1;;;;20214:786:81:o;21005:383::-;21154:2;21143:9;21136:21;21117:4;21186:6;21180:13;21229:6;21224:2;21213:9;21209:18;21202:34;21245:66;21304:6;21299:2;21288:9;21284:18;21279:2;21271:6;21267:15;21245:66;:::i;:::-;21372:2;21351:15;-1:-1:-1;;21347:29:81;21332:45;;;;21379:2;21328:54;;21005:383;-1:-1:-1;;21005:383:81:o;21746:184::-;-1:-1:-1;;;21795:1:81;21788:88;21895:4;21892:1;21885:15;21919:4;21916:1;21909:15;21935:184;-1:-1:-1;;;21984:1:81;21977:88;22084:4;22081:1;22074:15;22108:4;22105:1;22098:15;22124:136;22163:3;22191:5;22181:39;;22200:18;;:::i;:::-;-1:-1:-1;;;22236:18:81;;22124:136::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.14;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC2981.sol\";\nimport \"./interface/ITransferProxy.sol\";\n\ncontract Trade is AccessControl {\n    enum BuyingAssetType {\n        ERC1155,\n        ERC721\n    }\n    enum Status {\n        NONE,\n        LIVE,\n        COMPLETED,\n        CANCEL\n    }\n\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n    event SellerFee(uint8 sellerFee);\n    event BuyerFee(uint8 buyerFee);\n    event BuyAsset(\n        address indexed assetOwner,\n        uint256 indexed tokenId,\n        uint256 quantity,\n        address indexed buyer\n    );\n    event ExecuteBid(\n        address indexed assetOwner,\n        uint256 indexed tokenId,\n        uint256 quantity,\n        address indexed buyer\n    );\n    // buyer platformFee\n    uint8 private buyerFeePermille;\n    //seller platformFee\n    uint8 private sellerFeePermille;\n    ITransferProxy public transferProxy;\n    //contract owner\n    address public owner;\n\n    address public signer;\n\n    //// mapping(uint256 => bool) private usedNonce;\n\n    // Create a new role identifier for the minter role\n    //// bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n\n    /** Fee Struct\n        @param platformFee  uint256 (buyerFee + sellerFee) value which is transferred to current contract owner.\n        @param assetFee  uint256  assetvalue which is transferred to current seller of the NFT.\n        @param royaltyFee  uint256 value, transferred to Minter of the NFT.\n        @param price  uint256 value, the combination of buyerFee and assetValue.\n        @param tokenCreator address value, it's store the creator of NFT.\n     */\n    struct Fee {\n        uint256 platformFee;\n        uint256 assetFee;\n        uint256 royaltyFee;\n        uint256 price;\n        address tokenCreator;\n    }\n\n    /** Order Params\n        @param seller address of user,who's selling the NFT.\n        @param buyer address of user, who's buying the NFT.\n        @param erc20Address address of the token, which is used as payment token(WETH/WBNB/WMATIC...)\n        @param nftAddress address of NFT contract where the NFT token is created/Minted.\n        @param nftType an enum value, if the type is ERC721/ERC1155 the enum value is 0/1.\n        @param uintprice the Price Each NFT it's not including the buyerFee.\n        @param nftOrderQuantity the max Quantity of NFT available for order.\n        @param skipRoyalty skip royalty part or not.\n        @param startDate the start Date of the order.\n        @param endDate the end Date of the order.\n        @param tokenId \n        @param amount the price of NFT(assetFee + buyerFee).\n        @param qty number of quantity to be transfer.\n        @param sellerOrdersignature order hash signed by seller.\n        @param buyerOrdersignature order hash signed by buyer.\n     */\n    struct Order {\n        address seller;\n        address buyer;\n        address erc20Address;\n        address nftAddress;\n        BuyingAssetType nftType;\n        uint256 unitPrice;\n        uint256 nftOrderQuantity;\n        bool skipRoyalty;\n        uint256 startDate;\n        uint256 endDate;\n        uint256 tokenId;\n        uint256 amount;\n        uint256 qty;\n        bytes sellerOrdersignature;\n        bytes buyerOrdersignature;\n    }\n\n    /** OrderStatus Params\n        @param maxAmount is the maximum nft currently available in auction.\n        @param status an enum value, if the type is NONE|LIVE|COMPLETED|CANCEL the enum value is 0|1|2|3.\n     */\n    struct OrderStatus {\n        uint256 maxAmount;\n        Status status;\n    }\n\n    // order Limit which hold closed and live order data\n    mapping(bytes32 => OrderStatus) orderLimit;\n\n    constructor(\n        uint8 _buyerFee,\n        uint8 _sellerFee,\n        ITransferProxy _transferProxy\n    ) {\n        buyerFeePermille = _buyerFee;\n        sellerFeePermille = _sellerFee;\n        transferProxy = _transferProxy;\n        owner = msg.sender;\n    }\n\n    modifier OnlyOwner(){\n        require(msg.sender==owner,\"Only owner can all this function\");\n        _;\n    }\n\n    modifier OnlySigner(){\n        require(msg.sender==signer,\"Only signer can all this function\");\n        _;\n    }\n\n    /**\n        checks the order is valid\n     */\n    modifier isvalidOrder(Order calldata order) {\n        require(order.seller != address(0), \"Seller cannot be empty\");\n        require(order.buyer != address(0), \"Buyer cannot be empty\");\n        require(order.nftAddress != address(0), \"NFT Address cannot be empty\");\n        require(\n            order.startDate <= block.timestamp,\n            \"Auction is not started yet\"\n        );\n        require(block.timestamp < order.endDate, \"Auction is ended\");\n        require(order.unitPrice > 0, \"Unit price cannot be zero\");\n        require(order.tokenId > 0, \"TokenId cannot be zero\");\n        require(order.amount > 0, \"Amount cannot be zero\");\n        require(order.qty > 0, \"Quantity cannot be zero\");\n        _;\n    }\n\n    /**\n        checks the order is valid\n     */\n    modifier isvalidOrderBid(Order calldata order) {\n        bytes32 buyerOrderhash = getOrderBuyerHash(order);\n        bytes32 buyerOrderhashMessage = prefixed(buyerOrderhash);\n\n        require(\n            order.buyer ==\n                recoverSigner(buyerOrderhashMessage, order.buyerOrdersignature),\n            \"Invalid bid details\"\n        );\n        _;\n    }\n\n    /**\n        returns the buyerservice Fee in multiply of 1000.\n     */\n    function buyerServiceFee() external view virtual returns (uint8) {\n        return buyerFeePermille;\n    }\n\n    /**\n        returns the sellerservice Fee in multiply of 1000.\n     */\n    function sellerServiceFee() external view virtual returns (uint8) {\n        return sellerFeePermille;\n    }\n\n    /**\n        returns the buyerservice Fee in multiply of 1000.\n     */\n\n    function setBuyerServiceFee(uint8 _buyerFeePermille) public OnlyOwner() {\n        require(buyerFeePermille!=_buyerFeePermille,\"BuyerFeePermille value is same\");\n        buyerFeePermille=_buyerFeePermille;\n    }\n\n    /**\n        returns the sellerservice Fee in multiply of 1000.\n     */\n\n    function setSellerServiceFee(uint8 _sellerFeePermille) public OnlyOwner() {\n        require(sellerFeePermille!=_sellerFeePermille,\"SellerFeePermille value is same\");\n        sellerFeePermille=_sellerFeePermille;\n    }\n    /**\n        set the signer in address.\n     */\n\n    function setSigner(address _signer) public OnlyOwner() {\n        require(signer!=_signer,\"Signer value is same\");\n        signer=_signer;\n    }\n\n    /**\n        returns the whether the order is already exists or not.\n     */\n    function isOrderClosed(bytes32 orderHash) public view returns (bool) {\n        return\n            orderLimit[orderHash].status == Status.COMPLETED ||\n            orderLimit[orderHash].status == Status.CANCEL;\n    }\n\n    /**\n        cancel Order.\n        @param order ordervalues(seller, buyer,...).\n        this will cancel the invalid use of sign order data\n    */\n    function cancelOrder(Order calldata order) public returns (bool) {\n        bytes32 sellerOrderhash = getOrderSellerHash(order);\n        bytes32 sellerOrderhashMessage = prefixed(sellerOrderhash);\n\n        require(order.seller == msg.sender, \"Caller is not order seller\");\n        require(\n            order.seller ==\n                recoverSigner(\n                    sellerOrderhashMessage,\n                    order.sellerOrdersignature\n                ),\n            \"Invalid order details\"\n        );\n        require(\n            !isOrderClosed(sellerOrderhashMessage),\n            \"Order already complted or cancel\"\n        );\n\n        // if order is new or live then set its status and max amount\n        orderLimit[sellerOrderhashMessage].maxAmount = 0;\n        orderLimit[sellerOrderhashMessage].status = Status.CANCEL;\n\n        return true;\n    }\n\n    /**\n        validate and Update Order Limit.\n        @param order ordervalues(seller, buyer,...).\n        this will validate and update the signature of order for seller\n    */\n    function validateandUpdateOrderForSeller(Order calldata order)\n        internal \n        returns (bool)\n    {\n        bytes32 sellerOrderhash = getOrderSellerHash(order);\n        bytes32 sellerOrderhashMessage = prefixed(sellerOrderhash);\n\n        require(\n            order.seller ==\n                recoverSigner(\n                    sellerOrderhashMessage,\n                    order.sellerOrdersignature\n                ),\n            \"Invalid order details\"\n        );\n        require(!isOrderClosed(sellerOrderhashMessage), \"Order closed\");\n\n        // if order is new then set its status and max amount\n        if (orderLimit[sellerOrderhashMessage].status == Status.NONE) {\n            orderLimit[sellerOrderhashMessage].maxAmount = order.nftOrderQuantity;\n            orderLimit[sellerOrderhashMessage].status = Status.LIVE;\n        } else if (orderLimit[sellerOrderhashMessage].status == Status.LIVE) {\n            require(\n                orderLimit[sellerOrderhashMessage].maxAmount >= order.qty,\n                \"Order Quantity is invalid\"\n            );\n            // if order is live then update max amount\n            uint256 _updatedMaxAmount = orderLimit[sellerOrderhashMessage]\n                .maxAmount - order.qty;\n            if (_updatedMaxAmount == 0) {\n                // if order max amount will be zero then set status to completed\n                orderLimit[sellerOrderhashMessage].status = Status.COMPLETED;\n            }\n            orderLimit[sellerOrderhashMessage].maxAmount = _updatedMaxAmount;\n        }\n\n        return true;\n    }\n\n    /**\n        excuting the NFT order.\n        @param order ordervalues(seller, buyer,...).\n    */\n    function buyAsset(Order calldata order)\n        external\n        isvalidOrder(order)\n        returns (bool)\n    {\n        require(msg.sender==order.buyer,\"Only order buyer can call this method\");\n        Fee memory fee = getFees(order);\n        require(\n            (fee.price <= order.unitPrice * order.qty),\n            \"Paid invalid amount\"\n\n        );\n        if (validateandUpdateOrderForSeller(order)) {\n            tradeAsset(order, fee, order.buyer, order.seller);\n            emit BuyAsset(order.seller, order.tokenId, order.qty, order.buyer);\n            return true;\n        }\n        return false;\n    }\n\n    function executeBid(Order calldata order)\n        external\n        isvalidOrder(order)\n        isvalidOrderBid(order)\n        returns (bool)\n    {\n        require(msg.sender==order.seller,\"Only order seller can call this method\");\n        Fee memory fee = getFees(order);\n        tradeAsset(order, fee, order.buyer, order.seller);\n        emit ExecuteBid(order.seller, order.tokenId, order.qty, order.buyer);\n        return true;\n    }\n\n    function getFees(Order calldata order) public view returns (Fee memory) {\n        address tokenCreator;\n        uint256 platformFee;\n        uint256 royaltyFee;\n        uint256 assetFee;\n        uint256 price = (order.amount * 1000) / (1000 + buyerFeePermille);\n        uint256 buyerFee = order.amount - price;\n        uint256 sellerFee = (price * sellerFeePermille) / 1000;\n        platformFee = buyerFee + sellerFee;\n        if (\n            !order.skipRoyalty &&\n            ((order.nftType == BuyingAssetType.ERC721) ||\n                (order.nftType == BuyingAssetType.ERC1155))\n        ) {\n            (tokenCreator, royaltyFee) = IERC2981(order.nftAddress).royaltyInfo(\n                order.tokenId,\n                price\n            );\n        }\n        assetFee = price - royaltyFee - sellerFee;\n        return Fee(platformFee, assetFee, royaltyFee, price, tokenCreator);\n    }\n\n    /** \n        transfers the NFTs and tokens...\n        @param order ordervalues(seller, buyer,...).\n        @param fee Feevalues(platformFee, assetFee,...).\n    */\n\n    function tradeAsset(\n        Order calldata order,\n        Fee memory fee,\n        address buyer,\n        address seller\n    ) internal virtual {\n        if (order.nftType == BuyingAssetType.ERC721) {\n            transferProxy.erc721safeTransferFrom(\n                IERC721(order.nftAddress),\n                seller,\n                buyer,\n                order.tokenId\n            );\n        }\n        if (order.nftType == BuyingAssetType.ERC1155) {\n            transferProxy.erc1155safeTransferFrom(\n                IERC1155(order.nftAddress),\n                seller,\n                buyer,\n                order.tokenId,\n                order.qty,\n                \"\"\n            );\n        }\n\n        if (fee.platformFee > 0) {\n            transferProxy.erc20safeTransferFrom(\n                IERC20(order.erc20Address),\n                buyer,\n                owner,\n                fee.platformFee\n            );\n        }\n        if (fee.royaltyFee > 0 && (!order.skipRoyalty)) {\n            transferProxy.erc20safeTransferFrom(\n                IERC20(order.erc20Address),\n                buyer,\n                fee.tokenCreator,\n                fee.royaltyFee\n            );\n        }\n        transferProxy.erc20safeTransferFrom(\n            IERC20(order.erc20Address),\n            buyer,\n            seller,\n            fee.assetFee\n        );\n    }\n\n    // moonpay\n    /** \n        transfers the NFTs by external wallets\n        @param order ordervalues(seller, buyer,...).\n    */\n    function deliverNFT(Order calldata order)\n        external\n        OnlySigner()\n        returns (bool)\n    {\n        if (order.nftType == BuyingAssetType.ERC721) {\n            transferProxy.erc721safeTransferFrom(\n                IERC721(order.nftAddress),\n                order.seller,\n                order.buyer,\n                order.tokenId\n            );\n        }\n        if (order.nftType == BuyingAssetType.ERC1155) {\n            transferProxy.erc1155safeTransferFrom(\n                IERC1155(order.nftAddress),\n                order.seller,\n                order.buyer,\n                order.tokenId,\n                order.qty,\n                \"\"\n            );\n        }\n\n        emit BuyAsset(order.seller, order.tokenId, order.qty, order.buyer);\n        return true;\n    }\n\n    // Signature validation part\n\n    /**\n        get Order Hash for seller.\n        @param order ordervalues(seller, buyer,...).\n    */\n    function getOrderSellerHash(Order calldata order)\n        public\n        pure\n        returns (bytes32)\n    {\n        return\n            keccak256(\n                abi.encodePacked(\n                    order.seller,\n                    order.erc20Address,\n                    order.nftAddress,\n                    order.nftType,\n                    order.unitPrice,\n                    order.nftOrderQuantity,\n                    order.skipRoyalty,\n                    order.startDate,\n                    order.endDate,\n                    order.tokenId\n                )\n            );\n    }\n\n    /**\n        get Order Hash for buyer.\n        @param order ordervalues(seller, buyer,...).\n    */\n    function getOrderBuyerHash(Order calldata order)\n        public\n        pure\n        returns (bytes32)\n    {\n        return\n            keccak256(\n                abi.encodePacked(\n                    order.buyer,\n                    order.erc20Address,\n                    order.nftAddress,\n                    order.nftType,\n                    order.unitPrice,\n                    order.tokenId,\n                    order.amount,\n                    order.qty\n                )\n            );\n    }\n\n    function prefixed(bytes32 _messageHash) internal pure returns (bytes32) {\n        return\n            keccak256(\n                abi.encodePacked(\n                    \"\\x19Ethereum Signed Message:\\n32\",\n                    _messageHash\n                )\n            );\n    }\n\n    function recoverSigner(bytes32 _signedMessageHash, bytes memory _signature)\n        internal\n        pure\n        returns (address)\n    {\n        (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature);\n\n        return ecrecover(_signedMessageHash, v, r, s);\n    }\n\n    function splitSignature(bytes memory sig)\n        internal\n        pure\n        returns (\n            bytes32 r,\n            bytes32 s,\n            uint8 v\n        )\n    {\n        require(sig.length == 65, \"invalid signature length\");\n\n        assembly {\n            /*\n            First 32 bytes stores the length of the signature\n\n            add(sig, 32) = pointer of sig + 32\n            effectively, skips first 32 bytes of signature\n\n            mload(p) loads next 32 bytes starting at the memory address p into memory\n            */\n\n            // first 32 bytes, after the length prefix\n            r := mload(add(sig, 32))\n            // second 32 bytes\n            s := mload(add(sig, 64))\n            // final byte (first byte of the next 32 bytes)\n            v := byte(0, mload(add(sig, 96)))\n        }\n\n        // implicitly return (r, s, v)\n    }\n}\n",
  "sourcePath": "/Users/mujtabasiddiqui/Desktop/Mujtaba/lootmogul/marketplace/src/contracts/trade.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/trade.sol",
    "exportedSymbols": {
      "AccessControl": [
        6494
      ],
      "Context": [
        10870
      ],
      "ERC165": [
        11233
      ],
      "IAccessControl": [
        6567
      ],
      "IERC1155": [
        8591
      ],
      "IERC165": [
        11245
      ],
      "IERC20": [
        9397
      ],
      "IERC2981": [
        6726
      ],
      "IERC721": [
        10465
      ],
      "ILazyMint": [
        14688
      ],
      "ITransferProxy": [
        14765
      ],
      "Math": [
        12111
      ],
      "SignedMath": [
        12216
      ],
      "Strings": [
        11209
      ],
      "Trade": [
        15895
      ]
    },
    "id": 15896,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14767,
        "literals": [
          "solidity",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:80"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 14768,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15896,
        "sourceUnit": 6495,
        "src": "64:58:80",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/interfaces/IERC2981.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC2981.sol",
        "id": 14769,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15896,
        "sourceUnit": 6727,
        "src": "123:57:80",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/interface/ITransferProxy.sol",
        "file": "./interface/ITransferProxy.sol",
        "id": 14770,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15896,
        "sourceUnit": 14766,
        "src": "181:40:80",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14771,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6494,
              "src": "241:13:80"
            },
            "id": 14772,
            "nodeType": "InheritanceSpecifier",
            "src": "241:13:80"
          }
        ],
        "canonicalName": "Trade",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 15895,
        "linearizedBaseContracts": [
          15895,
          6494,
          11233,
          11245,
          6567,
          10870
        ],
        "name": "Trade",
        "nameLocation": "232:5:80",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Trade.BuyingAssetType",
            "id": 14775,
            "members": [
              {
                "id": 14773,
                "name": "ERC1155",
                "nameLocation": "292:7:80",
                "nodeType": "EnumValue",
                "src": "292:7:80"
              },
              {
                "id": 14774,
                "name": "ERC721",
                "nameLocation": "309:6:80",
                "nodeType": "EnumValue",
                "src": "309:6:80"
              }
            ],
            "name": "BuyingAssetType",
            "nameLocation": "266:15:80",
            "nodeType": "EnumDefinition",
            "src": "261:60:80"
          },
          {
            "canonicalName": "Trade.Status",
            "id": 14780,
            "members": [
              {
                "id": 14776,
                "name": "NONE",
                "nameLocation": "348:4:80",
                "nodeType": "EnumValue",
                "src": "348:4:80"
              },
              {
                "id": 14777,
                "name": "LIVE",
                "nameLocation": "362:4:80",
                "nodeType": "EnumValue",
                "src": "362:4:80"
              },
              {
                "id": 14778,
                "name": "COMPLETED",
                "nameLocation": "376:9:80",
                "nodeType": "EnumValue",
                "src": "376:9:80"
              },
              {
                "id": 14779,
                "name": "CANCEL",
                "nameLocation": "395:6:80",
                "nodeType": "EnumValue",
                "src": "395:6:80"
              }
            ],
            "name": "Status",
            "nameLocation": "331:6:80",
            "nodeType": "EnumDefinition",
            "src": "326:81:80"
          },
          {
            "anonymous": false,
            "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
            "id": 14786,
            "name": "OwnershipTransferred",
            "nameLocation": "419:20:80",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14782,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner",
                  "nameLocation": "465:13:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 14786,
                  "src": "449:29:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14784,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "504:8:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 14786,
                  "src": "488:24:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "488:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "439:79:80"
            },
            "src": "413:106:80"
          },
          {
            "anonymous": false,
            "eventSelector": "04e959c7352d9eda8a6d989e4fee25ff0bf44c87386b7259d8500343c4e9992e",
            "id": 14790,
            "name": "SellerFee",
            "nameLocation": "530:9:80",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14788,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sellerFee",
                  "nameLocation": "546:9:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 14790,
                  "src": "540:15:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 14787,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "539:17:80"
            },
            "src": "524:33:80"
          },
          {
            "anonymous": false,
            "eventSelector": "1715ed10763088cbfba08a6ecfb6e5894eac73040cb1899d10d3f96ced2bd0ef",
            "id": 14794,
            "name": "BuyerFee",
            "nameLocation": "568:8:80",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14792,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyerFee",
                  "nameLocation": "583:8:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 14794,
                  "src": "577:14:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 14791,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "576:16:80"
            },
            "src": "562:31:80"
          },
          {
            "anonymous": false,
            "eventSelector": "b10197cef009fd301a90b892d25451c22c3701eb18ee2df1250d31e514fff394",
            "id": 14804,
            "name": "BuyAsset",
            "nameLocation": "604:8:80",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14796,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "assetOwner",
                  "nameLocation": "638:10:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 14804,
                  "src": "622:26:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14798,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "674:7:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 14804,
                  "src": "658:23:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "658:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14800,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "699:8:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 14804,
                  "src": "691:16:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14799,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14802,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "733:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 14804,
                  "src": "717:21:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14801,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "717:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "612:132:80"
            },
            "src": "598:147:80"
          },
          {
            "anonymous": false,
            "eventSelector": "ec34853c156da04e4792f1c735112ae54e5ed52bac58db5014b26746f306a362",
            "id": 14814,
            "name": "ExecuteBid",
            "nameLocation": "756:10:80",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14806,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "assetOwner",
                  "nameLocation": "792:10:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 14814,
                  "src": "776:26:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "776:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14808,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "828:7:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 14814,
                  "src": "812:23:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "812:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14810,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "853:8:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 14814,
                  "src": "845:16:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14809,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14812,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "887:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 14814,
                  "src": "871:21:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "871:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "766:132:80"
            },
            "src": "750:149:80"
          },
          {
            "constant": false,
            "id": 14816,
            "mutability": "mutable",
            "name": "buyerFeePermille",
            "nameLocation": "943:16:80",
            "nodeType": "VariableDeclaration",
            "scope": 15895,
            "src": "929:30:80",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 14815,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "929:5:80",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 14818,
            "mutability": "mutable",
            "name": "sellerFeePermille",
            "nameLocation": "1004:17:80",
            "nodeType": "VariableDeclaration",
            "scope": 15895,
            "src": "990:31:80",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 14817,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "990:5:80",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "6e667db3",
            "id": 14821,
            "mutability": "mutable",
            "name": "transferProxy",
            "nameLocation": "1049:13:80",
            "nodeType": "VariableDeclaration",
            "scope": 15895,
            "src": "1027:35:80",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ITransferProxy_$14765",
              "typeString": "contract ITransferProxy"
            },
            "typeName": {
              "id": 14820,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14819,
                "name": "ITransferProxy",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 14765,
                "src": "1027:14:80"
              },
              "referencedDeclaration": 14765,
              "src": "1027:14:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ITransferProxy_$14765",
                "typeString": "contract ITransferProxy"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 14823,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1104:5:80",
            "nodeType": "VariableDeclaration",
            "scope": 15895,
            "src": "1089:20:80",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14822,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1089:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "238ac933",
            "id": 14825,
            "mutability": "mutable",
            "name": "signer",
            "nameLocation": "1131:6:80",
            "nodeType": "VariableDeclaration",
            "scope": 15895,
            "src": "1116:21:80",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14824,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1116:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Trade.Fee",
            "id": 14836,
            "members": [
              {
                "constant": false,
                "id": 14827,
                "mutability": "mutable",
                "name": "platformFee",
                "nameLocation": "1822:11:80",
                "nodeType": "VariableDeclaration",
                "scope": 14836,
                "src": "1814:19:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14826,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1814:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14829,
                "mutability": "mutable",
                "name": "assetFee",
                "nameLocation": "1851:8:80",
                "nodeType": "VariableDeclaration",
                "scope": 14836,
                "src": "1843:16:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14828,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1843:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14831,
                "mutability": "mutable",
                "name": "royaltyFee",
                "nameLocation": "1877:10:80",
                "nodeType": "VariableDeclaration",
                "scope": 14836,
                "src": "1869:18:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14830,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1869:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14833,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "1905:5:80",
                "nodeType": "VariableDeclaration",
                "scope": 14836,
                "src": "1897:13:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14832,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1897:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14835,
                "mutability": "mutable",
                "name": "tokenCreator",
                "nameLocation": "1928:12:80",
                "nodeType": "VariableDeclaration",
                "scope": 14836,
                "src": "1920:20:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14834,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1920:7:80",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Fee",
            "nameLocation": "1800:3:80",
            "nodeType": "StructDefinition",
            "scope": 15895,
            "src": "1793:154:80",
            "visibility": "public"
          },
          {
            "canonicalName": "Trade.Order",
            "id": 14868,
            "members": [
              {
                "constant": false,
                "id": 14838,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "2994:6:80",
                "nodeType": "VariableDeclaration",
                "scope": 14868,
                "src": "2986:14:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14837,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2986:7:80",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14840,
                "mutability": "mutable",
                "name": "buyer",
                "nameLocation": "3018:5:80",
                "nodeType": "VariableDeclaration",
                "scope": 14868,
                "src": "3010:13:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14839,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3010:7:80",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14842,
                "mutability": "mutable",
                "name": "erc20Address",
                "nameLocation": "3041:12:80",
                "nodeType": "VariableDeclaration",
                "scope": 14868,
                "src": "3033:20:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14841,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3033:7:80",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14844,
                "mutability": "mutable",
                "name": "nftAddress",
                "nameLocation": "3071:10:80",
                "nodeType": "VariableDeclaration",
                "scope": 14868,
                "src": "3063:18:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14843,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3063:7:80",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14847,
                "mutability": "mutable",
                "name": "nftType",
                "nameLocation": "3107:7:80",
                "nodeType": "VariableDeclaration",
                "scope": 14868,
                "src": "3091:23:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                  "typeString": "enum Trade.BuyingAssetType"
                },
                "typeName": {
                  "id": 14846,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 14845,
                    "name": "BuyingAssetType",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 14775,
                    "src": "3091:15:80"
                  },
                  "referencedDeclaration": 14775,
                  "src": "3091:15:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                    "typeString": "enum Trade.BuyingAssetType"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14849,
                "mutability": "mutable",
                "name": "unitPrice",
                "nameLocation": "3132:9:80",
                "nodeType": "VariableDeclaration",
                "scope": 14868,
                "src": "3124:17:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14848,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3124:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14851,
                "mutability": "mutable",
                "name": "nftOrderQuantity",
                "nameLocation": "3159:16:80",
                "nodeType": "VariableDeclaration",
                "scope": 14868,
                "src": "3151:24:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14850,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3151:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14853,
                "mutability": "mutable",
                "name": "skipRoyalty",
                "nameLocation": "3190:11:80",
                "nodeType": "VariableDeclaration",
                "scope": 14868,
                "src": "3185:16:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 14852,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3185:4:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14855,
                "mutability": "mutable",
                "name": "startDate",
                "nameLocation": "3219:9:80",
                "nodeType": "VariableDeclaration",
                "scope": 14868,
                "src": "3211:17:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14854,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3211:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14857,
                "mutability": "mutable",
                "name": "endDate",
                "nameLocation": "3246:7:80",
                "nodeType": "VariableDeclaration",
                "scope": 14868,
                "src": "3238:15:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14856,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3238:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14859,
                "mutability": "mutable",
                "name": "tokenId",
                "nameLocation": "3271:7:80",
                "nodeType": "VariableDeclaration",
                "scope": 14868,
                "src": "3263:15:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14858,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3263:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14861,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "3296:6:80",
                "nodeType": "VariableDeclaration",
                "scope": 14868,
                "src": "3288:14:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14860,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3288:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14863,
                "mutability": "mutable",
                "name": "qty",
                "nameLocation": "3320:3:80",
                "nodeType": "VariableDeclaration",
                "scope": 14868,
                "src": "3312:11:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14862,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3312:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14865,
                "mutability": "mutable",
                "name": "sellerOrdersignature",
                "nameLocation": "3339:20:80",
                "nodeType": "VariableDeclaration",
                "scope": 14868,
                "src": "3333:26:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 14864,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "3333:5:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14867,
                "mutability": "mutable",
                "name": "buyerOrdersignature",
                "nameLocation": "3375:19:80",
                "nodeType": "VariableDeclaration",
                "scope": 14868,
                "src": "3369:25:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 14866,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "3369:5:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Order",
            "nameLocation": "2970:5:80",
            "nodeType": "StructDefinition",
            "scope": 15895,
            "src": "2963:438:80",
            "visibility": "public"
          },
          {
            "canonicalName": "Trade.OrderStatus",
            "id": 14874,
            "members": [
              {
                "constant": false,
                "id": 14870,
                "mutability": "mutable",
                "name": "maxAmount",
                "nameLocation": "3661:9:80",
                "nodeType": "VariableDeclaration",
                "scope": 14874,
                "src": "3653:17:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14869,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3653:7:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14873,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "3687:6:80",
                "nodeType": "VariableDeclaration",
                "scope": 14874,
                "src": "3680:13:80",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Status_$14780",
                  "typeString": "enum Trade.Status"
                },
                "typeName": {
                  "id": 14872,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 14871,
                    "name": "Status",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 14780,
                    "src": "3680:6:80"
                  },
                  "referencedDeclaration": 14780,
                  "src": "3680:6:80",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Status_$14780",
                    "typeString": "enum Trade.Status"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "OrderStatus",
            "nameLocation": "3631:11:80",
            "nodeType": "StructDefinition",
            "scope": 15895,
            "src": "3624:76:80",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14879,
            "mutability": "mutable",
            "name": "orderLimit",
            "nameLocation": "3795:10:80",
            "nodeType": "VariableDeclaration",
            "scope": 15895,
            "src": "3763:42:80",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14874_storage_$",
              "typeString": "mapping(bytes32 => struct Trade.OrderStatus)"
            },
            "typeName": {
              "id": 14878,
              "keyType": {
                "id": 14875,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3771:7:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3763:31:80",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14874_storage_$",
                "typeString": "mapping(bytes32 => struct Trade.OrderStatus)"
              },
              "valueType": {
                "id": 14877,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 14876,
                  "name": "OrderStatus",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14874,
                  "src": "3782:11:80"
                },
                "referencedDeclaration": 14874,
                "src": "3782:11:80",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_OrderStatus_$14874_storage_ptr",
                  "typeString": "struct Trade.OrderStatus"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14906,
              "nodeType": "Block",
              "src": "3920:153:80",
              "statements": [
                {
                  "expression": {
                    "id": 14891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14889,
                      "name": "buyerFeePermille",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14816,
                      "src": "3930:16:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14890,
                      "name": "_buyerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14881,
                      "src": "3949:9:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3930:28:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 14892,
                  "nodeType": "ExpressionStatement",
                  "src": "3930:28:80"
                },
                {
                  "expression": {
                    "id": 14895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14893,
                      "name": "sellerFeePermille",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14818,
                      "src": "3968:17:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14894,
                      "name": "_sellerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14883,
                      "src": "3988:10:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3968:30:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 14896,
                  "nodeType": "ExpressionStatement",
                  "src": "3968:30:80"
                },
                {
                  "expression": {
                    "id": 14899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14897,
                      "name": "transferProxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14821,
                      "src": "4008:13:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITransferProxy_$14765",
                        "typeString": "contract ITransferProxy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14898,
                      "name": "_transferProxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14886,
                      "src": "4024:14:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITransferProxy_$14765",
                        "typeString": "contract ITransferProxy"
                      }
                    },
                    "src": "4008:30:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITransferProxy_$14765",
                      "typeString": "contract ITransferProxy"
                    }
                  },
                  "id": 14900,
                  "nodeType": "ExpressionStatement",
                  "src": "4008:30:80"
                },
                {
                  "expression": {
                    "id": 14904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14901,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14823,
                      "src": "4048:5:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 14902,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4056:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 14903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4056:10:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4048:18:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14905,
                  "nodeType": "ExpressionStatement",
                  "src": "4048:18:80"
                }
              ]
            },
            "id": 14907,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14881,
                  "mutability": "mutable",
                  "name": "_buyerFee",
                  "nameLocation": "3839:9:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 14907,
                  "src": "3833:15:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 14880,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3833:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14883,
                  "mutability": "mutable",
                  "name": "_sellerFee",
                  "nameLocation": "3864:10:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 14907,
                  "src": "3858:16:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 14882,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3858:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14886,
                  "mutability": "mutable",
                  "name": "_transferProxy",
                  "nameLocation": "3899:14:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 14907,
                  "src": "3884:29:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITransferProxy_$14765",
                    "typeString": "contract ITransferProxy"
                  },
                  "typeName": {
                    "id": 14885,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14884,
                      "name": "ITransferProxy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14765,
                      "src": "3884:14:80"
                    },
                    "referencedDeclaration": 14765,
                    "src": "3884:14:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITransferProxy_$14765",
                      "typeString": "contract ITransferProxy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3823:96:80"
            },
            "returnParameters": {
              "id": 14888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3920:0:80"
            },
            "scope": 15895,
            "src": "3812:261:80",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14918,
              "nodeType": "Block",
              "src": "4099:89:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14910,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4117:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 14911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4117:10:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 14912,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14823,
                          "src": "4129:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4117:17:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e20616c6c20746869732066756e6374696f6e",
                        "id": 14914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4135:34:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51ad396264f84709ad4269026509e9a624e8487203b518fbe12cbf6e3bd45edc",
                          "typeString": "literal_string \"Only owner can all this function\""
                        },
                        "value": "Only owner can all this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51ad396264f84709ad4269026509e9a624e8487203b518fbe12cbf6e3bd45edc",
                          "typeString": "literal_string \"Only owner can all this function\""
                        }
                      ],
                      "id": 14909,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4109:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4109:61:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14916,
                  "nodeType": "ExpressionStatement",
                  "src": "4109:61:80"
                },
                {
                  "id": 14917,
                  "nodeType": "PlaceholderStatement",
                  "src": "4180:1:80"
                }
              ]
            },
            "id": 14919,
            "name": "OnlyOwner",
            "nameLocation": "4088:9:80",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 14908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4097:2:80"
            },
            "src": "4079:109:80",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14930,
              "nodeType": "Block",
              "src": "4215:91:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14922,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4233:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 14923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4233:10:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 14924,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14825,
                          "src": "4245:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4233:18:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207369676e65722063616e20616c6c20746869732066756e6374696f6e",
                        "id": 14926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4252:35:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_818e0918d5f8f3c22488584ebd17e1866e4077457a7a7fbab6c59de50fbc5a43",
                          "typeString": "literal_string \"Only signer can all this function\""
                        },
                        "value": "Only signer can all this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_818e0918d5f8f3c22488584ebd17e1866e4077457a7a7fbab6c59de50fbc5a43",
                          "typeString": "literal_string \"Only signer can all this function\""
                        }
                      ],
                      "id": 14921,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4225:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4225:63:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14928,
                  "nodeType": "ExpressionStatement",
                  "src": "4225:63:80"
                },
                {
                  "id": 14929,
                  "nodeType": "PlaceholderStatement",
                  "src": "4298:1:80"
                }
              ]
            },
            "id": 14931,
            "name": "OnlySigner",
            "nameLocation": "4203:10:80",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 14920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4213:2:80"
            },
            "src": "4194:112:80",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15021,
              "nodeType": "Block",
              "src": "4406:673:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14938,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14935,
                            "src": "4424:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 14939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14838,
                          "src": "4424:12:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14942,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4448:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4440:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14940,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4440:7:80",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4440:10:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4424:26:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656c6c65722063616e6e6f7420626520656d707479",
                        "id": 14945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4452:24:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0232994d300f1855432717262d46f657ff60402553233f5cab772e9cc006f548",
                          "typeString": "literal_string \"Seller cannot be empty\""
                        },
                        "value": "Seller cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0232994d300f1855432717262d46f657ff60402553233f5cab772e9cc006f548",
                          "typeString": "literal_string \"Seller cannot be empty\""
                        }
                      ],
                      "id": 14937,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4416:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4416:61:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14947,
                  "nodeType": "ExpressionStatement",
                  "src": "4416:61:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14949,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14935,
                            "src": "4495:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 14950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14840,
                          "src": "4495:11:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14953,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4518:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4510:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14951,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4510:7:80",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4510:10:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4495:25:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42757965722063616e6e6f7420626520656d707479",
                        "id": 14956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4522:23:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1fb710e407d3acf7c76b5184aac53e479a04425b545529056daaa017a41197de",
                          "typeString": "literal_string \"Buyer cannot be empty\""
                        },
                        "value": "Buyer cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1fb710e407d3acf7c76b5184aac53e479a04425b545529056daaa017a41197de",
                          "typeString": "literal_string \"Buyer cannot be empty\""
                        }
                      ],
                      "id": 14948,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4487:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4487:59:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14958,
                  "nodeType": "ExpressionStatement",
                  "src": "4487:59:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14960,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14935,
                            "src": "4564:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 14961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nftAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14844,
                          "src": "4564:16:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4592:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4584:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14962,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4584:7:80",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4584:10:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4564:30:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e465420416464726573732063616e6e6f7420626520656d707479",
                        "id": 14967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4596:29:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e780f352d098f9a16b0fb7523366752ff32ed4302ddaad054445e5458bac72e7",
                          "typeString": "literal_string \"NFT Address cannot be empty\""
                        },
                        "value": "NFT Address cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e780f352d098f9a16b0fb7523366752ff32ed4302ddaad054445e5458bac72e7",
                          "typeString": "literal_string \"NFT Address cannot be empty\""
                        }
                      ],
                      "id": 14959,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4556:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4556:70:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14969,
                  "nodeType": "ExpressionStatement",
                  "src": "4556:70:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14971,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14935,
                            "src": "4657:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 14972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "startDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14855,
                          "src": "4657:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 14973,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4676:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 14974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4676:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4657:34:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41756374696f6e206973206e6f74207374617274656420796574",
                        "id": 14976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4705:28:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5a9b8cb24de78b4cc0610fef5a7806abc7253e6b7442e76e50ba2862e966585",
                          "typeString": "literal_string \"Auction is not started yet\""
                        },
                        "value": "Auction is not started yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5a9b8cb24de78b4cc0610fef5a7806abc7253e6b7442e76e50ba2862e966585",
                          "typeString": "literal_string \"Auction is not started yet\""
                        }
                      ],
                      "id": 14970,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4636:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4636:107:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14978,
                  "nodeType": "ExpressionStatement",
                  "src": "4636:107:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14980,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4761:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 14981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4761:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 14982,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14935,
                            "src": "4779:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 14983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14857,
                          "src": "4779:13:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4761:31:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41756374696f6e20697320656e646564",
                        "id": 14985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4794:18:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6411240398b6c1614d1df84c9aa8aea8046a0212eeb55a9a59b7cc84c1b0939",
                          "typeString": "literal_string \"Auction is ended\""
                        },
                        "value": "Auction is ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6411240398b6c1614d1df84c9aa8aea8046a0212eeb55a9a59b7cc84c1b0939",
                          "typeString": "literal_string \"Auction is ended\""
                        }
                      ],
                      "id": 14979,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4753:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4753:60:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14987,
                  "nodeType": "ExpressionStatement",
                  "src": "4753:60:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14989,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14935,
                            "src": "4831:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 14990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "unitPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14849,
                          "src": "4831:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 14991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4849:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4831:19:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e69742070726963652063616e6e6f74206265207a65726f",
                        "id": 14993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4852:27:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_530ab7dc56782b1c8db2179ce8929e7f68bd8990eea5c3b3c18ec0e36f36b331",
                          "typeString": "literal_string \"Unit price cannot be zero\""
                        },
                        "value": "Unit price cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_530ab7dc56782b1c8db2179ce8929e7f68bd8990eea5c3b3c18ec0e36f36b331",
                          "typeString": "literal_string \"Unit price cannot be zero\""
                        }
                      ],
                      "id": 14988,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4823:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4823:57:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14995,
                  "nodeType": "ExpressionStatement",
                  "src": "4823:57:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14997,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14935,
                            "src": "4898:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 14998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14859,
                          "src": "4898:13:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 14999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4914:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4898:17:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e49642063616e6e6f74206265207a65726f",
                        "id": 15001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4917:24:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_935879e226d4bdb9bd7e7e780091d0a26cb918d532ef3ba1f3e9947deddfc286",
                          "typeString": "literal_string \"TokenId cannot be zero\""
                        },
                        "value": "TokenId cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_935879e226d4bdb9bd7e7e780091d0a26cb918d532ef3ba1f3e9947deddfc286",
                          "typeString": "literal_string \"TokenId cannot be zero\""
                        }
                      ],
                      "id": 14996,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4890:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4890:52:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15003,
                  "nodeType": "ExpressionStatement",
                  "src": "4890:52:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 15005,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14935,
                            "src": "4960:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 15006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14861,
                          "src": "4960:12:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 15007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4975:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4960:16:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742063616e6e6f74206265207a65726f",
                        "id": 15009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4978:23:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8beea76deddeff1012d90e1e8da369393f885b0575eb094a33da9912cc4bbb8b",
                          "typeString": "literal_string \"Amount cannot be zero\""
                        },
                        "value": "Amount cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8beea76deddeff1012d90e1e8da369393f885b0575eb094a33da9912cc4bbb8b",
                          "typeString": "literal_string \"Amount cannot be zero\""
                        }
                      ],
                      "id": 15004,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4952:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4952:50:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15011,
                  "nodeType": "ExpressionStatement",
                  "src": "4952:50:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 15013,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14935,
                            "src": "5020:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 15014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "qty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14863,
                          "src": "5020:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 15015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5032:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5020:13:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5175616e746974792063616e6e6f74206265207a65726f",
                        "id": 15017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5035:25:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_662e76c4c7be31c911ead8c8dc124c282d7230289373f196ee23a95cc629918b",
                          "typeString": "literal_string \"Quantity cannot be zero\""
                        },
                        "value": "Quantity cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_662e76c4c7be31c911ead8c8dc124c282d7230289373f196ee23a95cc629918b",
                          "typeString": "literal_string \"Quantity cannot be zero\""
                        }
                      ],
                      "id": 15012,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5012:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5012:49:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15019,
                  "nodeType": "ExpressionStatement",
                  "src": "5012:49:80"
                },
                {
                  "id": 15020,
                  "nodeType": "PlaceholderStatement",
                  "src": "5071:1:80"
                }
              ]
            },
            "documentation": {
              "id": 14932,
              "nodeType": "StructuredDocumentation",
              "src": "4312:45:80",
              "text": "checks the order is valid"
            },
            "id": 15022,
            "name": "isvalidOrder",
            "nameLocation": "4371:12:80",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 14936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14935,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "4399:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15022,
                  "src": "4384:20:80",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                    "typeString": "struct Trade.Order"
                  },
                  "typeName": {
                    "id": 14934,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14933,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14868,
                      "src": "4384:5:80"
                    },
                    "referencedDeclaration": 14868,
                    "src": "4384:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14868_storage_ptr",
                      "typeString": "struct Trade.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4383:22:80"
            },
            "src": "4362:717:80",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15053,
              "nodeType": "Block",
              "src": "5182:314:80",
              "statements": [
                {
                  "assignments": [
                    15029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15029,
                      "mutability": "mutable",
                      "name": "buyerOrderhash",
                      "nameLocation": "5200:14:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 15053,
                      "src": "5192:22:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 15028,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5192:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15033,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 15031,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15026,
                        "src": "5235:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      ],
                      "id": 15030,
                      "name": "getOrderBuyerHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15830,
                      "src": "5217:17:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Order_$14868_calldata_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct Trade.Order calldata) pure returns (bytes32)"
                      }
                    },
                    "id": 15032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5217:24:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5192:49:80"
                },
                {
                  "assignments": [
                    15035
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15035,
                      "mutability": "mutable",
                      "name": "buyerOrderhashMessage",
                      "nameLocation": "5259:21:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 15053,
                      "src": "5251:29:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 15034,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5251:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15039,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 15037,
                        "name": "buyerOrderhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15029,
                        "src": "5292:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 15036,
                      "name": "prefixed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15846,
                      "src": "5283:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 15038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5283:24:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5251:56:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 15048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 15041,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15026,
                            "src": "5339:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 15042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14840,
                          "src": "5339:11:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 15044,
                              "name": "buyerOrderhashMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15035,
                              "src": "5384:21:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 15045,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15026,
                                "src": "5407:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "buyerOrdersignature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14867,
                              "src": "5407:25:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 15043,
                            "name": "recoverSigner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15873,
                            "src": "5370:13:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 15047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5370:63:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5339:94:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206269642064657461696c73",
                        "id": 15049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5447:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e68da84f21b80e71d3487e97fb1fff1029163585f2eaa681b648b6d33c0e2fa",
                          "typeString": "literal_string \"Invalid bid details\""
                        },
                        "value": "Invalid bid details"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e68da84f21b80e71d3487e97fb1fff1029163585f2eaa681b648b6d33c0e2fa",
                          "typeString": "literal_string \"Invalid bid details\""
                        }
                      ],
                      "id": 15040,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5318:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5318:160:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15051,
                  "nodeType": "ExpressionStatement",
                  "src": "5318:160:80"
                },
                {
                  "id": 15052,
                  "nodeType": "PlaceholderStatement",
                  "src": "5488:1:80"
                }
              ]
            },
            "documentation": {
              "id": 15023,
              "nodeType": "StructuredDocumentation",
              "src": "5085:45:80",
              "text": "checks the order is valid"
            },
            "id": 15054,
            "name": "isvalidOrderBid",
            "nameLocation": "5144:15:80",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 15027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15026,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "5175:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15054,
                  "src": "5160:20:80",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                    "typeString": "struct Trade.Order"
                  },
                  "typeName": {
                    "id": 15025,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15024,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14868,
                      "src": "5160:5:80"
                    },
                    "referencedDeclaration": 14868,
                    "src": "5160:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14868_storage_ptr",
                      "typeString": "struct Trade.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5159:22:80"
            },
            "src": "5135:361:80",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15062,
              "nodeType": "Block",
              "src": "5641:40:80",
              "statements": [
                {
                  "expression": {
                    "id": 15060,
                    "name": "buyerFeePermille",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14816,
                    "src": "5658:16:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 15059,
                  "id": 15061,
                  "nodeType": "Return",
                  "src": "5651:23:80"
                }
              ]
            },
            "documentation": {
              "id": 15055,
              "nodeType": "StructuredDocumentation",
              "src": "5502:69:80",
              "text": "returns the buyerservice Fee in multiply of 1000."
            },
            "functionSelector": "9c66809d",
            "id": 15063,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyerServiceFee",
            "nameLocation": "5585:15:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5600:2:80"
            },
            "returnParameters": {
              "id": 15059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15058,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15063,
                  "src": "5634:5:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 15057,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5634:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5633:7:80"
            },
            "scope": 15895,
            "src": "5576:105:80",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15071,
              "nodeType": "Block",
              "src": "5828:41:80",
              "statements": [
                {
                  "expression": {
                    "id": 15069,
                    "name": "sellerFeePermille",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14818,
                    "src": "5845:17:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 15068,
                  "id": 15070,
                  "nodeType": "Return",
                  "src": "5838:24:80"
                }
              ]
            },
            "documentation": {
              "id": 15064,
              "nodeType": "StructuredDocumentation",
              "src": "5687:70:80",
              "text": "returns the sellerservice Fee in multiply of 1000."
            },
            "functionSelector": "60085da6",
            "id": 15072,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellerServiceFee",
            "nameLocation": "5771:16:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5787:2:80"
            },
            "returnParameters": {
              "id": 15068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15067,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15072,
                  "src": "5821:5:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 15066,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5821:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5820:7:80"
            },
            "scope": 15895,
            "src": "5762:107:80",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15091,
              "nodeType": "Block",
              "src": "6022:138:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 15083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 15081,
                          "name": "buyerFeePermille",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14816,
                          "src": "6040:16:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 15082,
                          "name": "_buyerFeePermille",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15075,
                          "src": "6058:17:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "6040:35:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42757965724665655065726d696c6c652076616c75652069732073616d65",
                        "id": 15084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6076:32:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45ab2a59a0e95a2d07251692a1073e091187085eb92f80257f932439a93f4b62",
                          "typeString": "literal_string \"BuyerFeePermille value is same\""
                        },
                        "value": "BuyerFeePermille value is same"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45ab2a59a0e95a2d07251692a1073e091187085eb92f80257f932439a93f4b62",
                          "typeString": "literal_string \"BuyerFeePermille value is same\""
                        }
                      ],
                      "id": 15080,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6032:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6032:77:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15086,
                  "nodeType": "ExpressionStatement",
                  "src": "6032:77:80"
                },
                {
                  "expression": {
                    "id": 15089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15087,
                      "name": "buyerFeePermille",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14816,
                      "src": "6119:16:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15088,
                      "name": "_buyerFeePermille",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15075,
                      "src": "6136:17:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "6119:34:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 15090,
                  "nodeType": "ExpressionStatement",
                  "src": "6119:34:80"
                }
              ]
            },
            "documentation": {
              "id": 15073,
              "nodeType": "StructuredDocumentation",
              "src": "5875:69:80",
              "text": "returns the buyerservice Fee in multiply of 1000."
            },
            "functionSelector": "a96b446d",
            "id": 15092,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 15078,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15077,
                  "name": "OnlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14919,
                  "src": "6010:9:80"
                },
                "nodeType": "ModifierInvocation",
                "src": "6010:11:80"
              }
            ],
            "name": "setBuyerServiceFee",
            "nameLocation": "5959:18:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15075,
                  "mutability": "mutable",
                  "name": "_buyerFeePermille",
                  "nameLocation": "5984:17:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15092,
                  "src": "5978:23:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 15074,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5978:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5977:25:80"
            },
            "returnParameters": {
              "id": 15079,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6022:0:80"
            },
            "scope": 15895,
            "src": "5950:210:80",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15111,
              "nodeType": "Block",
              "src": "6316:143:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 15103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 15101,
                          "name": "sellerFeePermille",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14818,
                          "src": "6334:17:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 15102,
                          "name": "_sellerFeePermille",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15095,
                          "src": "6353:18:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "6334:37:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656c6c65724665655065726d696c6c652076616c75652069732073616d65",
                        "id": 15104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6372:33:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1b6679d28c127b63a0e7639ff84499fdd30665ebfc1a5554ab3f05786b087d7",
                          "typeString": "literal_string \"SellerFeePermille value is same\""
                        },
                        "value": "SellerFeePermille value is same"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1b6679d28c127b63a0e7639ff84499fdd30665ebfc1a5554ab3f05786b087d7",
                          "typeString": "literal_string \"SellerFeePermille value is same\""
                        }
                      ],
                      "id": 15100,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6326:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6326:80:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15106,
                  "nodeType": "ExpressionStatement",
                  "src": "6326:80:80"
                },
                {
                  "expression": {
                    "id": 15109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15107,
                      "name": "sellerFeePermille",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14818,
                      "src": "6416:17:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15108,
                      "name": "_sellerFeePermille",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15095,
                      "src": "6434:18:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "6416:36:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 15110,
                  "nodeType": "ExpressionStatement",
                  "src": "6416:36:80"
                }
              ]
            },
            "documentation": {
              "id": 15093,
              "nodeType": "StructuredDocumentation",
              "src": "6166:70:80",
              "text": "returns the sellerservice Fee in multiply of 1000."
            },
            "functionSelector": "a3667c7b",
            "id": 15112,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 15098,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15097,
                  "name": "OnlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14919,
                  "src": "6304:9:80"
                },
                "nodeType": "ModifierInvocation",
                "src": "6304:11:80"
              }
            ],
            "name": "setSellerServiceFee",
            "nameLocation": "6251:19:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15095,
                  "mutability": "mutable",
                  "name": "_sellerFeePermille",
                  "nameLocation": "6277:18:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15112,
                  "src": "6271:24:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 15094,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6271:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6270:26:80"
            },
            "returnParameters": {
              "id": 15099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6316:0:80"
            },
            "scope": 15895,
            "src": "6242:217:80",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15131,
              "nodeType": "Block",
              "src": "6571:88:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 15123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 15121,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14825,
                          "src": "6589:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 15122,
                          "name": "_signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15115,
                          "src": "6597:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6589:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5369676e65722076616c75652069732073616d65",
                        "id": 15124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6605:22:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b330f54cb3b506e1ff7dd011cf0af03f672b9aa361bc07d55d3a09f4938be41c",
                          "typeString": "literal_string \"Signer value is same\""
                        },
                        "value": "Signer value is same"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b330f54cb3b506e1ff7dd011cf0af03f672b9aa361bc07d55d3a09f4938be41c",
                          "typeString": "literal_string \"Signer value is same\""
                        }
                      ],
                      "id": 15120,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6581:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6581:47:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15126,
                  "nodeType": "ExpressionStatement",
                  "src": "6581:47:80"
                },
                {
                  "expression": {
                    "id": 15129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15127,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14825,
                      "src": "6638:6:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15128,
                      "name": "_signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15115,
                      "src": "6645:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6638:14:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 15130,
                  "nodeType": "ExpressionStatement",
                  "src": "6638:14:80"
                }
              ]
            },
            "documentation": {
              "id": 15113,
              "nodeType": "StructuredDocumentation",
              "src": "6464:46:80",
              "text": "set the signer in address."
            },
            "functionSelector": "6c19e783",
            "id": 15132,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 15118,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15117,
                  "name": "OnlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14919,
                  "src": "6559:9:80"
                },
                "nodeType": "ModifierInvocation",
                "src": "6559:11:80"
              }
            ],
            "name": "setSigner",
            "nameLocation": "6525:9:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15115,
                  "mutability": "mutable",
                  "name": "_signer",
                  "nameLocation": "6543:7:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15132,
                  "src": "6535:15:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6535:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6534:17:80"
            },
            "returnParameters": {
              "id": 15119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6571:0:80"
            },
            "scope": 15895,
            "src": "6516:143:80",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15156,
              "nodeType": "Block",
              "src": "6814:145:80",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 15154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Status_$14780",
                        "typeString": "enum Trade.Status"
                      },
                      "id": 15146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 15140,
                            "name": "orderLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14879,
                            "src": "6843:10:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14874_storage_$",
                              "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                            }
                          },
                          "id": 15142,
                          "indexExpression": {
                            "id": 15141,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15135,
                            "src": "6854:9:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6843:21:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderStatus_$14874_storage",
                            "typeString": "struct Trade.OrderStatus storage ref"
                          }
                        },
                        "id": 15143,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "status",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14873,
                        "src": "6843:28:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$14780",
                          "typeString": "enum Trade.Status"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 15144,
                          "name": "Status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14780,
                          "src": "6875:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Status_$14780_$",
                            "typeString": "type(enum Trade.Status)"
                          }
                        },
                        "id": 15145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "COMPLETED",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14778,
                        "src": "6875:16:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$14780",
                          "typeString": "enum Trade.Status"
                        }
                      },
                      "src": "6843:48:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Status_$14780",
                        "typeString": "enum Trade.Status"
                      },
                      "id": 15153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 15147,
                            "name": "orderLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14879,
                            "src": "6907:10:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14874_storage_$",
                              "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                            }
                          },
                          "id": 15149,
                          "indexExpression": {
                            "id": 15148,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15135,
                            "src": "6918:9:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6907:21:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderStatus_$14874_storage",
                            "typeString": "struct Trade.OrderStatus storage ref"
                          }
                        },
                        "id": 15150,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "status",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14873,
                        "src": "6907:28:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$14780",
                          "typeString": "enum Trade.Status"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 15151,
                          "name": "Status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14780,
                          "src": "6939:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Status_$14780_$",
                            "typeString": "type(enum Trade.Status)"
                          }
                        },
                        "id": 15152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "CANCEL",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14779,
                        "src": "6939:13:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$14780",
                          "typeString": "enum Trade.Status"
                        }
                      },
                      "src": "6907:45:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6843:109:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 15139,
                  "id": 15155,
                  "nodeType": "Return",
                  "src": "6824:128:80"
                }
              ]
            },
            "documentation": {
              "id": 15133,
              "nodeType": "StructuredDocumentation",
              "src": "6665:75:80",
              "text": "returns the whether the order is already exists or not."
            },
            "functionSelector": "8e1615ac",
            "id": 15157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOrderClosed",
            "nameLocation": "6754:13:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15135,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "6776:9:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15157,
                  "src": "6768:17:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15134,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6768:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6767:19:80"
            },
            "returnParameters": {
              "id": 15139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15138,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15157,
                  "src": "6808:4:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15137,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6808:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6807:6:80"
            },
            "scope": 15895,
            "src": "6745:214:80",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15224,
              "nodeType": "Block",
              "src": "7180:790:80",
              "statements": [
                {
                  "assignments": [
                    15167
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15167,
                      "mutability": "mutable",
                      "name": "sellerOrderhash",
                      "nameLocation": "7198:15:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 15224,
                      "src": "7190:23:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 15166,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7190:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15171,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 15169,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15161,
                        "src": "7235:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      ],
                      "id": 15168,
                      "name": "getOrderSellerHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15798,
                      "src": "7216:18:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Order_$14868_calldata_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct Trade.Order calldata) pure returns (bytes32)"
                      }
                    },
                    "id": 15170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7216:25:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7190:51:80"
                },
                {
                  "assignments": [
                    15173
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15173,
                      "mutability": "mutable",
                      "name": "sellerOrderhashMessage",
                      "nameLocation": "7259:22:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 15224,
                      "src": "7251:30:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 15172,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7251:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15177,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 15175,
                        "name": "sellerOrderhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15167,
                        "src": "7293:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 15174,
                      "name": "prefixed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15846,
                      "src": "7284:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 15176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7284:25:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7251:58:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 15183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 15179,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15161,
                            "src": "7328:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 15180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14838,
                          "src": "7328:12:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 15181,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7344:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 15182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7344:10:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7328:26:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f74206f726465722073656c6c6572",
                        "id": 15184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7356:28:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b736b3a4b26bc43c4b574dc3beb4a35e025f1fea386508885f1007a1f18d9143",
                          "typeString": "literal_string \"Caller is not order seller\""
                        },
                        "value": "Caller is not order seller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b736b3a4b26bc43c4b574dc3beb4a35e025f1fea386508885f1007a1f18d9143",
                          "typeString": "literal_string \"Caller is not order seller\""
                        }
                      ],
                      "id": 15178,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7320:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7320:65:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15186,
                  "nodeType": "ExpressionStatement",
                  "src": "7320:65:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 15195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 15188,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15161,
                            "src": "7416:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 15189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14838,
                          "src": "7416:12:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 15191,
                              "name": "sellerOrderhashMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15173,
                              "src": "7483:22:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 15192,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15161,
                                "src": "7527:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sellerOrdersignature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14865,
                              "src": "7527:26:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 15190,
                            "name": "recoverSigner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15873,
                            "src": "7448:13:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 15194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7448:123:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7416:155:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f726465722064657461696c73",
                        "id": 15196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7585:23:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78a9165f89a9f51c6398b08106809c65c4102ad9fd7f52adf2a2cf61e69e86d0",
                          "typeString": "literal_string \"Invalid order details\""
                        },
                        "value": "Invalid order details"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78a9165f89a9f51c6398b08106809c65c4102ad9fd7f52adf2a2cf61e69e86d0",
                          "typeString": "literal_string \"Invalid order details\""
                        }
                      ],
                      "id": 15187,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7395:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7395:223:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15198,
                  "nodeType": "ExpressionStatement",
                  "src": "7395:223:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7649:38:80",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 15201,
                              "name": "sellerOrderhashMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15173,
                              "src": "7664:22:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 15200,
                            "name": "isOrderClosed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15157,
                            "src": "7650:13:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
                              "typeString": "function (bytes32) view returns (bool)"
                            }
                          },
                          "id": 15202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7650:37:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7264657220616c726561647920636f6d706c746564206f722063616e63656c",
                        "id": 15204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7701:34:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c99eb1f384c1a02d19b903debb028bbe28a4ade3502226eaaa61a9ea9668aab",
                          "typeString": "literal_string \"Order already complted or cancel\""
                        },
                        "value": "Order already complted or cancel"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0c99eb1f384c1a02d19b903debb028bbe28a4ade3502226eaaa61a9ea9668aab",
                          "typeString": "literal_string \"Order already complted or cancel\""
                        }
                      ],
                      "id": 15199,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7628:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7628:117:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15206,
                  "nodeType": "ExpressionStatement",
                  "src": "7628:117:80"
                },
                {
                  "expression": {
                    "id": 15212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 15207,
                          "name": "orderLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14879,
                          "src": "7826:10:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14874_storage_$",
                            "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                          }
                        },
                        "id": 15209,
                        "indexExpression": {
                          "id": 15208,
                          "name": "sellerOrderhashMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15173,
                          "src": "7837:22:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7826:34:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderStatus_$14874_storage",
                          "typeString": "struct Trade.OrderStatus storage ref"
                        }
                      },
                      "id": 15210,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14870,
                      "src": "7826:44:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 15211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7873:1:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7826:48:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15213,
                  "nodeType": "ExpressionStatement",
                  "src": "7826:48:80"
                },
                {
                  "expression": {
                    "id": 15220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 15214,
                          "name": "orderLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14879,
                          "src": "7884:10:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14874_storage_$",
                            "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                          }
                        },
                        "id": 15216,
                        "indexExpression": {
                          "id": 15215,
                          "name": "sellerOrderhashMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15173,
                          "src": "7895:22:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7884:34:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderStatus_$14874_storage",
                          "typeString": "struct Trade.OrderStatus storage ref"
                        }
                      },
                      "id": 15217,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14873,
                      "src": "7884:41:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$14780",
                        "typeString": "enum Trade.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 15218,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14780,
                        "src": "7928:6:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$14780_$",
                          "typeString": "type(enum Trade.Status)"
                        }
                      },
                      "id": 15219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CANCEL",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14779,
                      "src": "7928:13:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$14780",
                        "typeString": "enum Trade.Status"
                      }
                    },
                    "src": "7884:57:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$14780",
                      "typeString": "enum Trade.Status"
                    }
                  },
                  "id": 15221,
                  "nodeType": "ExpressionStatement",
                  "src": "7884:57:80"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 15222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7959:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 15165,
                  "id": 15223,
                  "nodeType": "Return",
                  "src": "7952:11:80"
                }
              ]
            },
            "documentation": {
              "id": 15158,
              "nodeType": "StructuredDocumentation",
              "src": "6965:145:80",
              "text": "cancel Order.\n@param order ordervalues(seller, buyer,...).\nthis will cancel the invalid use of sign order data"
            },
            "functionSelector": "96c94acf",
            "id": 15225,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelOrder",
            "nameLocation": "7124:11:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15161,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "7151:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15225,
                  "src": "7136:20:80",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                    "typeString": "struct Trade.Order"
                  },
                  "typeName": {
                    "id": 15160,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15159,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14868,
                      "src": "7136:5:80"
                    },
                    "referencedDeclaration": 14868,
                    "src": "7136:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14868_storage_ptr",
                      "typeString": "struct Trade.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7135:22:80"
            },
            "returnParameters": {
              "id": 15165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15164,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15225,
                  "src": "7174:4:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15163,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7174:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7173:6:80"
            },
            "scope": 15895,
            "src": "7115:855:80",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15343,
              "nodeType": "Block",
              "src": "8265:1459:80",
              "statements": [
                {
                  "assignments": [
                    15235
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15235,
                      "mutability": "mutable",
                      "name": "sellerOrderhash",
                      "nameLocation": "8283:15:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 15343,
                      "src": "8275:23:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 15234,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8275:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15239,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 15237,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15229,
                        "src": "8320:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      ],
                      "id": 15236,
                      "name": "getOrderSellerHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15798,
                      "src": "8301:18:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Order_$14868_calldata_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct Trade.Order calldata) pure returns (bytes32)"
                      }
                    },
                    "id": 15238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8301:25:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8275:51:80"
                },
                {
                  "assignments": [
                    15241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15241,
                      "mutability": "mutable",
                      "name": "sellerOrderhashMessage",
                      "nameLocation": "8344:22:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 15343,
                      "src": "8336:30:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 15240,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8336:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15245,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 15243,
                        "name": "sellerOrderhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15235,
                        "src": "8378:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 15242,
                      "name": "prefixed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15846,
                      "src": "8369:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 15244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8369:25:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8336:58:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 15254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 15247,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15229,
                            "src": "8426:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 15248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14838,
                          "src": "8426:12:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 15250,
                              "name": "sellerOrderhashMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15241,
                              "src": "8493:22:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 15251,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15229,
                                "src": "8537:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sellerOrdersignature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14865,
                              "src": "8537:26:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 15249,
                            "name": "recoverSigner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15873,
                            "src": "8458:13:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 15253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8458:123:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8426:155:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f726465722064657461696c73",
                        "id": 15255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8595:23:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78a9165f89a9f51c6398b08106809c65c4102ad9fd7f52adf2a2cf61e69e86d0",
                          "typeString": "literal_string \"Invalid order details\""
                        },
                        "value": "Invalid order details"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78a9165f89a9f51c6398b08106809c65c4102ad9fd7f52adf2a2cf61e69e86d0",
                          "typeString": "literal_string \"Invalid order details\""
                        }
                      ],
                      "id": 15246,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8405:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8405:223:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15257,
                  "nodeType": "ExpressionStatement",
                  "src": "8405:223:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8646:38:80",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 15260,
                              "name": "sellerOrderhashMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15241,
                              "src": "8661:22:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 15259,
                            "name": "isOrderClosed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15157,
                            "src": "8647:13:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
                              "typeString": "function (bytes32) view returns (bool)"
                            }
                          },
                          "id": 15261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8647:37:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7264657220636c6f736564",
                        "id": 15263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8686:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee7795d41bcacc139a12c4d8a7d29e2e70d3d410cf6ed4eda0b4229156b7a294",
                          "typeString": "literal_string \"Order closed\""
                        },
                        "value": "Order closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee7795d41bcacc139a12c4d8a7d29e2e70d3d410cf6ed4eda0b4229156b7a294",
                          "typeString": "literal_string \"Order closed\""
                        }
                      ],
                      "id": 15258,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8638:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8638:63:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15265,
                  "nodeType": "ExpressionStatement",
                  "src": "8638:63:80"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Status_$14780",
                      "typeString": "enum Trade.Status"
                    },
                    "id": 15272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 15266,
                          "name": "orderLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14879,
                          "src": "8778:10:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14874_storage_$",
                            "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                          }
                        },
                        "id": 15268,
                        "indexExpression": {
                          "id": 15267,
                          "name": "sellerOrderhashMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15241,
                          "src": "8789:22:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8778:34:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderStatus_$14874_storage",
                          "typeString": "struct Trade.OrderStatus storage ref"
                        }
                      },
                      "id": 15269,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14873,
                      "src": "8778:41:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$14780",
                        "typeString": "enum Trade.Status"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 15270,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14780,
                        "src": "8823:6:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$14780_$",
                          "typeString": "type(enum Trade.Status)"
                        }
                      },
                      "id": 15271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "NONE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14776,
                      "src": "8823:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$14780",
                        "typeString": "enum Trade.Status"
                      }
                    },
                    "src": "8778:56:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Status_$14780",
                        "typeString": "enum Trade.Status"
                      },
                      "id": 15296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 15290,
                            "name": "orderLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14879,
                            "src": "9009:10:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14874_storage_$",
                              "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                            }
                          },
                          "id": 15292,
                          "indexExpression": {
                            "id": 15291,
                            "name": "sellerOrderhashMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15241,
                            "src": "9020:22:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9009:34:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderStatus_$14874_storage",
                            "typeString": "struct Trade.OrderStatus storage ref"
                          }
                        },
                        "id": 15293,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "status",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14873,
                        "src": "9009:41:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$14780",
                          "typeString": "enum Trade.Status"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 15294,
                          "name": "Status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14780,
                          "src": "9054:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Status_$14780_$",
                            "typeString": "type(enum Trade.Status)"
                          }
                        },
                        "id": 15295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "LIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14777,
                        "src": "9054:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$14780",
                          "typeString": "enum Trade.Status"
                        }
                      },
                      "src": "9009:56:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 15339,
                    "nodeType": "IfStatement",
                    "src": "9005:691:80",
                    "trueBody": {
                      "id": 15338,
                      "nodeType": "Block",
                      "src": "9067:629:80",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 15304,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 15298,
                                      "name": "orderLimit",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14879,
                                      "src": "9106:10:80",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14874_storage_$",
                                        "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                                      }
                                    },
                                    "id": 15300,
                                    "indexExpression": {
                                      "id": 15299,
                                      "name": "sellerOrderhashMessage",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 15241,
                                      "src": "9117:22:80",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9106:34:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OrderStatus_$14874_storage",
                                      "typeString": "struct Trade.OrderStatus storage ref"
                                    }
                                  },
                                  "id": 15301,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "maxAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14870,
                                  "src": "9106:44:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 15302,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15229,
                                    "src": "9154:5:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                      "typeString": "struct Trade.Order calldata"
                                    }
                                  },
                                  "id": 15303,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "qty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14863,
                                  "src": "9154:9:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9106:57:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4f72646572205175616e7469747920697320696e76616c6964",
                                "id": 15305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9181:27:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_d6b39d85b143f9803d307392c43cc4279a0ab934faeb0976571dd4e99e023a0c",
                                  "typeString": "literal_string \"Order Quantity is invalid\""
                                },
                                "value": "Order Quantity is invalid"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_d6b39d85b143f9803d307392c43cc4279a0ab934faeb0976571dd4e99e023a0c",
                                  "typeString": "literal_string \"Order Quantity is invalid\""
                                }
                              ],
                              "id": 15297,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "9081:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 15306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9081:141:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 15307,
                          "nodeType": "ExpressionStatement",
                          "src": "9081:141:80"
                        },
                        {
                          "assignments": [
                            15309
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 15309,
                              "mutability": "mutable",
                              "name": "_updatedMaxAmount",
                              "nameLocation": "9299:17:80",
                              "nodeType": "VariableDeclaration",
                              "scope": 15338,
                              "src": "9291:25:80",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 15308,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9291:7:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 15317,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 15316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 15310,
                                  "name": "orderLimit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14879,
                                  "src": "9319:10:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14874_storage_$",
                                    "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                                  }
                                },
                                "id": 15312,
                                "indexExpression": {
                                  "id": 15311,
                                  "name": "sellerOrderhashMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15241,
                                  "src": "9330:22:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9319:34:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderStatus_$14874_storage",
                                  "typeString": "struct Trade.OrderStatus storage ref"
                                }
                              },
                              "id": 15313,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "maxAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14870,
                              "src": "9319:61:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "expression": {
                                "id": 15314,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15229,
                                "src": "9383:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "qty",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14863,
                              "src": "9383:9:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9319:73:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9291:101:80"
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 15320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 15318,
                              "name": "_updatedMaxAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15309,
                              "src": "9410:17:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 15319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9431:1:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "9410:22:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 15330,
                          "nodeType": "IfStatement",
                          "src": "9406:202:80",
                          "trueBody": {
                            "id": 15329,
                            "nodeType": "Block",
                            "src": "9434:174:80",
                            "statements": [
                              {
                                "expression": {
                                  "id": 15327,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 15321,
                                        "name": "orderLimit",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 14879,
                                        "src": "9533:10:80",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14874_storage_$",
                                          "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                                        }
                                      },
                                      "id": 15323,
                                      "indexExpression": {
                                        "id": 15322,
                                        "name": "sellerOrderhashMessage",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 15241,
                                        "src": "9544:22:80",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9533:34:80",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_OrderStatus_$14874_storage",
                                        "typeString": "struct Trade.OrderStatus storage ref"
                                      }
                                    },
                                    "id": 15324,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberName": "status",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14873,
                                    "src": "9533:41:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Status_$14780",
                                      "typeString": "enum Trade.Status"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "expression": {
                                      "id": 15325,
                                      "name": "Status",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14780,
                                      "src": "9577:6:80",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Status_$14780_$",
                                        "typeString": "type(enum Trade.Status)"
                                      }
                                    },
                                    "id": 15326,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "COMPLETED",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14778,
                                    "src": "9577:16:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Status_$14780",
                                      "typeString": "enum Trade.Status"
                                    }
                                  },
                                  "src": "9533:60:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$14780",
                                    "typeString": "enum Trade.Status"
                                  }
                                },
                                "id": 15328,
                                "nodeType": "ExpressionStatement",
                                "src": "9533:60:80"
                              }
                            ]
                          }
                        },
                        {
                          "expression": {
                            "id": 15336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 15331,
                                  "name": "orderLimit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14879,
                                  "src": "9621:10:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14874_storage_$",
                                    "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                                  }
                                },
                                "id": 15333,
                                "indexExpression": {
                                  "id": 15332,
                                  "name": "sellerOrderhashMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15241,
                                  "src": "9632:22:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9621:34:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderStatus_$14874_storage",
                                  "typeString": "struct Trade.OrderStatus storage ref"
                                }
                              },
                              "id": 15334,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "maxAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14870,
                              "src": "9621:44:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 15335,
                              "name": "_updatedMaxAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15309,
                              "src": "9668:17:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9621:64:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 15337,
                          "nodeType": "ExpressionStatement",
                          "src": "9621:64:80"
                        }
                      ]
                    }
                  },
                  "id": 15340,
                  "nodeType": "IfStatement",
                  "src": "8774:922:80",
                  "trueBody": {
                    "id": 15289,
                    "nodeType": "Block",
                    "src": "8836:163:80",
                    "statements": [
                      {
                        "expression": {
                          "id": 15279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 15273,
                                "name": "orderLimit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14879,
                                "src": "8850:10:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14874_storage_$",
                                  "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                                }
                              },
                              "id": 15275,
                              "indexExpression": {
                                "id": 15274,
                                "name": "sellerOrderhashMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15241,
                                "src": "8861:22:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8850:34:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderStatus_$14874_storage",
                                "typeString": "struct Trade.OrderStatus storage ref"
                              }
                            },
                            "id": 15276,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "maxAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14870,
                            "src": "8850:44:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 15277,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15229,
                              "src": "8897:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftOrderQuantity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14851,
                            "src": "8897:22:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8850:69:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15280,
                        "nodeType": "ExpressionStatement",
                        "src": "8850:69:80"
                      },
                      {
                        "expression": {
                          "id": 15287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 15281,
                                "name": "orderLimit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14879,
                                "src": "8933:10:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14874_storage_$",
                                  "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                                }
                              },
                              "id": 15283,
                              "indexExpression": {
                                "id": 15282,
                                "name": "sellerOrderhashMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15241,
                                "src": "8944:22:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8933:34:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderStatus_$14874_storage",
                                "typeString": "struct Trade.OrderStatus storage ref"
                              }
                            },
                            "id": 15284,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14873,
                            "src": "8933:41:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$14780",
                              "typeString": "enum Trade.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 15285,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14780,
                              "src": "8977:6:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$14780_$",
                                "typeString": "type(enum Trade.Status)"
                              }
                            },
                            "id": 15286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "LIVE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14777,
                            "src": "8977:11:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$14780",
                              "typeString": "enum Trade.Status"
                            }
                          },
                          "src": "8933:55:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$14780",
                            "typeString": "enum Trade.Status"
                          }
                        },
                        "id": 15288,
                        "nodeType": "ExpressionStatement",
                        "src": "8933:55:80"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 15341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9713:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 15233,
                  "id": 15342,
                  "nodeType": "Return",
                  "src": "9706:11:80"
                }
              ]
            },
            "documentation": {
              "id": 15226,
              "nodeType": "StructuredDocumentation",
              "src": "7976:176:80",
              "text": "validate and Update Order Limit.\n@param order ordervalues(seller, buyer,...).\nthis will validate and update the signature of order for seller"
            },
            "id": 15344,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateandUpdateOrderForSeller",
            "nameLocation": "8166:31:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15229,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "8213:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15344,
                  "src": "8198:20:80",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                    "typeString": "struct Trade.Order"
                  },
                  "typeName": {
                    "id": 15228,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15227,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14868,
                      "src": "8198:5:80"
                    },
                    "referencedDeclaration": 14868,
                    "src": "8198:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14868_storage_ptr",
                      "typeString": "struct Trade.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8197:22:80"
            },
            "returnParameters": {
              "id": 15233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15232,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15344,
                  "src": "8255:4:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15231,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8255:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8254:6:80"
            },
            "scope": 15895,
            "src": "8157:1567:80",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15414,
              "nodeType": "Block",
              "src": "9942:503:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 15361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 15357,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9960:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 15358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9960:10:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 15359,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15348,
                            "src": "9972:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 15360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14840,
                          "src": "9972:11:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9960:23:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f726465722062757965722063616e2063616c6c2074686973206d6574686f64",
                        "id": 15362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9984:39:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba600277e48edf73e4c4cfe3b5ef7ab485c317e94395cf181dcd19efbd5f916e",
                          "typeString": "literal_string \"Only order buyer can call this method\""
                        },
                        "value": "Only order buyer can call this method"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba600277e48edf73e4c4cfe3b5ef7ab485c317e94395cf181dcd19efbd5f916e",
                          "typeString": "literal_string \"Only order buyer can call this method\""
                        }
                      ],
                      "id": 15356,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9952:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9952:72:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15364,
                  "nodeType": "ExpressionStatement",
                  "src": "9952:72:80"
                },
                {
                  "assignments": [
                    15367
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15367,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "10045:3:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 15414,
                      "src": "10034:14:80",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fee_$14836_memory_ptr",
                        "typeString": "struct Trade.Fee"
                      },
                      "typeName": {
                        "id": 15366,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 15365,
                          "name": "Fee",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14836,
                          "src": "10034:3:80"
                        },
                        "referencedDeclaration": 14836,
                        "src": "10034:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fee_$14836_storage_ptr",
                          "typeString": "struct Trade.Fee"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15371,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 15369,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15348,
                        "src": "10059:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      ],
                      "id": 15368,
                      "name": "getFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15575,
                      "src": "10051:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Order_$14868_calldata_ptr_$returns$_t_struct$_Fee_$14836_memory_ptr_$",
                        "typeString": "function (struct Trade.Order calldata) view returns (struct Trade.Fee memory)"
                      }
                    },
                    "id": 15370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10051:14:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fee_$14836_memory_ptr",
                      "typeString": "struct Trade.Fee memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10034:31:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 15380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 15373,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15367,
                                "src": "10097:3:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Fee_$14836_memory_ptr",
                                  "typeString": "struct Trade.Fee memory"
                                }
                              },
                              "id": 15374,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14833,
                              "src": "10097:9:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 15379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 15375,
                                  "name": "order",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15348,
                                  "src": "10110:5:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                    "typeString": "struct Trade.Order calldata"
                                  }
                                },
                                "id": 15376,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "unitPrice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14849,
                                "src": "10110:15:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 15377,
                                  "name": "order",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15348,
                                  "src": "10128:5:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                    "typeString": "struct Trade.Order calldata"
                                  }
                                },
                                "id": 15378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "qty",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14863,
                                "src": "10128:9:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10110:27:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10097:40:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 15381,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "10096:42:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061696420696e76616c696420616d6f756e74",
                        "id": 15382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10152:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1720ac4e2a48e81b9bc85ccf3361a2938d26d92bf9e3070ee081eb99ab7f6caa",
                          "typeString": "literal_string \"Paid invalid amount\""
                        },
                        "value": "Paid invalid amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1720ac4e2a48e81b9bc85ccf3361a2938d26d92bf9e3070ee081eb99ab7f6caa",
                          "typeString": "literal_string \"Paid invalid amount\""
                        }
                      ],
                      "id": 15372,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10075:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10075:109:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15384,
                  "nodeType": "ExpressionStatement",
                  "src": "10075:109:80"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 15386,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15348,
                        "src": "10230:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      ],
                      "id": 15385,
                      "name": "validateandUpdateOrderForSeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15344,
                      "src": "10198:31:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Order_$14868_calldata_ptr_$returns$_t_bool_$",
                        "typeString": "function (struct Trade.Order calldata) returns (bool)"
                      }
                    },
                    "id": 15387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10198:38:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15411,
                  "nodeType": "IfStatement",
                  "src": "10194:223:80",
                  "trueBody": {
                    "id": 15410,
                    "nodeType": "Block",
                    "src": "10238:179:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 15389,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15348,
                              "src": "10263:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            {
                              "id": 15390,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15367,
                              "src": "10270:3:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Fee_$14836_memory_ptr",
                                "typeString": "struct Trade.Fee memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 15391,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15348,
                                "src": "10275:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "buyer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14840,
                              "src": "10275:11:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 15393,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15348,
                                "src": "10288:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "seller",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14838,
                              "src": "10288:12:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              },
                              {
                                "typeIdentifier": "t_struct$_Fee_$14836_memory_ptr",
                                "typeString": "struct Trade.Fee memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 15388,
                            "name": "tradeAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15690,
                            "src": "10252:10:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Order_$14868_calldata_ptr_$_t_struct$_Fee_$14836_memory_ptr_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (struct Trade.Order calldata,struct Trade.Fee memory,address,address)"
                            }
                          },
                          "id": 15395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10252:49:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15396,
                        "nodeType": "ExpressionStatement",
                        "src": "10252:49:80"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 15398,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15348,
                                "src": "10329:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "seller",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14838,
                              "src": "10329:12:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 15400,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15348,
                                "src": "10343:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14859,
                              "src": "10343:13:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 15402,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15348,
                                "src": "10358:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "qty",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14863,
                              "src": "10358:9:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 15404,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15348,
                                "src": "10369:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "buyer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14840,
                              "src": "10369:11:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 15397,
                            "name": "BuyAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14804,
                            "src": "10320:8:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,uint256,uint256,address)"
                            }
                          },
                          "id": 15406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10320:61:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15407,
                        "nodeType": "EmitStatement",
                        "src": "10315:66:80"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 15408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10402:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 15355,
                        "id": 15409,
                        "nodeType": "Return",
                        "src": "10395:11:80"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 15412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10433:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 15355,
                  "id": 15413,
                  "nodeType": "Return",
                  "src": "10426:12:80"
                }
              ]
            },
            "documentation": {
              "id": 15345,
              "nodeType": "StructuredDocumentation",
              "src": "9730:95:80",
              "text": "excuting the NFT order.\n@param order ordervalues(seller, buyer,...)."
            },
            "functionSelector": "8162b6bd",
            "id": 15415,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 15351,
                    "name": "order",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15348,
                    "src": "9908:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                      "typeString": "struct Trade.Order calldata"
                    }
                  }
                ],
                "id": 15352,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15350,
                  "name": "isvalidOrder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15022,
                  "src": "9895:12:80"
                },
                "nodeType": "ModifierInvocation",
                "src": "9895:19:80"
              }
            ],
            "name": "buyAsset",
            "nameLocation": "9839:8:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15348,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "9863:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15415,
                  "src": "9848:20:80",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                    "typeString": "struct Trade.Order"
                  },
                  "typeName": {
                    "id": 15347,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15346,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14868,
                      "src": "9848:5:80"
                    },
                    "referencedDeclaration": 14868,
                    "src": "9848:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14868_storage_ptr",
                      "typeString": "struct Trade.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9847:22:80"
            },
            "returnParameters": {
              "id": 15355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15354,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15415,
                  "src": "9932:4:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15353,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9932:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9931:6:80"
            },
            "scope": 15895,
            "src": "9830:615:80",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15467,
              "nodeType": "Block",
              "src": "10596:290:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 15434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 15430,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10614:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 15431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10614:10:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 15432,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15418,
                            "src": "10626:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 15433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14838,
                          "src": "10626:12:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10614:24:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f726465722073656c6c65722063616e2063616c6c2074686973206d6574686f64",
                        "id": 15435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10639:40:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7781e8c9acdd69da49f1e6194130023eb30523cfd8e98d7d3dc6a8996b296997",
                          "typeString": "literal_string \"Only order seller can call this method\""
                        },
                        "value": "Only order seller can call this method"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7781e8c9acdd69da49f1e6194130023eb30523cfd8e98d7d3dc6a8996b296997",
                          "typeString": "literal_string \"Only order seller can call this method\""
                        }
                      ],
                      "id": 15429,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10606:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10606:74:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15437,
                  "nodeType": "ExpressionStatement",
                  "src": "10606:74:80"
                },
                {
                  "assignments": [
                    15440
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15440,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "10701:3:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 15467,
                      "src": "10690:14:80",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fee_$14836_memory_ptr",
                        "typeString": "struct Trade.Fee"
                      },
                      "typeName": {
                        "id": 15439,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 15438,
                          "name": "Fee",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14836,
                          "src": "10690:3:80"
                        },
                        "referencedDeclaration": 14836,
                        "src": "10690:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fee_$14836_storage_ptr",
                          "typeString": "struct Trade.Fee"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15444,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 15442,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15418,
                        "src": "10715:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      ],
                      "id": 15441,
                      "name": "getFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15575,
                      "src": "10707:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Order_$14868_calldata_ptr_$returns$_t_struct$_Fee_$14836_memory_ptr_$",
                        "typeString": "function (struct Trade.Order calldata) view returns (struct Trade.Fee memory)"
                      }
                    },
                    "id": 15443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10707:14:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fee_$14836_memory_ptr",
                      "typeString": "struct Trade.Fee memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10690:31:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15446,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15418,
                        "src": "10742:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      },
                      {
                        "id": 15447,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15440,
                        "src": "10749:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fee_$14836_memory_ptr",
                          "typeString": "struct Trade.Fee memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 15448,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15418,
                          "src": "10754:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                            "typeString": "struct Trade.Order calldata"
                          }
                        },
                        "id": 15449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14840,
                        "src": "10754:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 15450,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15418,
                          "src": "10767:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                            "typeString": "struct Trade.Order calldata"
                          }
                        },
                        "id": 15451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14838,
                        "src": "10767:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_Fee_$14836_memory_ptr",
                          "typeString": "struct Trade.Fee memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15445,
                      "name": "tradeAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15690,
                      "src": "10731:10:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Order_$14868_calldata_ptr_$_t_struct$_Fee_$14836_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (struct Trade.Order calldata,struct Trade.Fee memory,address,address)"
                      }
                    },
                    "id": 15452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10731:49:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15453,
                  "nodeType": "ExpressionStatement",
                  "src": "10731:49:80"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 15455,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15418,
                          "src": "10806:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                            "typeString": "struct Trade.Order calldata"
                          }
                        },
                        "id": 15456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14838,
                        "src": "10806:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 15457,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15418,
                          "src": "10820:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                            "typeString": "struct Trade.Order calldata"
                          }
                        },
                        "id": 15458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14859,
                        "src": "10820:13:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 15459,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15418,
                          "src": "10835:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                            "typeString": "struct Trade.Order calldata"
                          }
                        },
                        "id": 15460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "qty",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14863,
                        "src": "10835:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 15461,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15418,
                          "src": "10846:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                            "typeString": "struct Trade.Order calldata"
                          }
                        },
                        "id": 15462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14840,
                        "src": "10846:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15454,
                      "name": "ExecuteBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14814,
                      "src": "10795:10:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,uint256,address)"
                      }
                    },
                    "id": 15463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10795:63:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15464,
                  "nodeType": "EmitStatement",
                  "src": "10790:68:80"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 15465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10875:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 15428,
                  "id": 15466,
                  "nodeType": "Return",
                  "src": "10868:11:80"
                }
              ]
            },
            "functionSelector": "dab56b48",
            "id": 15468,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 15421,
                    "name": "order",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15418,
                    "src": "10531:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                      "typeString": "struct Trade.Order calldata"
                    }
                  }
                ],
                "id": 15422,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15420,
                  "name": "isvalidOrder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15022,
                  "src": "10518:12:80"
                },
                "nodeType": "ModifierInvocation",
                "src": "10518:19:80"
              },
              {
                "arguments": [
                  {
                    "id": 15424,
                    "name": "order",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15418,
                    "src": "10562:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                      "typeString": "struct Trade.Order calldata"
                    }
                  }
                ],
                "id": 15425,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15423,
                  "name": "isvalidOrderBid",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15054,
                  "src": "10546:15:80"
                },
                "nodeType": "ModifierInvocation",
                "src": "10546:22:80"
              }
            ],
            "name": "executeBid",
            "nameLocation": "10460:10:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15418,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "10486:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15468,
                  "src": "10471:20:80",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                    "typeString": "struct Trade.Order"
                  },
                  "typeName": {
                    "id": 15417,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15416,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14868,
                      "src": "10471:5:80"
                    },
                    "referencedDeclaration": 14868,
                    "src": "10471:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14868_storage_ptr",
                      "typeString": "struct Trade.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10470:22:80"
            },
            "returnParameters": {
              "id": 15428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15427,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15468,
                  "src": "10586:4:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15426,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10586:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10585:6:80"
            },
            "scope": 15895,
            "src": "10451:435:80",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15574,
              "nodeType": "Block",
              "src": "10964:815:80",
              "statements": [
                {
                  "assignments": [
                    15478
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15478,
                      "mutability": "mutable",
                      "name": "tokenCreator",
                      "nameLocation": "10982:12:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 15574,
                      "src": "10974:20:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 15477,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10974:7:80",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15479,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10974:20:80"
                },
                {
                  "assignments": [
                    15481
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15481,
                      "mutability": "mutable",
                      "name": "platformFee",
                      "nameLocation": "11012:11:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 15574,
                      "src": "11004:19:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15480,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11004:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15482,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11004:19:80"
                },
                {
                  "assignments": [
                    15484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15484,
                      "mutability": "mutable",
                      "name": "royaltyFee",
                      "nameLocation": "11041:10:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 15574,
                      "src": "11033:18:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15483,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11033:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15485,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11033:18:80"
                },
                {
                  "assignments": [
                    15487
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15487,
                      "mutability": "mutable",
                      "name": "assetFee",
                      "nameLocation": "11069:8:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 15574,
                      "src": "11061:16:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15486,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11061:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15488,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11061:16:80"
                },
                {
                  "assignments": [
                    15490
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15490,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "11095:5:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 15574,
                      "src": "11087:13:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15489,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11087:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15501,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 15494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 15491,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15471,
                              "src": "11104:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14861,
                            "src": "11104:12:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 15493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11119:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "11104:19:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 15495,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11103:21:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 15498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 15496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11128:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 15497,
                            "name": "buyerFeePermille",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14816,
                            "src": "11135:16:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "11128:23:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "id": 15499,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11127:25:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "11103:49:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11087:65:80"
                },
                {
                  "assignments": [
                    15503
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15503,
                      "mutability": "mutable",
                      "name": "buyerFee",
                      "nameLocation": "11170:8:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 15574,
                      "src": "11162:16:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15502,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11162:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15508,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 15504,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15471,
                        "src": "11181:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      },
                      "id": 15505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14861,
                      "src": "11181:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 15506,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15490,
                      "src": "11196:5:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11181:20:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11162:39:80"
                },
                {
                  "assignments": [
                    15510
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15510,
                      "mutability": "mutable",
                      "name": "sellerFee",
                      "nameLocation": "11219:9:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 15574,
                      "src": "11211:17:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15509,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11211:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15517,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 15513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 15511,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15490,
                            "src": "11232:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 15512,
                            "name": "sellerFeePermille",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14818,
                            "src": "11240:17:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "11232:25:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 15514,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11231:27:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 15515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11261:4:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "11231:34:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11211:54:80"
                },
                {
                  "expression": {
                    "id": 15522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15518,
                      "name": "platformFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15481,
                      "src": "11275:11:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 15521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 15519,
                        "name": "buyerFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15503,
                        "src": "11289:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 15520,
                        "name": "sellerFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15510,
                        "src": "11300:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11289:20:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11275:34:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15523,
                  "nodeType": "ExpressionStatement",
                  "src": "11275:34:80"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 15541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "11336:18:80",
                      "subExpression": {
                        "expression": {
                          "id": 15524,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15471,
                          "src": "11337:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                            "typeString": "struct Trade.Order calldata"
                          }
                        },
                        "id": 15525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "skipRoyalty",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14853,
                        "src": "11337:17:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 15539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                                  "typeString": "enum Trade.BuyingAssetType"
                                },
                                "id": 15531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 15527,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15471,
                                    "src": "11372:5:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                      "typeString": "struct Trade.Order calldata"
                                    }
                                  },
                                  "id": 15528,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14847,
                                  "src": "11372:13:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                                    "typeString": "enum Trade.BuyingAssetType"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 15529,
                                    "name": "BuyingAssetType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14775,
                                    "src": "11389:15:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_BuyingAssetType_$14775_$",
                                      "typeString": "type(enum Trade.BuyingAssetType)"
                                    }
                                  },
                                  "id": 15530,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "ERC721",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14774,
                                  "src": "11389:22:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                                    "typeString": "enum Trade.BuyingAssetType"
                                  }
                                },
                                "src": "11372:39:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 15532,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11371:41:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                                  "typeString": "enum Trade.BuyingAssetType"
                                },
                                "id": 15537,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 15533,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15471,
                                    "src": "11433:5:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                      "typeString": "struct Trade.Order calldata"
                                    }
                                  },
                                  "id": 15534,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14847,
                                  "src": "11433:13:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                                    "typeString": "enum Trade.BuyingAssetType"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 15535,
                                    "name": "BuyingAssetType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14775,
                                    "src": "11450:15:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_BuyingAssetType_$14775_$",
                                      "typeString": "type(enum Trade.BuyingAssetType)"
                                    }
                                  },
                                  "id": 15536,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "ERC1155",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14773,
                                  "src": "11450:23:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                                    "typeString": "enum Trade.BuyingAssetType"
                                  }
                                },
                                "src": "11433:40:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 15538,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11432:42:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11371:103:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 15540,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11370:105:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11336:139:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15557,
                  "nodeType": "IfStatement",
                  "src": "11319:327:80",
                  "trueBody": {
                    "id": 15556,
                    "nodeType": "Block",
                    "src": "11486:160:80",
                    "statements": [
                      {
                        "expression": {
                          "id": 15554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 15542,
                                "name": "tokenCreator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15478,
                                "src": "11501:12:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 15543,
                                "name": "royaltyFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15484,
                                "src": "11515:10:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 15544,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "11500:26:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                              "typeString": "tuple(address,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 15550,
                                  "name": "order",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15471,
                                  "src": "11585:5:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                    "typeString": "struct Trade.Order calldata"
                                  }
                                },
                                "id": 15551,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14859,
                                "src": "11585:13:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 15552,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15490,
                                "src": "11616:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 15546,
                                      "name": "order",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 15471,
                                      "src": "11538:5:80",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                        "typeString": "struct Trade.Order calldata"
                                      }
                                    },
                                    "id": 15547,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14844,
                                    "src": "11538:16:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 15545,
                                  "name": "IERC2981",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6726,
                                  "src": "11529:8:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC2981_$6726_$",
                                    "typeString": "type(contract IERC2981)"
                                  }
                                },
                                "id": 15548,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11529:26:80",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC2981_$6726",
                                  "typeString": "contract IERC2981"
                                }
                              },
                              "id": 15549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "royaltyInfo",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6725,
                              "src": "11529:38:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_address_$_t_uint256_$",
                                "typeString": "function (uint256,uint256) view external returns (address,uint256)"
                              }
                            },
                            "id": 15553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11529:106:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                              "typeString": "tuple(address,uint256)"
                            }
                          },
                          "src": "11500:135:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15555,
                        "nodeType": "ExpressionStatement",
                        "src": "11500:135:80"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 15564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15558,
                      "name": "assetFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15487,
                      "src": "11655:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 15563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 15559,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15490,
                          "src": "11666:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 15560,
                          "name": "royaltyFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15484,
                          "src": "11674:10:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11666:18:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 15562,
                        "name": "sellerFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15510,
                        "src": "11687:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11666:30:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11655:41:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15565,
                  "nodeType": "ExpressionStatement",
                  "src": "11655:41:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15567,
                        "name": "platformFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15481,
                        "src": "11717:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 15568,
                        "name": "assetFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15487,
                        "src": "11730:8:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 15569,
                        "name": "royaltyFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15484,
                        "src": "11740:10:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 15570,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15490,
                        "src": "11752:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 15571,
                        "name": "tokenCreator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15478,
                        "src": "11759:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15566,
                      "name": "Fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14836,
                      "src": "11713:3:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Fee_$14836_storage_ptr_$",
                        "typeString": "type(struct Trade.Fee storage pointer)"
                      }
                    },
                    "id": 15572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11713:59:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fee_$14836_memory_ptr",
                      "typeString": "struct Trade.Fee memory"
                    }
                  },
                  "functionReturnParameters": 15476,
                  "id": 15573,
                  "nodeType": "Return",
                  "src": "11706:66:80"
                }
              ]
            },
            "functionSelector": "4cf4d2b7",
            "id": 15575,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFees",
            "nameLocation": "10901:7:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15471,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "10924:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15575,
                  "src": "10909:20:80",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                    "typeString": "struct Trade.Order"
                  },
                  "typeName": {
                    "id": 15470,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15469,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14868,
                      "src": "10909:5:80"
                    },
                    "referencedDeclaration": 14868,
                    "src": "10909:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14868_storage_ptr",
                      "typeString": "struct Trade.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10908:22:80"
            },
            "returnParameters": {
              "id": 15476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15475,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15575,
                  "src": "10952:10:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Fee_$14836_memory_ptr",
                    "typeString": "struct Trade.Fee"
                  },
                  "typeName": {
                    "id": 15474,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15473,
                      "name": "Fee",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14836,
                      "src": "10952:3:80"
                    },
                    "referencedDeclaration": 14836,
                    "src": "10952:3:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fee_$14836_storage_ptr",
                      "typeString": "struct Trade.Fee"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10951:12:80"
            },
            "scope": 15895,
            "src": "10892:887:80",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15689,
              "nodeType": "Block",
              "src": "12097:1213:80",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                      "typeString": "enum Trade.BuyingAssetType"
                    },
                    "id": 15593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 15589,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15579,
                        "src": "12111:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      },
                      "id": 15590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nftType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14847,
                      "src": "12111:13:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                        "typeString": "enum Trade.BuyingAssetType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 15591,
                        "name": "BuyingAssetType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14775,
                        "src": "12128:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_BuyingAssetType_$14775_$",
                          "typeString": "type(enum Trade.BuyingAssetType)"
                        }
                      },
                      "id": 15592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC721",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14774,
                      "src": "12128:22:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                        "typeString": "enum Trade.BuyingAssetType"
                      }
                    },
                    "src": "12111:39:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15608,
                  "nodeType": "IfStatement",
                  "src": "12107:241:80",
                  "trueBody": {
                    "id": 15607,
                    "nodeType": "Block",
                    "src": "12152:196:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 15598,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15579,
                                    "src": "12228:5:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                      "typeString": "struct Trade.Order calldata"
                                    }
                                  },
                                  "id": 15599,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14844,
                                  "src": "12228:16:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 15597,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10465,
                                "src": "12220:7:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$10465_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 15600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12220:25:80",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$10465",
                                "typeString": "contract IERC721"
                              }
                            },
                            {
                              "id": 15601,
                              "name": "seller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15586,
                              "src": "12263:6:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 15602,
                              "name": "buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15584,
                              "src": "12287:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 15603,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15579,
                                "src": "12310:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14859,
                              "src": "12310:13:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC721_$10465",
                                "typeString": "contract IERC721"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 15594,
                              "name": "transferProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14821,
                              "src": "12166:13:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITransferProxy_$14765",
                                "typeString": "contract ITransferProxy"
                              }
                            },
                            "id": 15596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "erc721safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14704,
                            "src": "12166:36:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC721_$10465_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC721,address,address,uint256) external"
                            }
                          },
                          "id": 15605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12166:171:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15606,
                        "nodeType": "ExpressionStatement",
                        "src": "12166:171:80"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                      "typeString": "enum Trade.BuyingAssetType"
                    },
                    "id": 15613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 15609,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15579,
                        "src": "12361:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      },
                      "id": 15610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nftType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14847,
                      "src": "12361:13:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                        "typeString": "enum Trade.BuyingAssetType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 15611,
                        "name": "BuyingAssetType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14775,
                        "src": "12378:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_BuyingAssetType_$14775_$",
                          "typeString": "type(enum Trade.BuyingAssetType)"
                        }
                      },
                      "id": 15612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC1155",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14773,
                      "src": "12378:23:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                        "typeString": "enum Trade.BuyingAssetType"
                      }
                    },
                    "src": "12361:40:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15631,
                  "nodeType": "IfStatement",
                  "src": "12357:291:80",
                  "trueBody": {
                    "id": 15630,
                    "nodeType": "Block",
                    "src": "12403:245:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 15618,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15579,
                                    "src": "12481:5:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                      "typeString": "struct Trade.Order calldata"
                                    }
                                  },
                                  "id": 15619,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14844,
                                  "src": "12481:16:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 15617,
                                "name": "IERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8591,
                                "src": "12472:8:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$8591_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              },
                              "id": 15620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12472:26:80",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155_$8591",
                                "typeString": "contract IERC1155"
                              }
                            },
                            {
                              "id": 15621,
                              "name": "seller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15586,
                              "src": "12516:6:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 15622,
                              "name": "buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15584,
                              "src": "12540:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 15623,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15579,
                                "src": "12563:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14859,
                              "src": "12563:13:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 15625,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15579,
                                "src": "12594:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "qty",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14863,
                              "src": "12594:9:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 15627,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12621:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC1155_$8591",
                                "typeString": "contract IERC1155"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "id": 15614,
                              "name": "transferProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14821,
                              "src": "12417:13:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITransferProxy_$14765",
                                "typeString": "contract ITransferProxy"
                              }
                            },
                            "id": 15616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "erc1155safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14720,
                            "src": "12417:37:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC1155_$8591_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC1155,address,address,uint256,uint256,bytes memory) external"
                            }
                          },
                          "id": 15628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12417:220:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15629,
                        "nodeType": "ExpressionStatement",
                        "src": "12417:220:80"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 15632,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15582,
                        "src": "12662:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fee_$14836_memory_ptr",
                          "typeString": "struct Trade.Fee memory"
                        }
                      },
                      "id": 15633,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "platformFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14827,
                      "src": "12662:15:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 15634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12680:1:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12662:19:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15650,
                  "nodeType": "IfStatement",
                  "src": "12658:222:80",
                  "trueBody": {
                    "id": 15649,
                    "nodeType": "Block",
                    "src": "12683:197:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 15640,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15579,
                                    "src": "12757:5:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                      "typeString": "struct Trade.Order calldata"
                                    }
                                  },
                                  "id": 15641,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "erc20Address",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14842,
                                  "src": "12757:18:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 15639,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9397,
                                "src": "12750:6:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$9397_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 15642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12750:26:80",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$9397",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 15643,
                              "name": "buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15584,
                              "src": "12794:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 15644,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14823,
                              "src": "12817:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 15645,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15582,
                                "src": "12840:3:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Fee_$14836_memory_ptr",
                                  "typeString": "struct Trade.Fee memory"
                                }
                              },
                              "id": 15646,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "platformFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14827,
                              "src": "12840:15:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$9397",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 15636,
                              "name": "transferProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14821,
                              "src": "12697:13:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITransferProxy_$14765",
                                "typeString": "contract ITransferProxy"
                              }
                            },
                            "id": 15638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "erc20safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14764,
                            "src": "12697:35:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$9397_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,address,uint256) external"
                            }
                          },
                          "id": 15647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12697:172:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15648,
                        "nodeType": "ExpressionStatement",
                        "src": "12697:172:80"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 15659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 15654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 15651,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15582,
                          "src": "12893:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fee_$14836_memory_ptr",
                            "typeString": "struct Trade.Fee memory"
                          }
                        },
                        "id": 15652,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyFee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14831,
                        "src": "12893:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 15653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12910:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "12893:18:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "id": 15657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "12916:18:80",
                          "subExpression": {
                            "expression": {
                              "id": 15655,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15579,
                              "src": "12917:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "skipRoyalty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14853,
                            "src": "12917:17:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 15658,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "12915:20:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12893:42:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15675,
                  "nodeType": "IfStatement",
                  "src": "12889:255:80",
                  "trueBody": {
                    "id": 15674,
                    "nodeType": "Block",
                    "src": "12937:207:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 15664,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15579,
                                    "src": "13011:5:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                      "typeString": "struct Trade.Order calldata"
                                    }
                                  },
                                  "id": 15665,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "erc20Address",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14842,
                                  "src": "13011:18:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 15663,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9397,
                                "src": "13004:6:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$9397_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 15666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13004:26:80",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$9397",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 15667,
                              "name": "buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15584,
                              "src": "13048:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 15668,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15582,
                                "src": "13071:3:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Fee_$14836_memory_ptr",
                                  "typeString": "struct Trade.Fee memory"
                                }
                              },
                              "id": 15669,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenCreator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14835,
                              "src": "13071:16:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 15670,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15582,
                                "src": "13105:3:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Fee_$14836_memory_ptr",
                                  "typeString": "struct Trade.Fee memory"
                                }
                              },
                              "id": 15671,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "royaltyFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14831,
                              "src": "13105:14:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$9397",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 15660,
                              "name": "transferProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14821,
                              "src": "12951:13:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITransferProxy_$14765",
                                "typeString": "contract ITransferProxy"
                              }
                            },
                            "id": 15662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "erc20safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14764,
                            "src": "12951:35:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$9397_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,address,uint256) external"
                            }
                          },
                          "id": 15672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12951:182:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15673,
                        "nodeType": "ExpressionStatement",
                        "src": "12951:182:80"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 15680,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15579,
                              "src": "13209:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "erc20Address",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14842,
                            "src": "13209:18:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15679,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9397,
                          "src": "13202:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9397_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 15682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13202:26:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9397",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 15683,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15584,
                        "src": "13242:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15684,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15586,
                        "src": "13261:6:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 15685,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15582,
                          "src": "13281:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fee_$14836_memory_ptr",
                            "typeString": "struct Trade.Fee memory"
                          }
                        },
                        "id": 15686,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "assetFee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14829,
                        "src": "13281:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$9397",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15676,
                        "name": "transferProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14821,
                        "src": "13153:13:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITransferProxy_$14765",
                          "typeString": "contract ITransferProxy"
                        }
                      },
                      "id": 15678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc20safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14764,
                      "src": "13153:35:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$9397_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,address,uint256) external"
                      }
                    },
                    "id": 15687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13153:150:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15688,
                  "nodeType": "ExpressionStatement",
                  "src": "13153:150:80"
                }
              ]
            },
            "documentation": {
              "id": 15576,
              "nodeType": "StructuredDocumentation",
              "src": "11785:162:80",
              "text": "transfers the NFTs and tokens...\n@param order ordervalues(seller, buyer,...).\n@param fee Feevalues(platformFee, assetFee,...)."
            },
            "id": 15690,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tradeAsset",
            "nameLocation": "11962:10:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15579,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "11997:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15690,
                  "src": "11982:20:80",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                    "typeString": "struct Trade.Order"
                  },
                  "typeName": {
                    "id": 15578,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15577,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14868,
                      "src": "11982:5:80"
                    },
                    "referencedDeclaration": 14868,
                    "src": "11982:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14868_storage_ptr",
                      "typeString": "struct Trade.Order"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15582,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "12023:3:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15690,
                  "src": "12012:14:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Fee_$14836_memory_ptr",
                    "typeString": "struct Trade.Fee"
                  },
                  "typeName": {
                    "id": 15581,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15580,
                      "name": "Fee",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14836,
                      "src": "12012:3:80"
                    },
                    "referencedDeclaration": 14836,
                    "src": "12012:3:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fee_$14836_storage_ptr",
                      "typeString": "struct Trade.Fee"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15584,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "12044:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15690,
                  "src": "12036:13:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12036:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15586,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "12067:6:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15690,
                  "src": "12059:14:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12059:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11972:107:80"
            },
            "returnParameters": {
              "id": 15588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12097:0:80"
            },
            "scope": 15895,
            "src": "11953:1357:80",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15761,
              "nodeType": "Block",
              "src": "13554:679:80",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                      "typeString": "enum Trade.BuyingAssetType"
                    },
                    "id": 15705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 15701,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15694,
                        "src": "13568:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      },
                      "id": 15702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nftType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14847,
                      "src": "13568:13:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                        "typeString": "enum Trade.BuyingAssetType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 15703,
                        "name": "BuyingAssetType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14775,
                        "src": "13585:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_BuyingAssetType_$14775_$",
                          "typeString": "type(enum Trade.BuyingAssetType)"
                        }
                      },
                      "id": 15704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC721",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14774,
                      "src": "13585:22:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                        "typeString": "enum Trade.BuyingAssetType"
                      }
                    },
                    "src": "13568:39:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15722,
                  "nodeType": "IfStatement",
                  "src": "13564:253:80",
                  "trueBody": {
                    "id": 15721,
                    "nodeType": "Block",
                    "src": "13609:208:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 15710,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15694,
                                    "src": "13685:5:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                      "typeString": "struct Trade.Order calldata"
                                    }
                                  },
                                  "id": 15711,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14844,
                                  "src": "13685:16:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 15709,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10465,
                                "src": "13677:7:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$10465_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 15712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13677:25:80",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$10465",
                                "typeString": "contract IERC721"
                              }
                            },
                            {
                              "expression": {
                                "id": 15713,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15694,
                                "src": "13720:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "seller",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14838,
                              "src": "13720:12:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 15715,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15694,
                                "src": "13750:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "buyer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14840,
                              "src": "13750:11:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 15717,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15694,
                                "src": "13779:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14859,
                              "src": "13779:13:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC721_$10465",
                                "typeString": "contract IERC721"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 15706,
                              "name": "transferProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14821,
                              "src": "13623:13:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITransferProxy_$14765",
                                "typeString": "contract ITransferProxy"
                              }
                            },
                            "id": 15708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "erc721safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14704,
                            "src": "13623:36:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC721_$10465_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC721,address,address,uint256) external"
                            }
                          },
                          "id": 15719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13623:183:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15720,
                        "nodeType": "ExpressionStatement",
                        "src": "13623:183:80"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                      "typeString": "enum Trade.BuyingAssetType"
                    },
                    "id": 15727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 15723,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15694,
                        "src": "13830:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      },
                      "id": 15724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nftType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14847,
                      "src": "13830:13:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                        "typeString": "enum Trade.BuyingAssetType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 15725,
                        "name": "BuyingAssetType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14775,
                        "src": "13847:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_BuyingAssetType_$14775_$",
                          "typeString": "type(enum Trade.BuyingAssetType)"
                        }
                      },
                      "id": 15726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC1155",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14773,
                      "src": "13847:23:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                        "typeString": "enum Trade.BuyingAssetType"
                      }
                    },
                    "src": "13830:40:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15747,
                  "nodeType": "IfStatement",
                  "src": "13826:303:80",
                  "trueBody": {
                    "id": 15746,
                    "nodeType": "Block",
                    "src": "13872:257:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 15732,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15694,
                                    "src": "13950:5:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                      "typeString": "struct Trade.Order calldata"
                                    }
                                  },
                                  "id": 15733,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14844,
                                  "src": "13950:16:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 15731,
                                "name": "IERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8591,
                                "src": "13941:8:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$8591_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              },
                              "id": 15734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13941:26:80",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155_$8591",
                                "typeString": "contract IERC1155"
                              }
                            },
                            {
                              "expression": {
                                "id": 15735,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15694,
                                "src": "13985:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15736,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "seller",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14838,
                              "src": "13985:12:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 15737,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15694,
                                "src": "14015:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "buyer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14840,
                              "src": "14015:11:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 15739,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15694,
                                "src": "14044:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14859,
                              "src": "14044:13:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 15741,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15694,
                                "src": "14075:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "qty",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14863,
                              "src": "14075:9:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 15743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14102:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC1155_$8591",
                                "typeString": "contract IERC1155"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "id": 15728,
                              "name": "transferProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14821,
                              "src": "13886:13:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITransferProxy_$14765",
                                "typeString": "contract ITransferProxy"
                              }
                            },
                            "id": 15730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "erc1155safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14720,
                            "src": "13886:37:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC1155_$8591_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC1155,address,address,uint256,uint256,bytes memory) external"
                            }
                          },
                          "id": 15744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13886:232:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15745,
                        "nodeType": "ExpressionStatement",
                        "src": "13886:232:80"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 15749,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15694,
                          "src": "14153:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                            "typeString": "struct Trade.Order calldata"
                          }
                        },
                        "id": 15750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14838,
                        "src": "14153:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 15751,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15694,
                          "src": "14167:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                            "typeString": "struct Trade.Order calldata"
                          }
                        },
                        "id": 15752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14859,
                        "src": "14167:13:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 15753,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15694,
                          "src": "14182:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                            "typeString": "struct Trade.Order calldata"
                          }
                        },
                        "id": 15754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "qty",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14863,
                        "src": "14182:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 15755,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15694,
                          "src": "14193:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                            "typeString": "struct Trade.Order calldata"
                          }
                        },
                        "id": 15756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14840,
                        "src": "14193:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15748,
                      "name": "BuyAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14804,
                      "src": "14144:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,uint256,address)"
                      }
                    },
                    "id": 15757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14144:61:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15758,
                  "nodeType": "EmitStatement",
                  "src": "14139:66:80"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 15759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14222:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 15700,
                  "id": 15760,
                  "nodeType": "Return",
                  "src": "14215:11:80"
                }
              ]
            },
            "documentation": {
              "id": 15691,
              "nodeType": "StructuredDocumentation",
              "src": "13331:111:80",
              "text": "transfers the NFTs by external wallets\n@param order ordervalues(seller, buyer,...)."
            },
            "functionSelector": "f5c7c83d",
            "id": 15762,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 15697,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15696,
                  "name": "OnlySigner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14931,
                  "src": "13514:10:80"
                },
                "nodeType": "ModifierInvocation",
                "src": "13514:12:80"
              }
            ],
            "name": "deliverNFT",
            "nameLocation": "13456:10:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15694,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "13482:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15762,
                  "src": "13467:20:80",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                    "typeString": "struct Trade.Order"
                  },
                  "typeName": {
                    "id": 15693,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15692,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14868,
                      "src": "13467:5:80"
                    },
                    "referencedDeclaration": 14868,
                    "src": "13467:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14868_storage_ptr",
                      "typeString": "struct Trade.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13466:22:80"
            },
            "returnParameters": {
              "id": 15700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15699,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15762,
                  "src": "13544:4:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15698,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13544:4:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13543:6:80"
            },
            "scope": 15895,
            "src": "13447:786:80",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15797,
              "nodeType": "Block",
              "src": "14484:485:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 15774,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15766,
                              "src": "14578:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14838,
                            "src": "14578:12:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 15776,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15766,
                              "src": "14612:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "erc20Address",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14842,
                            "src": "14612:18:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 15778,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15766,
                              "src": "14652:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14844,
                            "src": "14652:16:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 15780,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15766,
                              "src": "14690:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14847,
                            "src": "14690:13:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                              "typeString": "enum Trade.BuyingAssetType"
                            }
                          },
                          {
                            "expression": {
                              "id": 15782,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15766,
                              "src": "14725:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "unitPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14849,
                            "src": "14725:15:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 15784,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15766,
                              "src": "14762:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftOrderQuantity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14851,
                            "src": "14762:22:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 15786,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15766,
                              "src": "14806:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "skipRoyalty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14853,
                            "src": "14806:17:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "expression": {
                              "id": 15788,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15766,
                              "src": "14845:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "startDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14855,
                            "src": "14845:15:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 15790,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15766,
                              "src": "14882:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "endDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14857,
                            "src": "14882:13:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 15792,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15766,
                              "src": "14917:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14859,
                            "src": "14917:13:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                              "typeString": "enum Trade.BuyingAssetType"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 15772,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "14540:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 15773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "14540:16:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 15794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14540:408:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 15771,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "14513:9:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 15795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14513:449:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 15770,
                  "id": 15796,
                  "nodeType": "Return",
                  "src": "14494:468:80"
                }
              ]
            },
            "documentation": {
              "id": 15763,
              "nodeType": "StructuredDocumentation",
              "src": "14273:98:80",
              "text": "get Order Hash for seller.\n@param order ordervalues(seller, buyer,...)."
            },
            "functionSelector": "03365857",
            "id": 15798,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderSellerHash",
            "nameLocation": "14385:18:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15766,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "14419:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15798,
                  "src": "14404:20:80",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                    "typeString": "struct Trade.Order"
                  },
                  "typeName": {
                    "id": 15765,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15764,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14868,
                      "src": "14404:5:80"
                    },
                    "referencedDeclaration": 14868,
                    "src": "14404:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14868_storage_ptr",
                      "typeString": "struct Trade.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14403:22:80"
            },
            "returnParameters": {
              "id": 15770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15769,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15798,
                  "src": "14471:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15768,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14471:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14470:9:80"
            },
            "scope": 15895,
            "src": "14376:593:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15829,
              "nodeType": "Block",
              "src": "15184:394:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 15810,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15802,
                              "src": "15278:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14840,
                            "src": "15278:11:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 15812,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15802,
                              "src": "15311:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "erc20Address",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14842,
                            "src": "15311:18:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 15814,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15802,
                              "src": "15351:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14844,
                            "src": "15351:16:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 15816,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15802,
                              "src": "15389:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14847,
                            "src": "15389:13:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                              "typeString": "enum Trade.BuyingAssetType"
                            }
                          },
                          {
                            "expression": {
                              "id": 15818,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15802,
                              "src": "15424:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "unitPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14849,
                            "src": "15424:15:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 15820,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15802,
                              "src": "15461:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14859,
                            "src": "15461:13:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 15822,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15802,
                              "src": "15496:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14861,
                            "src": "15496:12:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 15824,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15802,
                              "src": "15530:5:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "qty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14863,
                            "src": "15530:9:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_enum$_BuyingAssetType_$14775",
                              "typeString": "enum Trade.BuyingAssetType"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 15808,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "15240:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 15809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "15240:16:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 15826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15240:317:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 15807,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "15213:9:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 15827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15213:358:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 15806,
                  "id": 15828,
                  "nodeType": "Return",
                  "src": "15194:377:80"
                }
              ]
            },
            "documentation": {
              "id": 15799,
              "nodeType": "StructuredDocumentation",
              "src": "14975:97:80",
              "text": "get Order Hash for buyer.\n@param order ordervalues(seller, buyer,...)."
            },
            "functionSelector": "77c1b664",
            "id": 15830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderBuyerHash",
            "nameLocation": "15086:17:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15802,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "15119:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15830,
                  "src": "15104:20:80",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$14868_calldata_ptr",
                    "typeString": "struct Trade.Order"
                  },
                  "typeName": {
                    "id": 15801,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15800,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14868,
                      "src": "15104:5:80"
                    },
                    "referencedDeclaration": 14868,
                    "src": "15104:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14868_storage_ptr",
                      "typeString": "struct Trade.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15103:22:80"
            },
            "returnParameters": {
              "id": 15806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15805,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15830,
                  "src": "15171:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15804,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15171:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15170:9:80"
            },
            "scope": 15895,
            "src": "15077:501:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15845,
              "nodeType": "Block",
              "src": "15656:201:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                            "id": 15840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15750:34:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                            },
                            "value": "\u0019Ethereum Signed Message:\n32"
                          },
                          {
                            "id": 15841,
                            "name": "_messageHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15832,
                            "src": "15806:12:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 15838,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "15712:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 15839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "15712:16:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 15842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15712:124:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 15837,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "15685:9:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 15843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15685:165:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 15836,
                  "id": 15844,
                  "nodeType": "Return",
                  "src": "15666:184:80"
                }
              ]
            },
            "id": 15846,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prefixed",
            "nameLocation": "15593:8:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15832,
                  "mutability": "mutable",
                  "name": "_messageHash",
                  "nameLocation": "15610:12:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15846,
                  "src": "15602:20:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15831,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15602:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15601:22:80"
            },
            "returnParameters": {
              "id": 15836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15835,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15846,
                  "src": "15647:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15834,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15647:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15646:9:80"
            },
            "scope": 15895,
            "src": "15584:273:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15872,
              "nodeType": "Block",
              "src": "15999:133:80",
              "statements": [
                {
                  "assignments": [
                    15856,
                    15858,
                    15860
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15856,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "16018:1:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 15872,
                      "src": "16010:9:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 15855,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "16010:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 15858,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "16029:1:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 15872,
                      "src": "16021:9:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 15857,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "16021:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 15860,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "16038:1:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 15872,
                      "src": "16032:7:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 15859,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "16032:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15864,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 15862,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15850,
                        "src": "16058:10:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 15861,
                      "name": "splitSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15894,
                      "src": "16043:14:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$_t_bytes32_$_t_uint8_$",
                        "typeString": "function (bytes memory) pure returns (bytes32,bytes32,uint8)"
                      }
                    },
                    "id": 15863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16043:26:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint8_$",
                      "typeString": "tuple(bytes32,bytes32,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16009:60:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15866,
                        "name": "_signedMessageHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15848,
                        "src": "16097:18:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 15867,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15860,
                        "src": "16117:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 15868,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15856,
                        "src": "16120:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 15869,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15858,
                        "src": "16123:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 15865,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967290,
                      "src": "16087:9:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 15870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16087:38:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 15854,
                  "id": 15871,
                  "nodeType": "Return",
                  "src": "16080:45:80"
                }
              ]
            },
            "id": 15873,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recoverSigner",
            "nameLocation": "15872:13:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15848,
                  "mutability": "mutable",
                  "name": "_signedMessageHash",
                  "nameLocation": "15894:18:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15873,
                  "src": "15886:26:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15847,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15886:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15850,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "15927:10:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15873,
                  "src": "15914:23:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15849,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15914:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15885:53:80"
            },
            "returnParameters": {
              "id": 15854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15853,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15873,
                  "src": "15986:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15986:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15985:9:80"
            },
            "scope": 15895,
            "src": "15863:269:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15893,
              "nodeType": "Block",
              "src": "16308:693:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 15885,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15875,
                            "src": "16326:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 15886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "16326:10:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 15887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16340:2:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "16326:16:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964207369676e6174757265206c656e677468",
                        "id": 15889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16344:26:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
                          "typeString": "literal_string \"invalid signature length\""
                        },
                        "value": "invalid signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
                          "typeString": "literal_string \"invalid signature length\""
                        }
                      ],
                      "id": 15884,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "16318:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16318:53:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15891,
                  "nodeType": "ExpressionStatement",
                  "src": "16318:53:80"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "16391:564:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "16747:24:80",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "sig",
                                  "nodeType": "YulIdentifier",
                                  "src": "16762:3:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "16767:2:80",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "16758:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16758:12:80"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "16752:5:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16752:19:80"
                        },
                        "variableNames": [
                          {
                            "name": "r",
                            "nodeType": "YulIdentifier",
                            "src": "16747:1:80"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "16815:24:80",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "sig",
                                  "nodeType": "YulIdentifier",
                                  "src": "16830:3:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "16835:2:80",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "16826:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16826:12:80"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "16820:5:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16820:19:80"
                        },
                        "variableNames": [
                          {
                            "name": "s",
                            "nodeType": "YulIdentifier",
                            "src": "16815:1:80"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "16912:33:80",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16922:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "sig",
                                      "nodeType": "YulIdentifier",
                                      "src": "16935:3:80"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "16940:2:80",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "16931:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "16931:12:80"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "16925:5:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16925:19:80"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "16917:4:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16917:28:80"
                        },
                        "variableNames": [
                          {
                            "name": "v",
                            "nodeType": "YulIdentifier",
                            "src": "16912:1:80"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 15878,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "16747:1:80",
                      "valueSize": 1
                    },
                    {
                      "declaration": 15880,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "16815:1:80",
                      "valueSize": 1
                    },
                    {
                      "declaration": 15875,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "16762:3:80",
                      "valueSize": 1
                    },
                    {
                      "declaration": 15875,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "16830:3:80",
                      "valueSize": 1
                    },
                    {
                      "declaration": 15875,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "16935:3:80",
                      "valueSize": 1
                    },
                    {
                      "declaration": 15882,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "16912:1:80",
                      "valueSize": 1
                    }
                  ],
                  "id": 15892,
                  "nodeType": "InlineAssembly",
                  "src": "16382:573:80"
                }
              ]
            },
            "id": 15894,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "splitSignature",
            "nameLocation": "16147:14:80",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15875,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "16175:3:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15894,
                  "src": "16162:16:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15874,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16162:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16161:18:80"
            },
            "returnParameters": {
              "id": 15883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15878,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "16248:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15894,
                  "src": "16240:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15877,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16240:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15880,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "16271:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15894,
                  "src": "16263:9:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15879,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16263:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15882,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "16292:1:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 15894,
                  "src": "16286:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 15881,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "16286:5:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16226:77:80"
            },
            "scope": 15895,
            "src": "16138:863:80",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 15896,
        "src": "223:16780:80",
        "usedErrors": []
      }
    ],
    "src": "39:16965:80"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {
    "31337": {
      "events": {},
      "links": {},
      "address": "0x9E545E3C0baAB3E08CdfD552C960A1050f373042",
      "transactionHash": "0x9f6f91df4c058012d016960faf506de83a4636f947e5ef1357b941cd4933acff"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-03-26T10:27:43.295Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "buyAsset((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "params": {
          "order": "ordervalues(seller, buyer,...)."
        }
      },
      "cancelOrder((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "params": {
          "order": "ordervalues(seller, buyer,...). this will cancel the invalid use of sign order data"
        }
      },
      "deliverNFT((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "params": {
          "order": "ordervalues(seller, buyer,...)."
        }
      },
      "getOrderBuyerHash((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "params": {
          "order": "ordervalues(seller, buyer,...)."
        }
      },
      "getOrderSellerHash((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "params": {
          "order": "ordervalues(seller, buyer,...)."
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "buyAsset((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "notice": "excuting the NFT order."
      },
      "buyerServiceFee()": {
        "notice": "returns the buyerservice Fee in multiply of 1000."
      },
      "cancelOrder((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "notice": "cancel Order."
      },
      "deliverNFT((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "notice": "transfers the NFTs by external wallets"
      },
      "getOrderBuyerHash((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "notice": "get Order Hash for buyer."
      },
      "getOrderSellerHash((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "notice": "get Order Hash for seller."
      },
      "isOrderClosed(bytes32)": {
        "notice": "returns the whether the order is already exists or not."
      },
      "sellerServiceFee()": {
        "notice": "returns the sellerservice Fee in multiply of 1000."
      },
      "setBuyerServiceFee(uint8)": {
        "notice": "returns the buyerservice Fee in multiply of 1000."
      },
      "setSellerServiceFee(uint8)": {
        "notice": "returns the sellerservice Fee in multiply of 1000."
      },
      "setSigner(address)": {
        "notice": "set the signer in address."
      }
    },
    "version": 1
  }
}