{
  "contractName": "Trade",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_buyerFee",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_sellerFee",
          "type": "uint8"
        },
        {
          "internalType": "contract ITransferProxy",
          "name": "_transferProxy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "assetOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "BuyAsset",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "buyerFee",
          "type": "uint8"
        }
      ],
      "name": "BuyerFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "assetOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "ExecuteBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "sellerFee",
          "type": "uint8"
        }
      ],
      "name": "SellerFee",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "signer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferProxy",
      "outputs": [
        {
          "internalType": "contract ITransferProxy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyerServiceFee",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sellerServiceFee",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_buyerFeePermille",
          "type": "uint8"
        }
      ],
      "name": "setBuyerServiceFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_sellerFeePermille",
          "type": "uint8"
        }
      ],
      "name": "setSellerServiceFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        }
      ],
      "name": "setSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "isOrderClosed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "erc20Address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            },
            {
              "internalType": "enum Trade.BuyingAssetType",
              "name": "nftType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "unitPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nftOrderQuantity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "skipRoyalty",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "qty",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "sellerOrdersignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "buyerOrdersignature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Trade.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "cancelOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "erc20Address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            },
            {
              "internalType": "enum Trade.BuyingAssetType",
              "name": "nftType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "unitPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nftOrderQuantity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "skipRoyalty",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "qty",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "sellerOrdersignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "buyerOrdersignature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Trade.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "buyAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "erc20Address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            },
            {
              "internalType": "enum Trade.BuyingAssetType",
              "name": "nftType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "unitPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nftOrderQuantity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "skipRoyalty",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "qty",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "sellerOrdersignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "buyerOrdersignature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Trade.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "executeBid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "erc20Address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            },
            {
              "internalType": "enum Trade.BuyingAssetType",
              "name": "nftType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "unitPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nftOrderQuantity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "skipRoyalty",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "qty",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "sellerOrdersignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "buyerOrdersignature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Trade.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getFees",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "platformFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assetFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "royaltyFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenCreator",
              "type": "address"
            }
          ],
          "internalType": "struct Trade.Fee",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "erc20Address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            },
            {
              "internalType": "enum Trade.BuyingAssetType",
              "name": "nftType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "unitPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nftOrderQuantity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "skipRoyalty",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "qty",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "sellerOrdersignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "buyerOrdersignature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Trade.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "deliverNFT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "erc20Address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            },
            {
              "internalType": "enum Trade.BuyingAssetType",
              "name": "nftType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "unitPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nftOrderQuantity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "skipRoyalty",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "qty",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "sellerOrdersignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "buyerOrdersignature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Trade.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getOrderSellerHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "erc20Address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            },
            {
              "internalType": "enum Trade.BuyingAssetType",
              "name": "nftType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "unitPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nftOrderQuantity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "skipRoyalty",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "qty",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "sellerOrdersignature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "buyerOrdersignature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Trade.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getOrderBuyerHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_buyerFee\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_sellerFee\",\"type\":\"uint8\"},{\"internalType\":\"contract ITransferProxy\",\"name\":\"_transferProxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assetOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"BuyAsset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"buyerFee\",\"type\":\"uint8\"}],\"name\":\"BuyerFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assetOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"ExecuteBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"sellerFee\",\"type\":\"uint8\"}],\"name\":\"SellerFee\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"enum Trade.BuyingAssetType\",\"name\":\"nftType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"unitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftOrderQuantity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"skipRoyalty\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sellerOrdersignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"buyerOrdersignature\",\"type\":\"bytes\"}],\"internalType\":\"struct Trade.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"buyAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyerServiceFee\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"enum Trade.BuyingAssetType\",\"name\":\"nftType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"unitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftOrderQuantity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"skipRoyalty\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sellerOrdersignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"buyerOrdersignature\",\"type\":\"bytes\"}],\"internalType\":\"struct Trade.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"cancelOrder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"enum Trade.BuyingAssetType\",\"name\":\"nftType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"unitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftOrderQuantity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"skipRoyalty\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sellerOrdersignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"buyerOrdersignature\",\"type\":\"bytes\"}],\"internalType\":\"struct Trade.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"deliverNFT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"enum Trade.BuyingAssetType\",\"name\":\"nftType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"unitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftOrderQuantity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"skipRoyalty\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sellerOrdersignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"buyerOrdersignature\",\"type\":\"bytes\"}],\"internalType\":\"struct Trade.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"executeBid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"enum Trade.BuyingAssetType\",\"name\":\"nftType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"unitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftOrderQuantity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"skipRoyalty\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sellerOrdersignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"buyerOrdersignature\",\"type\":\"bytes\"}],\"internalType\":\"struct Trade.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"getFees\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"platformFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"royaltyFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenCreator\",\"type\":\"address\"}],\"internalType\":\"struct Trade.Fee\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"enum Trade.BuyingAssetType\",\"name\":\"nftType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"unitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftOrderQuantity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"skipRoyalty\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sellerOrdersignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"buyerOrdersignature\",\"type\":\"bytes\"}],\"internalType\":\"struct Trade.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"getOrderBuyerHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"enum Trade.BuyingAssetType\",\"name\":\"nftType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"unitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftOrderQuantity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"skipRoyalty\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sellerOrdersignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"buyerOrdersignature\",\"type\":\"bytes\"}],\"internalType\":\"struct Trade.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"getOrderSellerHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"isOrderClosed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellerServiceFee\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_buyerFeePermille\",\"type\":\"uint8\"}],\"name\":\"setBuyerServiceFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_sellerFeePermille\",\"type\":\"uint8\"}],\"name\":\"setSellerServiceFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"setSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferProxy\",\"outputs\":[{\"internalType\":\"contract ITransferProxy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buyAsset((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"order\":\"ordervalues(seller, buyer,...).\"}},\"cancelOrder((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"order\":\"ordervalues(seller, buyer,...). this will cancel the invalid use of sign order data\"}},\"deliverNFT((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"order\":\"ordervalues(seller, buyer,...).\"}},\"getOrderBuyerHash((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"order\":\"ordervalues(seller, buyer,...).\"}},\"getOrderSellerHash((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"order\":\"ordervalues(seller, buyer,...).\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyAsset((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"excuting the NFT order.\"},\"buyerServiceFee()\":{\"notice\":\"returns the buyerservice Fee in multiply of 1000.\"},\"cancelOrder((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"cancel Order.\"},\"deliverNFT((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"transfers the NFTs by external wallets\"},\"getOrderBuyerHash((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"get Order Hash for buyer.\"},\"getOrderSellerHash((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"get Order Hash for seller.\"},\"isOrderClosed(bytes32)\":{\"notice\":\"returns the whether the order is already exists or not.\"},\"sellerServiceFee()\":{\"notice\":\"returns the sellerservice Fee in multiply of 1000.\"},\"setBuyerServiceFee(uint8)\":{\"notice\":\"returns the buyerservice Fee in multiply of 1000.\"},\"setSellerServiceFee(uint8)\":{\"notice\":\"returns the sellerservice Fee in multiply of 1000.\"},\"setSigner(address)\":{\"notice\":\"set the signer in address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/trade.sol\":\"Trade\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x10a6688bc4154b1b76268dbaf497bd8b24f77525ecb9cf829bd3cccec98eefc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68663f939b79e88a5bb677cf6c549e88eb4f587379c09f80d19cde14b0eb984b\",\"dweb:/ipfs/QmVfeL1uxQ5161d25DsNqptjaur7VQugjCSGitrRscTdmV\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xa812eed728198acd2c30d06950a5bea8d68436e4f694dd892273266ec2f79f5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5522afc5c222c810d9ad67c45f37cb7169452fcf76692cad10ac8153c068daa\",\"dweb:/ipfs/QmX4XgnDp7pyvojQ6g5tacrUMCf7TED2qC2vERH9Xh9feZ\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"project:/src/contracts/interface/ILazyMint.sol\":{\"keccak256\":\"0x337c4f71d541bf515904075e2f1a856e5f4a95fecb20b6e0e9dfc82750254681\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://53ace57c0b85c6b69178d92e5b426fb11376ac8439469e79533330e730342d74\",\"dweb:/ipfs/QmVFWxEzacgJYisP5hdhb48bDvRRzjgm6VSvBCV8Tnwezm\"]},\"project:/src/contracts/interface/ITransferProxy.sol\":{\"keccak256\":\"0x1cd14257e3e173c4924616d0f274f2fdeb2273f7149ebb627613cd727deb993e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://da72875160b0d8fbfa95c153bd6e03c32eac5d53610d8996ba3ca9abcdd461b8\",\"dweb:/ipfs/Qmco8YgzGm5ghvezVvmcaPae6QwAdoetwreh37pU7BETAT\"]},\"project:/src/contracts/trade.sol\":{\"keccak256\":\"0xc957926d43ea3f42549039c4a6e1efa716db512b88cd53f15e718c874c952911\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://df7474056cf38954c8eea9e2c6caca35da5a573b4cab496641073d5dafcd6711\",\"dweb:/ipfs/QmS6eKzJUjYUc34iPc6XxTo2xeShnmTMpczmBNxYezUdd1\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002783380380620027838339810160408190526200003491620000a5565b600180546001600160a01b03909216620100000262010000600160b01b031960ff9485166101000261ffff1990941694909516939093179190911792909216179055600280546001600160a01b03191633179055620000ff565b805160ff81168114620000a057600080fd5b919050565b600080600060608486031215620000bb57600080fd5b620000c6846200008e565b9250620000d6602085016200008e565b60408501519092506001600160a01b0381168114620000f457600080fd5b809150509250925092565b612674806200010f6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80638162b6bd116100c3578063a217fddf1161007c578063a217fddf14610331578063a3667c7b14610339578063a96b446d1461034c578063d547741f1461035f578063dab56b4814610372578063f5c7c83d1461038557600080fd5b80638162b6bd146102c75780638da5cb5b146102da5780638e1615ac146102ed57806391d148541461030057806396c94acf146103135780639c66809d1461032657600080fd5b806336568abe1161011557806336568abe146101fe5780634cf4d2b71461021157806360085da61461026a5780636c19e783146102885780636e667db31461029b57806377c1b664146102b457600080fd5b806301ffc9a714610152578063033658571461017a578063238ac9331461019b578063248a9ca3146101c65780632f2ff15d146101e9575b600080fd5b610165610160366004612103565b610398565b60405190151581526020015b60405180910390f35b61018d61018836600461212d565b6103cf565b604051908152602001610171565b6003546101ae906001600160a01b031681565b6040516001600160a01b039091168152602001610171565b61018d6101d4366004612169565b60009081526020819052604090206001015490565b6101fc6101f7366004612197565b610471565b005b6101fc61020c366004612197565b61049b565b61022461021f36600461212d565b61051e565b6040516101719190815181526020808301519082015260408083015190820152606080830151908201526080918201516001600160a01b03169181019190915260a00190565b600154610100900460ff165b60405160ff9091168152602001610171565b6101fc6102963660046121c7565b610725565b6001546101ae906201000090046001600160a01b031681565b61018d6102c236600461212d565b6107c5565b6101656102d536600461212d565b610835565b6002546101ae906001600160a01b031681565b6101656102fb366004612169565b610cd8565b61016561030e366004612197565b610d38565b61016561032136600461212d565b610d61565b60015460ff16610276565b61018d600081565b6101fc6103473660046121e4565b610f0e565b6101fc61035a3660046121e4565b610fb0565b6101fc61036d366004612197565b611047565b61016561038036600461212d565b61106c565b61016561039336600461212d565b611527565b60006001600160e01b03198216637965db0b60e01b14806103c957506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006103de60208301836121c7565b6103ee60608401604085016121c7565b6103fe60808501606086016121c7565b61040e60a0860160808701612207565b60a086013560c0870135610429610100890160e08a01612228565b8861010001358961012001358a61014001356040516020016104549a99989796959493929190612285565b604051602081830303815290604052805190602001209050919050565b60008281526020819052604090206001015461048c81611798565b61049683836117a5565b505050565b6001600160a01b03811633146105105760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61051a8282611829565b5050565b6105596040518060a001604052806000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b60015460009081908190819081906105769060ff166103e861230d565b61ffff1661058b6101608901356103e8612333565b6105959190612352565b905060006105a8826101608a0135612374565b6001549091506000906103e8906105c790610100900460ff1685612333565b6105d19190612352565b90506105dd818361238b565b95506105f06101008a0160e08b01612228565b1580156106475750600161060a60a08b0160808c01612207565b600181111561061b5761061b61224a565b14806106475750600061063460a08b0160808c01612207565b60018111156106455761064561224a565b145b156106d75761065c60808a0160608b016121c7565b60405163152a902d60e11b81526101408b01356004820152602481018590526001600160a01b039190911690632a55205a906044016040805180830381865afa1580156106ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d191906123a3565b90975094505b806106e28685612374565b6106ec9190612374565b6040805160a081018252978852602088019190915286019490945250606084015250506001600160a01b03909116608082015292915050565b6002546001600160a01b0316331461074f5760405162461bcd60e51b8152600401610507906123d1565b6003546001600160a01b038083169116036107a35760405162461bcd60e51b81526020600482015260146024820152735369676e65722076616c75652069732073616d6560601b6044820152606401610507565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60006107d760408301602084016121c7565b6107e760608401604085016121c7565b6107f760808501606086016121c7565b61080760a0860160808701612207565b8560a00135866101400135876101600135886101800135604051602001610454989796959493929190612406565b6000818161084660208301836121c7565b6001600160a01b0316036108955760405162461bcd60e51b815260206004820152601660248201527553656c6c65722063616e6e6f7420626520656d70747960501b6044820152606401610507565b60006108a760408301602084016121c7565b6001600160a01b0316036108f55760405162461bcd60e51b815260206004820152601560248201527442757965722063616e6e6f7420626520656d70747960581b6044820152606401610507565b600061090760808301606084016121c7565b6001600160a01b03160361095d5760405162461bcd60e51b815260206004820152601b60248201527f4e465420416464726573732063616e6e6f7420626520656d70747900000000006044820152606401610507565b4281610100013511156109b25760405162461bcd60e51b815260206004820152601a60248201527f41756374696f6e206973206e6f742073746172746564207965740000000000006044820152606401610507565b80610120013542106109f95760405162461bcd60e51b815260206004820152601060248201526f105d58dd1a5bdb881a5cc8195b99195960821b6044820152606401610507565b60008160a0013511610a495760405162461bcd60e51b8152602060048201526019602482015278556e69742070726963652063616e6e6f74206265207a65726f60381b6044820152606401610507565b600081610140013511610a975760405162461bcd60e51b8152602060048201526016602482015275546f6b656e49642063616e6e6f74206265207a65726f60501b6044820152606401610507565b600081610160013511610ae45760405162461bcd60e51b8152602060048201526015602482015274416d6f756e742063616e6e6f74206265207a65726f60581b6044820152606401610507565b600081610180013511610b335760405162461bcd60e51b81526020600482015260176024820152765175616e746974792063616e6e6f74206265207a65726f60481b6044820152606401610507565b610b4360408401602085016121c7565b6001600160a01b0316336001600160a01b031614610bb15760405162461bcd60e51b815260206004820152602560248201527f4f6e6c79206f726465722062757965722063616e2063616c6c2074686973206d604482015264195d1a1bd960da1b6064820152608401610507565b6000610bbc8461051e565b9050610bd161018085013560a0860135612333565b81606001511115610c1a5760405162461bcd60e51b815260206004820152601360248201527214185a59081a5b9d985b1a5908185b5bdd5b9d606a1b6044820152606401610507565b610c238461188e565b15610ccc57610c4f8482610c3d60408301602084016121c7565b610c4a60208901896121c7565b611aa9565b610c5f60408501602086016121c7565b6001600160a01b0316610140850135610c7b60208701876121c7565b6001600160a01b03167fb10197cef009fd301a90b892d25451c22c3701eb18ee2df1250d31e514fff394876101800135604051610cba91815260200190565b60405180910390a46001925050610cd2565b60009250505b50919050565b6000600260008381526004602052604090206001015460ff166003811115610d0257610d0261224a565b14806103c95750600360008381526004602052604090206001015460ff166003811115610d3157610d3161224a565b1492915050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600080610d6d836103cf565b90506000610d7a82611dc7565b905033610d8a60208601866121c7565b6001600160a01b031614610de05760405162461bcd60e51b815260206004820152601a60248201527f43616c6c6572206973206e6f74206f726465722073656c6c65720000000000006044820152606401610507565b610e2c81610df26101a0870187612468565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611e0292505050565b6001600160a01b0316610e4260208601866121c7565b6001600160a01b031614610e905760405162461bcd60e51b8152602060048201526015602482015274496e76616c6964206f726465722064657461696c7360581b6044820152606401610507565b610e9981610cd8565b15610ee65760405162461bcd60e51b815260206004820181905260248201527f4f7264657220616c726561647920636f6d706c746564206f722063616e63656c6044820152606401610507565b60009081526004602052604081209081556001908101805460ff191660031790559392505050565b6002546001600160a01b03163314610f385760405162461bcd60e51b8152600401610507906123d1565b60015460ff8083166101009092041603610f945760405162461bcd60e51b815260206004820152601f60248201527f53656c6c65724665655065726d696c6c652076616c75652069732073616d65006044820152606401610507565b6001805460ff9092166101000261ff0019909216919091179055565b6002546001600160a01b03163314610fda5760405162461bcd60e51b8152600401610507906123d1565b60015460ff8083169116036110315760405162461bcd60e51b815260206004820152601e60248201527f42757965724665655065726d696c6c652076616c75652069732073616d6500006044820152606401610507565b6001805460ff191660ff92909216919091179055565b60008281526020819052604090206001015461106281611798565b6104968383611829565b6000818161107d60208301836121c7565b6001600160a01b0316036110cc5760405162461bcd60e51b815260206004820152601660248201527553656c6c65722063616e6e6f7420626520656d70747960501b6044820152606401610507565b60006110de60408301602084016121c7565b6001600160a01b03160361112c5760405162461bcd60e51b815260206004820152601560248201527442757965722063616e6e6f7420626520656d70747960581b6044820152606401610507565b600061113e60808301606084016121c7565b6001600160a01b0316036111945760405162461bcd60e51b815260206004820152601b60248201527f4e465420416464726573732063616e6e6f7420626520656d70747900000000006044820152606401610507565b4281610100013511156111e95760405162461bcd60e51b815260206004820152601a60248201527f41756374696f6e206973206e6f742073746172746564207965740000000000006044820152606401610507565b80610120013542106112305760405162461bcd60e51b815260206004820152601060248201526f105d58dd1a5bdb881a5cc8195b99195960821b6044820152606401610507565b60008160a00135116112805760405162461bcd60e51b8152602060048201526019602482015278556e69742070726963652063616e6e6f74206265207a65726f60381b6044820152606401610507565b6000816101400135116112ce5760405162461bcd60e51b8152602060048201526016602482015275546f6b656e49642063616e6e6f74206265207a65726f60501b6044820152606401610507565b60008161016001351161131b5760405162461bcd60e51b8152602060048201526015602482015274416d6f756e742063616e6e6f74206265207a65726f60581b6044820152606401610507565b60008161018001351161136a5760405162461bcd60e51b81526020600482015260176024820152765175616e746974792063616e6e6f74206265207a65726f60481b6044820152606401610507565b826000611376826107c5565b9050600061138382611dc7565b905061139781610df26101c0860186612468565b6001600160a01b03166113b060408501602086016121c7565b6001600160a01b0316146113fc5760405162461bcd60e51b8152602060048201526013602482015272496e76616c6964206269642064657461696c7360681b6044820152606401610507565b61140960208701876121c7565b6001600160a01b0316336001600160a01b0316146114785760405162461bcd60e51b815260206004820152602660248201527f4f6e6c79206f726465722073656c6c65722063616e2063616c6c2074686973206044820152651b595d1a1bd960d21b6064820152608401610507565b60006114838761051e565b90506114a7878261149a60408301602084016121c7565b610c4a60208c018c6121c7565b6114b760408801602089016121c7565b6001600160a01b03166101408801356114d360208a018a6121c7565b6001600160a01b03167fec34853c156da04e4792f1c735112ae54e5ed52bac58db5014b26746f306a3628a610180013560405161151291815260200190565b60405180910390a45060019695505050505050565b6003546000906001600160a01b0316331461158e5760405162461bcd60e51b815260206004820152602160248201527f4f6e6c79207369676e65722063616e20616c6c20746869732066756e6374696f6044820152603760f91b6064820152608401610507565b60016115a060a0840160808501612207565b60018111156115b1576115b161224a565b03611652576001546201000090046001600160a01b031663f709b9066115dd60808501606086016121c7565b6115ea60208601866121c7565b6115fa60408701602088016121c7565b8661014001356040518563ffffffff1660e01b815260040161161f94939291906124b6565b600060405180830381600087803b15801561163957600080fd5b505af115801561164d573d6000803e3d6000fd5b505050505b600061166460a0840160808501612207565b60018111156116755761167561224a565b0361171d576001546201000090046001600160a01b0316639c1c2ee96116a160808501606086016121c7565b6116ae60208601866121c7565b6116be60408701602088016121c7565b8661014001358761018001356040518663ffffffff1660e01b81526004016116ea9594939291906124e0565b600060405180830381600087803b15801561170457600080fd5b505af1158015611718573d6000803e3d6000fd5b505050505b61172d60408301602084016121c7565b6001600160a01b031661014083013561174960208501856121c7565b6001600160a01b03167fb10197cef009fd301a90b892d25451c22c3701eb18ee2df1250d31e514fff39485610180013560405161178891815260200190565b60405180910390a4506001919050565b6117a28133611e81565b50565b6117af8282610d38565b61051a576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556117e53390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6118338282610d38565b1561051a576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008061189a836103cf565b905060006118a782611dc7565b90506118bb81610df26101a0870187612468565b6001600160a01b03166118d160208601866121c7565b6001600160a01b03161461191f5760405162461bcd60e51b8152602060048201526015602482015274496e76616c6964206f726465722064657461696c7360581b6044820152606401610507565b61192881610cd8565b156119645760405162461bcd60e51b815260206004820152600c60248201526b13dc99195c8818db1bdcd95960a21b6044820152606401610507565b60008181526004602052604081206001015460ff16600381111561198a5761198a61224a565b036119b957600081815260046020526040902060c085013581556001908101805460ff19169091179055611a9f565b600160008281526004602052604090206001015460ff1660038111156119e1576119e161224a565b03611a9f576000818152600460205260409020546101808501351115611a495760405162461bcd60e51b815260206004820152601960248201527f4f72646572205175616e7469747920697320696e76616c6964000000000000006044820152606401610507565b600081815260046020526040812054611a689061018087013590612374565b905080600003611a8f576000828152600460205260409020600101805460ff191660021790555b6000828152600460205260409020555b5060019392505050565b6001611abb60a0860160808701612207565b6001811115611acc57611acc61224a565b03611b52576001546201000090046001600160a01b031663f709b906611af860808701606088016121c7565b83858861014001356040518563ffffffff1660e01b8152600401611b1f94939291906124b6565b600060405180830381600087803b158015611b3957600080fd5b505af1158015611b4d573d6000803e3d6000fd5b505050505b6000611b6460a0860160808701612207565b6001811115611b7557611b7561224a565b03611c02576001546201000090046001600160a01b0316639c1c2ee9611ba160808701606088016121c7565b83858861014001358961018001356040518663ffffffff1660e01b8152600401611bcf9594939291906124e0565b600060405180830381600087803b158015611be957600080fd5b505af1158015611bfd573d6000803e3d6000fd5b505050505b825115611c97576001546201000090046001600160a01b031663776062c3611c3060608701604088016121c7565b60025486516040516001600160e01b031960e086901b168152611c64939288926001600160a01b03909116916004016124b6565b600060405180830381600087803b158015611c7e57600080fd5b505af1158015611c92573d6000803e3d6000fd5b505050505b60008360400151118015611cb95750611cb7610100850160e08601612228565b155b15611d42576001546201000090046001600160a01b031663776062c3611ce560608701604088016121c7565b84866080015187604001516040518563ffffffff1660e01b8152600401611d0f94939291906124b6565b600060405180830381600087803b158015611d2957600080fd5b505af1158015611d3d573d6000803e3d6000fd5b505050505b6001546201000090046001600160a01b031663776062c3611d6960608701604088016121c7565b848487602001516040518563ffffffff1660e01b8152600401611d8f94939291906124b6565b600060405180830381600087803b158015611da957600080fd5b505af1158015611dbd573d6000803e3d6000fd5b5050505050505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01610454565b600080600080611e1185611eda565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa158015611e6c573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b611e8b8282610d38565b61051a57611e9881611f4e565b611ea3836020611f60565b604051602001611eb4929190612553565b60408051601f198184030181529082905262461bcd60e51b8252610507916004016125c8565b60008060008351604114611f305760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e67746800000000000000006044820152606401610507565b50505060208101516040820151606090920151909260009190911a90565b60606103c96001600160a01b03831660145b60606000611f6f836002612333565b611f7a90600261238b565b67ffffffffffffffff811115611f9257611f926125fb565b6040519080825280601f01601f191660200182016040528015611fbc576020820181803683370190505b509050600360fc1b81600081518110611fd757611fd7612611565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061200657612006612611565b60200101906001600160f81b031916908160001a905350600061202a846002612333565b61203590600161238b565b90505b60018111156120ad576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061206957612069612611565b1a60f81b82828151811061207f5761207f612611565b60200101906001600160f81b031916908160001a90535060049490941c936120a681612627565b9050612038565b5083156120fc5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610507565b9392505050565b60006020828403121561211557600080fd5b81356001600160e01b0319811681146120fc57600080fd5b60006020828403121561213f57600080fd5b813567ffffffffffffffff81111561215657600080fd5b82016101e081850312156120fc57600080fd5b60006020828403121561217b57600080fd5b5035919050565b6001600160a01b03811681146117a257600080fd5b600080604083850312156121aa57600080fd5b8235915060208301356121bc81612182565b809150509250929050565b6000602082840312156121d957600080fd5b81356120fc81612182565b6000602082840312156121f657600080fd5b813560ff811681146120fc57600080fd5b60006020828403121561221957600080fd5b8135600281106120fc57600080fd5b60006020828403121561223a57600080fd5b813580151581146120fc57600080fd5b634e487b7160e01b600052602160045260246000fd5b6002811061227e57634e487b7160e01b600052602160045260246000fd5b60f81b9052565b60006bffffffffffffffffffffffff19808d60601b168352808c60601b166014840152808b60601b166028840152506122c1603c83018a612260565b50603d810196909652605d86019490945291151560f81b607d850152607e840152609e83015260be82015260de01949350505050565b634e487b7160e01b600052601160045260246000fd5b600061ffff80831681851680830382111561232a5761232a6122f7565b01949350505050565b600081600019048311821515161561234d5761234d6122f7565b500290565b60008261236f57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015612386576123866122f7565b500390565b6000821982111561239e5761239e6122f7565b500190565b600080604083850312156123b657600080fd5b82516123c181612182565b6020939093015192949293505050565b6020808252818101527f4f6e6c79206f776e65722063616e20616c6c20746869732066756e6374696f6e604082015260600190565b60006bffffffffffffffffffffffff19808b60601b168352808a60601b166014840152808960601b16602884015250612442603c830188612260565b50603d810194909452605d840192909252607d830152609d82015260bd01949350505050565b6000808335601e1984360301811261247f57600080fd5b83018035915067ffffffffffffffff82111561249a57600080fd5b6020019150368190038213156124af57600080fd5b9250929050565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6001600160a01b03958616815293851660208501529190931660408301526060820192909252608081019190915260c060a0820181905260009082015260e00190565b60005b8381101561253e578181015183820152602001612526565b8381111561254d576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161258b816017850160208801612523565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516125bc816028840160208801612523565b01602801949350505050565b60208152600082518060208401526125e7816040850160208701612523565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081612636576126366122f7565b50600019019056fea26469706673582212209a2a6dfec25165dd3b358cdb57dcfbe2efbcb14e7f034fecba8aaa95d927159764736f6c634300080e0033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:657:75",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:75",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "72:102:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "82:22:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "91:5:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "91:13:75"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "82:5:75"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "152:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "161:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "164:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "154:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "154:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "154:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:75"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "144:4:75",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:16:75"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:27:75"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:35:75"
                  },
                  "nodeType": "YulIf",
                  "src": "113:55:75"
                }
              ]
            },
            "name": "abi_decode_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "51:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "62:5:75",
                "type": ""
              }
            ],
            "src": "14:160:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "314:341:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "360:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "369:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "372:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "362:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "362:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "362:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "335:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "344:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "331:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "331:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "356:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "327:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "327:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "324:52:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "385:48:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "423:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint8_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "395:27:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "395:38:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "385:6:75"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "442:57:75",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "484:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "495:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "480:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:18:75"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint8_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "452:27:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "452:47:75"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "442:6:75"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "508:38:75",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "531:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "542:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "527:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "527:18:75"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "521:5:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "521:25:75"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "512:5:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "609:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "618:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "621:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "611:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "611:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "611:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "568:5:75"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "579:5:75"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "594:3:75",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "599:1:75",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "590:3:75"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "590:11:75"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "603:1:75",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "586:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "586:19:75"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "575:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "575:31:75"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "565:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "565:42:75"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "558:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "558:50:75"
                  },
                  "nodeType": "YulIf",
                  "src": "555:70:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "634:15:75",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "644:5:75"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "634:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8t_uint8t_contract$_ITransferProxy_$14219_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "264:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "275:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "287:6:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "295:6:75",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "303:6:75",
                "type": ""
              }
            ],
            "src": "179:476:75"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_uint8_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint8t_uint8t_contract$_ITransferProxy_$14219_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint8_fromMemory(headStart)\n        value1 := abi_decode_uint8_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value2 := value\n    }\n}",
      "id": 75,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:22074:75",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:75",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:217:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "129:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "138:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "141:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "131:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "131:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "131:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "104:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "113:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "100:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "100:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "125:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "96:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "93:52:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "154:36:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "180:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "167:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "167:23:75"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "158:5:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "212:5:75"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "223:5:75"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "234:3:75",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "239:10:75",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "230:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "230:20:75"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "219:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "219:32:75"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "209:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "209:43:75"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "202:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "202:51:75"
                  },
                  "nodeType": "YulIf",
                  "src": "199:71:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:75",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "49:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "60:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "72:6:75",
                "type": ""
              }
            ],
            "src": "14:286:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "400:92:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "410:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "422:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "433:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "418:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "410:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "452:9:75"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "477:6:75"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "470:6:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "470:14:75"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "463:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "463:22:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "445:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "445:41:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "445:41:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "369:9:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "380:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "391:4:75",
                "type": ""
              }
            ],
            "src": "305:187:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "593:290:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "639:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "648:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "651:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "641:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "641:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "641:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "614:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "623:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "610:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "610:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "635:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "606:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "606:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "603:52:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "664:37:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "691:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "678:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "678:23:75"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "668:6:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "744:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "753:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "756:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "746:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "746:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "746:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "716:6:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "724:18:75",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "713:2:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "713:30:75"
                  },
                  "nodeType": "YulIf",
                  "src": "710:50:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "769:32:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "783:9:75"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "794:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "779:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "779:22:75"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "773:2:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "840:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "849:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "852:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "842:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "842:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "842:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "821:7:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "830:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "817:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "817:16:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "835:3:75",
                        "type": "",
                        "value": "480"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "813:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "813:26:75"
                  },
                  "nodeType": "YulIf",
                  "src": "810:46:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "865:12:75",
                  "value": {
                    "name": "_1",
                    "nodeType": "YulIdentifier",
                    "src": "875:2:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "865:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_Order_$14322_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "559:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "570:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "582:6:75",
                "type": ""
              }
            ],
            "src": "497:386:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "989:76:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "999:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1011:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1022:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1007:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1007:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "999:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1041:9:75"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1052:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1034:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1034:25:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1034:25:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "958:9:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "969:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "980:4:75",
                "type": ""
              }
            ],
            "src": "888:177:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1171:102:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1181:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1193:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1204:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1189:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1189:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1181:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1223:9:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1238:6:75"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1254:3:75",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1259:1:75",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1250:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1250:11:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1263:1:75",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1246:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1246:19:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1234:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1234:32:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1216:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1216:51:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1216:51:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1140:9:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1151:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1162:4:75",
                "type": ""
              }
            ],
            "src": "1070:203:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1348:110:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1394:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1403:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1406:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1396:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1396:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1396:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1369:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1378:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1365:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1365:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1390:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1361:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1361:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "1358:52:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1419:33:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1442:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1429:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1429:23:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1419:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1314:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1325:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1337:6:75",
                "type": ""
              }
            ],
            "src": "1278:180:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1508:86:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1572:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1581:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1584:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1574:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1574:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1574:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1531:5:75"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1542:5:75"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1557:3:75",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1562:1:75",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1553:3:75"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1553:11:75"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1566:1:75",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1549:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1549:19:75"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1538:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1538:31:75"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1528:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1528:42:75"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1521:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1521:50:75"
                  },
                  "nodeType": "YulIf",
                  "src": "1518:70:75"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1497:5:75",
                "type": ""
              }
            ],
            "src": "1463:131:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1686:228:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1732:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1741:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1744:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1734:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1734:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1734:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1707:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1716:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1703:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1703:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1728:2:75",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1699:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1699:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "1696:52:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1757:33:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1780:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1767:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1767:23:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1757:6:75"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1799:45:75",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1829:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1840:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1825:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1825:18:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1812:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1812:32:75"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1803:5:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1878:5:75"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1853:24:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1853:31:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1853:31:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1893:15:75",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1903:5:75"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1893:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1644:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1655:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1667:6:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1675:6:75",
                "type": ""
              }
            ],
            "src": "1599:315:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2064:362:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2074:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2086:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2097:3:75",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2082:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2082:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2074:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2117:9:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2134:6:75"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2128:5:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2128:13:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2110:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2110:32:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2110:32:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2162:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2173:4:75",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2158:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2158:20:75"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2190:6:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2198:4:75",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2186:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2186:17:75"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2180:5:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2180:24:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2151:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2151:54:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2151:54:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2225:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2236:4:75",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2221:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2221:20:75"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2253:6:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2261:4:75",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2249:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2249:17:75"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2243:5:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2243:24:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2214:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2214:54:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2214:54:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2288:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2299:4:75",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2284:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2284:20:75"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2316:6:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2324:4:75",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2312:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2312:17:75"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2306:5:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2306:24:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2277:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2277:54:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2277:54:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2351:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2362:4:75",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2347:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2347:20:75"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2383:6:75"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2391:4:75",
                                    "type": "",
                                    "value": "0x80"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2379:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2379:17:75"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "2373:5:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2373:24:75"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2407:3:75",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2412:1:75",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2403:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2403:11:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2416:1:75",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2399:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2399:19:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2369:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2369:50:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2340:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2340:80:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2340:80:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Fee_$14290_memory_ptr__to_t_struct$_Fee_$14290_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2033:9:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2044:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2055:4:75",
                "type": ""
              }
            ],
            "src": "1919:507:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2528:87:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2538:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2550:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2561:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2546:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2546:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2538:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2580:9:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2595:6:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2603:4:75",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2591:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2591:17:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2573:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2573:36:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2573:36:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2497:9:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2508:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2519:4:75",
                "type": ""
              }
            ],
            "src": "2431:184:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2690:177:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2736:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2745:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2748:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2738:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2738:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2738:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2711:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2720:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2707:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2707:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2732:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2703:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2703:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "2700:52:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2761:36:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2787:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2774:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2774:23:75"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2765:5:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2831:5:75"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2806:24:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2806:31:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2806:31:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2846:15:75",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2856:5:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2846:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2656:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2667:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2679:6:75",
                "type": ""
              }
            ],
            "src": "2620:247:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2997:102:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3007:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3019:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3030:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3015:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3015:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3007:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3049:9:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3064:6:75"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3080:3:75",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3085:1:75",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3076:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3076:11:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3089:1:75",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3072:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3072:19:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3060:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3060:32:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3042:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3042:51:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3042:51:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ITransferProxy_$14219__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2966:9:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2977:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2988:4:75",
                "type": ""
              }
            ],
            "src": "2872:227:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3172:201:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3218:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3227:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3230:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3220:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3220:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3220:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3193:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3202:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3189:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3189:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3214:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3185:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3185:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "3182:52:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3243:36:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3269:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3256:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3256:23:75"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3247:5:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3327:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3336:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3339:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3329:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3329:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3329:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3301:5:75"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3312:5:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3319:4:75",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3308:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3308:16:75"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3298:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3298:27:75"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3291:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3291:35:75"
                  },
                  "nodeType": "YulIf",
                  "src": "3288:55:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3352:15:75",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3362:5:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3352:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3138:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3149:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3161:6:75",
                "type": ""
              }
            ],
            "src": "3104:269:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3469:186:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3515:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3524:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3527:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3517:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3517:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3517:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3490:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3499:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3486:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3486:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3511:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3482:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3482:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "3479:52:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3540:36:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3566:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3553:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3553:23:75"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3544:5:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3609:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3618:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3621:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3611:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3611:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3611:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3598:5:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3605:1:75",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3595:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3595:12:75"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3588:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3588:20:75"
                  },
                  "nodeType": "YulIf",
                  "src": "3585:40:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3634:15:75",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3644:5:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3634:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_BuyingAssetType_$14229",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3435:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3446:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3458:6:75",
                "type": ""
              }
            ],
            "src": "3378:277:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3727:206:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3773:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3782:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3785:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3775:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3775:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3775:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3748:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3757:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3744:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3744:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3769:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3740:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3740:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "3737:52:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3798:36:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3824:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3811:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3811:23:75"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3802:5:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3887:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3896:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3899:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3889:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3889:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3889:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3856:5:75"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3877:5:75"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3870:6:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3870:13:75"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3863:6:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3863:21:75"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3853:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3853:32:75"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3846:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3846:40:75"
                  },
                  "nodeType": "YulIf",
                  "src": "3843:60:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3912:15:75",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3922:5:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3912:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3693:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3704:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3716:6:75",
                "type": ""
              }
            ],
            "src": "3660:273:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3970:95:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3987:1:75",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3994:3:75",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3999:10:75",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3990:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3990:20:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3980:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3980:31:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3980:31:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4027:1:75",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4030:4:75",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4020:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4020:15:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4020:15:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4051:1:75",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4054:4:75",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4044:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4044:15:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4044:15:75"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "3938:127:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4127:196:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4169:111:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4190:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4197:3:75",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4202:10:75",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "4193:3:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4193:20:75"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4183:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4183:31:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4183:31:75"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4234:1:75",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4237:4:75",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4227:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4227:15:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4227:15:75"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4262:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4265:4:75",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4255:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4255:15:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4255:15:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4150:5:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4157:1:75",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4147:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4147:12:75"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4140:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4140:20:75"
                  },
                  "nodeType": "YulIf",
                  "src": "4137:143:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4296:3:75"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4305:3:75",
                            "type": "",
                            "value": "248"
                          },
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4310:5:75"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4301:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4301:15:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4289:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4289:28:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4289:28:75"
                }
              ]
            },
            "name": "abi_encode_enum_BuyingAssetType",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4111:5:75",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4118:3:75",
                "type": ""
              }
            ],
            "src": "4070:253:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4712:556:75",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4722:41:75",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4736:26:75",
                        "type": "",
                        "value": "0xffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "4732:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4732:31:75"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4726:2:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4779:3:75"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4792:2:75",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4796:6:75"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4788:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4788:15:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4805:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4784:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4784:24:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4772:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4772:37:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4772:37:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4829:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4834:2:75",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4825:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4825:12:75"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4847:2:75",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "4851:6:75"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4843:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4843:15:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4860:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4839:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4839:24:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4818:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4818:46:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4818:46:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4884:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4889:2:75",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4880:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4880:12:75"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4902:2:75",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "4906:6:75"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4898:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4898:15:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4915:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4894:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4894:24:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4873:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4873:46:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4873:46:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "4960:6:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4972:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4977:2:75",
                            "type": "",
                            "value": "60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4968:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4968:12:75"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_BuyingAssetType",
                      "nodeType": "YulIdentifier",
                      "src": "4928:31:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4928:53:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4928:53:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5001:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5006:2:75",
                            "type": "",
                            "value": "61"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4997:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4997:12:75"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "5011:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4990:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4990:28:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4990:28:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5038:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5043:2:75",
                            "type": "",
                            "value": "93"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5034:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5034:12:75"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "5048:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5027:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5027:28:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5027:28:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5075:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5080:3:75",
                            "type": "",
                            "value": "125"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5071:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5071:13:75"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5090:3:75",
                            "type": "",
                            "value": "248"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "5109:6:75"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5102:6:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5102:14:75"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5095:6:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5095:22:75"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5086:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5086:32:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5064:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5064:55:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5064:55:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5139:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5144:3:75",
                            "type": "",
                            "value": "126"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5135:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5135:13:75"
                      },
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "5150:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5128:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5128:29:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5128:29:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5177:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5182:3:75",
                            "type": "",
                            "value": "158"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5173:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5173:13:75"
                      },
                      {
                        "name": "value8",
                        "nodeType": "YulIdentifier",
                        "src": "5188:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5166:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5166:29:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5166:29:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5215:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5220:3:75",
                            "type": "",
                            "value": "190"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5211:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5211:13:75"
                      },
                      {
                        "name": "value9",
                        "nodeType": "YulIdentifier",
                        "src": "5226:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5204:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5204:29:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5204:29:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5242:20:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5253:3:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5258:3:75",
                        "type": "",
                        "value": "222"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5249:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5249:13:75"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5242:3:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address_t_address_t_enum$_BuyingAssetType_$14229_t_uint256_t_uint256_t_bool_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint8_t_uint256_t_uint256_t_bool_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4616:3:75",
                "type": ""
              },
              {
                "name": "value9",
                "nodeType": "YulTypedName",
                "src": "4621:6:75",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "4629:6:75",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "4637:6:75",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "4645:6:75",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "4653:6:75",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4661:6:75",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4669:6:75",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4677:6:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4685:6:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4693:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4704:3:75",
                "type": ""
              }
            ],
            "src": "4328:940:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5447:237:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5464:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5475:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5457:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5457:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5457:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5498:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5509:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5494:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5494:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5514:2:75",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5487:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5487:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5487:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5537:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5548:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5533:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5533:18:75"
                      },
                      {
                        "hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5553:34:75",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5526:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5526:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5526:62:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5608:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5619:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5604:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5604:18:75"
                      },
                      {
                        "hexValue": "20726f6c657320666f722073656c66",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5624:17:75",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5597:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5597:45:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5597:45:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5651:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5663:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5674:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5659:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5659:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5651:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5424:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5438:4:75",
                "type": ""
              }
            ],
            "src": "5273:411:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5721:95:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5738:1:75",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5745:3:75",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5750:10:75",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5741:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5741:20:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5731:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5731:31:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5731:31:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5778:1:75",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5781:4:75",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5771:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5771:15:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5771:15:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5802:1:75",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5805:4:75",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5795:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5795:15:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5795:15:75"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "5689:127:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5868:177:75",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5878:16:75",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5888:6:75",
                    "type": "",
                    "value": "0xffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5882:2:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5903:21:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5918:1:75"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5921:2:75"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5914:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5914:10:75"
                  },
                  "variables": [
                    {
                      "name": "x_1",
                      "nodeType": "YulTypedName",
                      "src": "5907:3:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5933:21:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5948:1:75"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5951:2:75"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5944:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5944:10:75"
                  },
                  "variables": [
                    {
                      "name": "y_1",
                      "nodeType": "YulTypedName",
                      "src": "5937:3:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5988:22:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5990:16:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5990:18:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5990:18:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "5969:3:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5978:2:75"
                          },
                          {
                            "name": "y_1",
                            "nodeType": "YulIdentifier",
                            "src": "5982:3:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5974:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5974:12:75"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5966:2:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5966:21:75"
                  },
                  "nodeType": "YulIf",
                  "src": "5963:47:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6019:20:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "6030:3:75"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "6035:3:75"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6026:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6026:13:75"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6019:3:75"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5851:1:75",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5854:1:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "5860:3:75",
                "type": ""
              }
            ],
            "src": "5821:224:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6102:116:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6161:22:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6163:16:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6163:18:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6163:18:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6133:1:75"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6126:6:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6126:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6119:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6119:17:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6141:1:75"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6152:1:75",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6148:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6148:6:75"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6156:1:75"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "6144:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6144:14:75"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6138:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6138:21:75"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6115:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6115:45:75"
                  },
                  "nodeType": "YulIf",
                  "src": "6112:71:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6192:20:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6207:1:75"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6210:1:75"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "6203:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6203:9:75"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "6192:7:75"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6081:1:75",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6084:1:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "6090:7:75",
                "type": ""
              }
            ],
            "src": "6050:168:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6269:171:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6300:111:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6321:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6328:3:75",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6333:10:75",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "6324:3:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6324:20:75"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6314:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6314:31:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6314:31:75"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6365:1:75",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6368:4:75",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6358:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6358:15:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6358:15:75"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6393:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6396:4:75",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6386:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6386:15:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6386:15:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6289:1:75"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6282:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6282:9:75"
                  },
                  "nodeType": "YulIf",
                  "src": "6279:132:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6420:14:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6429:1:75"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6432:1:75"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "6425:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6425:9:75"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "6420:1:75"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6254:1:75",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6257:1:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "6263:1:75",
                "type": ""
              }
            ],
            "src": "6223:217:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6494:76:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6516:22:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6518:16:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6518:18:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6518:18:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6510:1:75"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6513:1:75"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6507:2:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6507:8:75"
                  },
                  "nodeType": "YulIf",
                  "src": "6504:34:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6547:17:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6559:1:75"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6562:1:75"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6555:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6555:9:75"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "6547:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6476:1:75",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6479:1:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "6485:4:75",
                "type": ""
              }
            ],
            "src": "6445:125:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6623:80:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6650:22:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6652:16:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6652:18:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6652:18:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6639:1:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6646:1:75"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6642:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6642:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6636:2:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6636:13:75"
                  },
                  "nodeType": "YulIf",
                  "src": "6633:39:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6681:16:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6692:1:75"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6695:1:75"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6688:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6688:9:75"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6681:3:75"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6606:1:75",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6609:1:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6615:3:75",
                "type": ""
              }
            ],
            "src": "6575:128:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6837:119:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6847:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6859:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6870:2:75",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6855:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6855:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6847:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6889:9:75"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6900:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6882:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6882:25:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6882:25:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6927:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6938:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6923:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6923:18:75"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6943:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6916:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6916:34:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6916:34:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6798:9:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6809:6:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6817:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6828:4:75",
                "type": ""
              }
            ],
            "src": "6708:248:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7059:214:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7105:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7114:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7117:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7107:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7107:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7107:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7080:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7089:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7076:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7076:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7101:2:75",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7072:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7072:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "7069:52:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7130:29:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7149:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7143:5:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7143:16:75"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7134:5:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7193:5:75"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "7168:24:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7168:31:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7168:31:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7208:15:75",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7218:5:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7208:6:75"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7232:35:75",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7252:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7263:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7248:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7248:18:75"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7242:5:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7242:25:75"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7232:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7017:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7028:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7040:6:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7048:6:75",
                "type": ""
              }
            ],
            "src": "6961:312:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7452:182:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7469:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7480:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7462:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7462:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7462:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7503:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7514:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7499:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7499:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7519:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7492:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7492:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7492:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7542:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7553:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7538:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7538:18:75"
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e20616c6c20746869732066756e6374696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7558:34:75",
                        "type": "",
                        "value": "Only owner can all this function"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7531:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7531:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7531:62:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7602:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7614:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7625:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7610:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7610:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7602:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_51ad396264f84709ad4269026509e9a624e8487203b518fbe12cbf6e3bd45edc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7429:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7443:4:75",
                "type": ""
              }
            ],
            "src": "7278:356:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7813:170:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7830:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7841:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7823:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7823:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7823:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7864:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7875:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7860:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7860:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7880:2:75",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7853:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7853:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7853:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7903:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7914:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7899:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7899:18:75"
                      },
                      {
                        "hexValue": "5369676e65722076616c75652069732073616d65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7919:22:75",
                        "type": "",
                        "value": "Signer value is same"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7892:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7892:50:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7892:50:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7951:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7963:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7974:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7959:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7959:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7951:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b330f54cb3b506e1ff7dd011cf0af03f672b9aa361bc07d55d3a09f4938be41c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7790:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7804:4:75",
                "type": ""
              }
            ],
            "src": "7639:344:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8322:454:75",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8332:41:75",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8346:26:75",
                        "type": "",
                        "value": "0xffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "8342:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8342:31:75"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8336:2:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8389:3:75"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8402:2:75",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "8406:6:75"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "8398:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8398:15:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8415:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8394:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8394:24:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8382:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8382:37:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8382:37:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8439:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8444:2:75",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8435:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8435:12:75"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8457:2:75",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "8461:6:75"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "8453:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8453:15:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8470:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8449:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8449:24:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8428:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8428:46:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8428:46:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8494:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8499:2:75",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8490:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8490:12:75"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8512:2:75",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "8516:6:75"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "8508:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8508:15:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8525:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8504:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8504:24:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8483:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8483:46:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8483:46:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "8570:6:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8582:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8587:2:75",
                            "type": "",
                            "value": "60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8578:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8578:12:75"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_BuyingAssetType",
                      "nodeType": "YulIdentifier",
                      "src": "8538:31:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8538:53:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8538:53:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8611:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8616:2:75",
                            "type": "",
                            "value": "61"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8607:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8607:12:75"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "8621:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8600:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8600:28:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8600:28:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8648:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8653:2:75",
                            "type": "",
                            "value": "93"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8644:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8644:12:75"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "8658:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8637:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8637:28:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8637:28:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8685:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8690:3:75",
                            "type": "",
                            "value": "125"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8681:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8681:13:75"
                      },
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "8696:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8674:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8674:29:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8674:29:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8723:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8728:3:75",
                            "type": "",
                            "value": "157"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8719:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8719:13:75"
                      },
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "8734:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8712:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8712:29:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8712:29:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8750:20:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8761:3:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8766:3:75",
                        "type": "",
                        "value": "189"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8757:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8757:13:75"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8750:3:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address_t_address_t_enum$_BuyingAssetType_$14229_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8242:3:75",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "8247:6:75",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "8255:6:75",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "8263:6:75",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "8271:6:75",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8279:6:75",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8287:6:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8295:6:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8303:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8314:3:75",
                "type": ""
              }
            ],
            "src": "7988:788:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8955:172:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8972:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8983:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8965:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8965:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8965:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9006:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9017:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9002:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9002:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9022:2:75",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8995:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8995:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8995:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9045:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9056:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9041:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9041:18:75"
                      },
                      {
                        "hexValue": "53656c6c65722063616e6e6f7420626520656d707479",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9061:24:75",
                        "type": "",
                        "value": "Seller cannot be empty"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9034:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9034:52:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9034:52:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9095:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9107:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9118:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9103:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9103:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9095:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0232994d300f1855432717262d46f657ff60402553233f5cab772e9cc006f548__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8932:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8946:4:75",
                "type": ""
              }
            ],
            "src": "8781:346:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9306:171:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9323:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9334:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9316:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9316:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9316:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9357:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9368:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9353:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9353:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9373:2:75",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9346:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9346:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9346:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9396:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9407:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9392:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9392:18:75"
                      },
                      {
                        "hexValue": "42757965722063616e6e6f7420626520656d707479",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9412:23:75",
                        "type": "",
                        "value": "Buyer cannot be empty"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9385:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9385:51:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9385:51:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9445:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9457:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9468:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9453:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9453:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9445:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1fb710e407d3acf7c76b5184aac53e479a04425b545529056daaa017a41197de__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9283:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9297:4:75",
                "type": ""
              }
            ],
            "src": "9132:345:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9656:177:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9673:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9684:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9666:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9666:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9666:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9707:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9718:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9703:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9703:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9723:2:75",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9696:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9696:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9696:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9746:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9757:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9742:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9742:18:75"
                      },
                      {
                        "hexValue": "4e465420416464726573732063616e6e6f7420626520656d707479",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9762:29:75",
                        "type": "",
                        "value": "NFT Address cannot be empty"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9735:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9735:57:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9735:57:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9801:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9813:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9824:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9809:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9809:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9801:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e780f352d098f9a16b0fb7523366752ff32ed4302ddaad054445e5458bac72e7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9633:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9647:4:75",
                "type": ""
              }
            ],
            "src": "9482:351:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10012:176:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10029:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10040:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10022:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10022:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10022:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10063:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10074:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10059:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10059:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10079:2:75",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10052:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10052:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10052:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10102:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10113:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10098:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10098:18:75"
                      },
                      {
                        "hexValue": "41756374696f6e206973206e6f74207374617274656420796574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10118:28:75",
                        "type": "",
                        "value": "Auction is not started yet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10091:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10091:56:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10091:56:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10156:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10168:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10179:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10164:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10164:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10156:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f5a9b8cb24de78b4cc0610fef5a7806abc7253e6b7442e76e50ba2862e966585__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9989:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10003:4:75",
                "type": ""
              }
            ],
            "src": "9838:350:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10367:166:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10384:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10395:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10377:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10377:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10377:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10418:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10429:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10414:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10414:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10434:2:75",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10407:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10407:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10407:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10457:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10468:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10453:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10453:18:75"
                      },
                      {
                        "hexValue": "41756374696f6e20697320656e646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10473:18:75",
                        "type": "",
                        "value": "Auction is ended"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10446:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10446:46:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10446:46:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10501:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10513:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10524:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10509:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10509:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10501:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f6411240398b6c1614d1df84c9aa8aea8046a0212eeb55a9a59b7cc84c1b0939__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10344:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10358:4:75",
                "type": ""
              }
            ],
            "src": "10193:340:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10712:175:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10729:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10740:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10722:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10722:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10722:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10763:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10774:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10759:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10759:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10779:2:75",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10752:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10752:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10752:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10802:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10813:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10798:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10798:18:75"
                      },
                      {
                        "hexValue": "556e69742070726963652063616e6e6f74206265207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10818:27:75",
                        "type": "",
                        "value": "Unit price cannot be zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10791:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10791:55:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10791:55:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10855:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10867:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10878:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10863:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10863:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10855:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_530ab7dc56782b1c8db2179ce8929e7f68bd8990eea5c3b3c18ec0e36f36b331__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10689:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10703:4:75",
                "type": ""
              }
            ],
            "src": "10538:349:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11066:172:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11083:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11094:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11076:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11076:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11076:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11117:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11128:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11113:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11113:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11133:2:75",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11106:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11106:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11106:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11156:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11167:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11152:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11152:18:75"
                      },
                      {
                        "hexValue": "546f6b656e49642063616e6e6f74206265207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11172:24:75",
                        "type": "",
                        "value": "TokenId cannot be zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11145:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11145:52:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11145:52:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11206:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11218:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11229:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11214:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11214:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11206:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_935879e226d4bdb9bd7e7e780091d0a26cb918d532ef3ba1f3e9947deddfc286__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11043:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11057:4:75",
                "type": ""
              }
            ],
            "src": "10892:346:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11417:171:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11434:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11445:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11427:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11427:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11427:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11468:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11479:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11464:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11464:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11484:2:75",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11457:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11457:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11457:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11507:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11518:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11503:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11503:18:75"
                      },
                      {
                        "hexValue": "416d6f756e742063616e6e6f74206265207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11523:23:75",
                        "type": "",
                        "value": "Amount cannot be zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11496:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11496:51:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11496:51:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11556:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11568:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11579:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11564:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11564:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11556:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8beea76deddeff1012d90e1e8da369393f885b0575eb094a33da9912cc4bbb8b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11394:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11408:4:75",
                "type": ""
              }
            ],
            "src": "11243:345:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11767:173:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11784:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11795:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11777:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11777:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11777:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11818:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11829:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11814:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11814:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11834:2:75",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11807:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11807:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11807:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11857:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11868:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11853:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11853:18:75"
                      },
                      {
                        "hexValue": "5175616e746974792063616e6e6f74206265207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11873:25:75",
                        "type": "",
                        "value": "Quantity cannot be zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11846:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11846:53:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11846:53:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11908:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11920:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11931:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11916:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11916:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11908:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_662e76c4c7be31c911ead8c8dc124c282d7230289373f196ee23a95cc629918b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11744:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11758:4:75",
                "type": ""
              }
            ],
            "src": "11593:347:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12119:227:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12136:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12147:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12129:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12129:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12129:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12170:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12181:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12166:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12166:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12186:2:75",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12159:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12159:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12159:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12209:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12220:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12205:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12205:18:75"
                      },
                      {
                        "hexValue": "4f6e6c79206f726465722062757965722063616e2063616c6c2074686973206d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12225:34:75",
                        "type": "",
                        "value": "Only order buyer can call this m"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12198:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12198:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12198:62:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12280:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12291:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12276:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12276:18:75"
                      },
                      {
                        "hexValue": "6574686f64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12296:7:75",
                        "type": "",
                        "value": "ethod"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12269:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12269:35:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12269:35:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12313:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12325:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12336:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12321:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12321:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12313:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ba600277e48edf73e4c4cfe3b5ef7ab485c317e94395cf181dcd19efbd5f916e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12096:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12110:4:75",
                "type": ""
              }
            ],
            "src": "11945:401:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12525:169:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12542:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12553:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12535:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12535:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12535:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12576:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12587:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12572:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12572:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12592:2:75",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12565:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12565:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12565:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12615:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12626:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12611:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12611:18:75"
                      },
                      {
                        "hexValue": "5061696420696e76616c696420616d6f756e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12631:21:75",
                        "type": "",
                        "value": "Paid invalid amount"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12604:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12604:49:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12604:49:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12662:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12674:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12685:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12670:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12670:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12662:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1720ac4e2a48e81b9bc85ccf3361a2938d26d92bf9e3070ee081eb99ab7f6caa__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12502:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12516:4:75",
                "type": ""
              }
            ],
            "src": "12351:343:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12800:76:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12810:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12822:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12833:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12818:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12818:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12810:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12852:9:75"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12863:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12845:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12845:25:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12845:25:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12769:9:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12780:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12791:4:75",
                "type": ""
              }
            ],
            "src": "12699:177:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13055:176:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13072:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13083:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13065:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13065:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13065:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13106:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13117:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13102:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13102:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13122:2:75",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13095:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13095:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13095:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13145:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13156:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13141:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13141:18:75"
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f74206f726465722073656c6c6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13161:28:75",
                        "type": "",
                        "value": "Caller is not order seller"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13134:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13134:56:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13134:56:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13199:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13211:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13222:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13207:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13207:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13199:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b736b3a4b26bc43c4b574dc3beb4a35e025f1fea386508885f1007a1f18d9143__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13032:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13046:4:75",
                "type": ""
              }
            ],
            "src": "12881:350:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13330:427:75",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13340:51:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr_to_tail",
                        "nodeType": "YulIdentifier",
                        "src": "13379:11:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "13366:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13366:25:75"
                  },
                  "variables": [
                    {
                      "name": "rel_offset_of_tail",
                      "nodeType": "YulTypedName",
                      "src": "13344:18:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13480:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13489:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13492:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13482:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13482:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13482:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "rel_offset_of_tail",
                            "nodeType": "YulIdentifier",
                            "src": "13414:18:75"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "calldatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "13442:12:75"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13442:14:75"
                                  },
                                  {
                                    "name": "base_ref",
                                    "nodeType": "YulIdentifier",
                                    "src": "13458:8:75"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "13438:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13438:29:75"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13473:2:75",
                                    "type": "",
                                    "value": "30"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "13469:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13469:7:75"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13434:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13434:43:75"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "13410:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13410:68:75"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13403:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13403:76:75"
                  },
                  "nodeType": "YulIf",
                  "src": "13400:96:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13505:47:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "base_ref",
                        "nodeType": "YulIdentifier",
                        "src": "13523:8:75"
                      },
                      {
                        "name": "rel_offset_of_tail",
                        "nodeType": "YulIdentifier",
                        "src": "13533:18:75"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13519:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13519:33:75"
                  },
                  "variables": [
                    {
                      "name": "addr_1",
                      "nodeType": "YulTypedName",
                      "src": "13509:6:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13561:30:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "addr_1",
                        "nodeType": "YulIdentifier",
                        "src": "13584:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "13571:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13571:20:75"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "13561:6:75"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13634:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13643:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13646:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13636:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13636:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13636:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13606:6:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13614:18:75",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "13603:2:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13603:30:75"
                  },
                  "nodeType": "YulIf",
                  "src": "13600:50:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13659:25:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "addr_1",
                        "nodeType": "YulIdentifier",
                        "src": "13671:6:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13679:4:75",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13667:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13667:17:75"
                  },
                  "variableNames": [
                    {
                      "name": "addr",
                      "nodeType": "YulIdentifier",
                      "src": "13659:4:75"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13735:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13744:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13747:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13737:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13737:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13737:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "addr",
                        "nodeType": "YulIdentifier",
                        "src": "13700:4:75"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "calldatasize",
                              "nodeType": "YulIdentifier",
                              "src": "13710:12:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13710:14:75"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "13726:6:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13706:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13706:27:75"
                      }
                    ],
                    "functionName": {
                      "name": "sgt",
                      "nodeType": "YulIdentifier",
                      "src": "13696:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13696:38:75"
                  },
                  "nodeType": "YulIf",
                  "src": "13693:58:75"
                }
              ]
            },
            "name": "access_calldata_tail_t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base_ref",
                "nodeType": "YulTypedName",
                "src": "13287:8:75",
                "type": ""
              },
              {
                "name": "ptr_to_tail",
                "nodeType": "YulTypedName",
                "src": "13297:11:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "addr",
                "nodeType": "YulTypedName",
                "src": "13313:4:75",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "13319:6:75",
                "type": ""
              }
            ],
            "src": "13236:521:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13936:171:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13953:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13964:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13946:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13946:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13946:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13987:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13998:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13983:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13983:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14003:2:75",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13976:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13976:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13976:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14026:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14037:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14022:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14022:18:75"
                      },
                      {
                        "hexValue": "496e76616c6964206f726465722064657461696c73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14042:23:75",
                        "type": "",
                        "value": "Invalid order details"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14015:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14015:51:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14015:51:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14075:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14087:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14098:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14083:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14083:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14075:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_78a9165f89a9f51c6398b08106809c65c4102ad9fd7f52adf2a2cf61e69e86d0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13913:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13927:4:75",
                "type": ""
              }
            ],
            "src": "13762:345:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14286:182:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14303:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14314:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14296:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14296:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14296:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14337:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14348:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14333:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14333:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14353:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14326:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14326:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14326:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14376:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14387:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14372:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14372:18:75"
                      },
                      {
                        "hexValue": "4f7264657220616c726561647920636f6d706c746564206f722063616e63656c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14392:34:75",
                        "type": "",
                        "value": "Order already complted or cancel"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14365:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14365:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14365:62:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14436:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14448:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14459:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14444:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14444:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14436:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0c99eb1f384c1a02d19b903debb028bbe28a4ade3502226eaaa61a9ea9668aab__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14263:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14277:4:75",
                "type": ""
              }
            ],
            "src": "14112:356:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14647:181:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14664:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14675:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14657:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14657:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14657:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14698:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14709:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14694:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14694:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14714:2:75",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14687:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14687:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14687:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14737:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14748:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14733:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14733:18:75"
                      },
                      {
                        "hexValue": "53656c6c65724665655065726d696c6c652076616c75652069732073616d65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14753:33:75",
                        "type": "",
                        "value": "SellerFeePermille value is same"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14726:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14726:61:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14726:61:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14796:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14808:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14819:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14804:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14804:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14796:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e1b6679d28c127b63a0e7639ff84499fdd30665ebfc1a5554ab3f05786b087d7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14624:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14638:4:75",
                "type": ""
              }
            ],
            "src": "14473:355:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15007:180:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15024:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15035:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15017:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15017:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15017:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15058:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15069:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15054:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15054:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15074:2:75",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15047:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15047:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15047:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15097:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15108:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15093:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15093:18:75"
                      },
                      {
                        "hexValue": "42757965724665655065726d696c6c652076616c75652069732073616d65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15113:32:75",
                        "type": "",
                        "value": "BuyerFeePermille value is same"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15086:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15086:60:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15086:60:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15155:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15167:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15178:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15163:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15163:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15155:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_45ab2a59a0e95a2d07251692a1073e091187085eb92f80257f932439a93f4b62__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14984:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14998:4:75",
                "type": ""
              }
            ],
            "src": "14833:354:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15366:169:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15383:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15394:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15376:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15376:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15376:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15417:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15428:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15413:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15413:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15433:2:75",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15406:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15406:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15406:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15456:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15467:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15452:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15452:18:75"
                      },
                      {
                        "hexValue": "496e76616c6964206269642064657461696c73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15472:21:75",
                        "type": "",
                        "value": "Invalid bid details"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15445:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15445:49:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15445:49:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15503:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15515:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15526:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15511:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15511:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15503:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6e68da84f21b80e71d3487e97fb1fff1029163585f2eaa681b648b6d33c0e2fa__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15343:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15357:4:75",
                "type": ""
              }
            ],
            "src": "15192:343:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15714:228:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15731:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15742:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15724:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15724:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15724:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15765:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15776:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15761:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15761:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15781:2:75",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15754:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15754:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15754:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15804:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15815:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15800:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15800:18:75"
                      },
                      {
                        "hexValue": "4f6e6c79206f726465722073656c6c65722063616e2063616c6c207468697320",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15820:34:75",
                        "type": "",
                        "value": "Only order seller can call this "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15793:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15793:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15793:62:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15875:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15886:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15871:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15871:18:75"
                      },
                      {
                        "hexValue": "6d6574686f64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15891:8:75",
                        "type": "",
                        "value": "method"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15864:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15864:36:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15864:36:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15909:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15921:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15932:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15917:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15917:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15909:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7781e8c9acdd69da49f1e6194130023eb30523cfd8e98d7d3dc6a8996b296997__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15691:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15705:4:75",
                "type": ""
              }
            ],
            "src": "15540:402:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16121:223:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16138:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16149:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16131:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16131:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16131:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16172:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16183:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16168:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16168:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16188:2:75",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16161:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16161:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16161:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16211:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16222:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16207:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16207:18:75"
                      },
                      {
                        "hexValue": "4f6e6c79207369676e65722063616e20616c6c20746869732066756e6374696f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16227:34:75",
                        "type": "",
                        "value": "Only signer can all this functio"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16200:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16200:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16200:62:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16282:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16293:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16278:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16278:18:75"
                      },
                      {
                        "hexValue": "6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16298:3:75",
                        "type": "",
                        "value": "n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16271:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16271:31:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16271:31:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16311:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16323:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16334:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16319:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16319:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16311:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_818e0918d5f8f3c22488584ebd17e1866e4077457a7a7fbab6c59de50fbc5a43__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16098:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16112:4:75",
                "type": ""
              }
            ],
            "src": "15947:397:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16551:271:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16561:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16573:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16584:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16569:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16569:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16561:4:75"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16597:29:75",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16615:3:75",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16620:1:75",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "16611:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16611:11:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16624:1:75",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "16607:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16607:19:75"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "16601:2:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16642:9:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "16657:6:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "16665:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16653:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16653:15:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16635:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16635:34:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16635:34:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16689:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16700:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16685:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16685:18:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "16709:6:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "16717:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16705:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16705:15:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16678:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16678:43:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16678:43:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16741:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16752:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16737:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16737:18:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "16761:6:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "16769:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16757:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16757:15:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16730:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16730:43:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16730:43:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16793:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16804:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16789:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16789:18:75"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "16809:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16782:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16782:34:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16782:34:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC721_$10142_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16496:9:75",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "16507:6:75",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "16515:6:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16523:6:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16531:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16542:4:75",
                "type": ""
              }
            ],
            "src": "16349:473:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17157:395:75",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17167:29:75",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17185:3:75",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17190:1:75",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "17181:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17181:11:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17194:1:75",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "17177:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17177:19:75"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "17171:2:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17212:9:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "17227:6:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "17235:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17223:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17223:15:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17205:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17205:34:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17205:34:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17259:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17270:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17255:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17255:18:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "17279:6:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "17287:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17275:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17275:15:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17248:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17248:43:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17248:43:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17311:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17322:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17307:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17307:18:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "17331:6:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "17339:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17327:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17327:15:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17300:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17300:43:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17300:43:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17363:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17374:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17359:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17359:18:75"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "17379:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17352:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17352:34:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17352:34:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17406:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17417:3:75",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17402:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17402:19:75"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "17423:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17395:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17395:35:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17395:35:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17450:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17461:3:75",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17446:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17446:19:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17467:3:75",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17439:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17439:32:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17439:32:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17491:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17502:3:75",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17487:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17487:19:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17508:1:75",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17480:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17480:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17480:30:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17519:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17531:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17542:3:75",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17527:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17527:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17519:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC1155_$8268_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17094:9:75",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "17105:6:75",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "17113:6:75",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "17121:6:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "17129:6:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17137:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17148:4:75",
                "type": ""
              }
            ],
            "src": "16827:725:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17731:162:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17748:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17759:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17741:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17741:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17741:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17782:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17793:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17778:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17778:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17798:2:75",
                        "type": "",
                        "value": "12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17771:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17771:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17771:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17821:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17832:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17817:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17817:18:75"
                      },
                      {
                        "hexValue": "4f7264657220636c6f736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17837:14:75",
                        "type": "",
                        "value": "Order closed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17810:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17810:42:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17810:42:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17861:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17873:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17884:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17869:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17869:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17861:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ee7795d41bcacc139a12c4d8a7d29e2e70d3d410cf6ed4eda0b4229156b7a294__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17708:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17722:4:75",
                "type": ""
              }
            ],
            "src": "17557:336:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18072:175:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18089:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18100:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18082:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18082:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18082:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18123:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18134:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18119:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18119:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18139:2:75",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18112:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18112:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18112:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18162:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18173:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18158:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18158:18:75"
                      },
                      {
                        "hexValue": "4f72646572205175616e7469747920697320696e76616c6964",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18178:27:75",
                        "type": "",
                        "value": "Order Quantity is invalid"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18151:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18151:55:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18151:55:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18215:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18227:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18238:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18223:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18223:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18215:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d6b39d85b143f9803d307392c43cc4279a0ab934faeb0976571dd4e99e023a0c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18049:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18063:4:75",
                "type": ""
              }
            ],
            "src": "17898:349:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18452:271:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18462:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18474:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18485:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18470:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18470:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18462:4:75"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18498:29:75",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18516:3:75",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18521:1:75",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "18512:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18512:11:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18525:1:75",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "18508:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18508:19:75"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "18502:2:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18543:9:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "18558:6:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "18566:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "18554:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18554:15:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18536:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18536:34:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18536:34:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18590:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18601:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18586:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18586:18:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "18610:6:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "18618:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "18606:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18606:15:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18579:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18579:43:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18579:43:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18642:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18653:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18638:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18638:18:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "18662:6:75"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "18670:2:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "18658:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18658:15:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18631:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18631:43:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18631:43:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18694:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18705:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18690:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18690:18:75"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "18710:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18683:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18683:34:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18683:34:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$9074_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18397:9:75",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "18408:6:75",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "18416:6:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18424:6:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18432:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18443:4:75",
                "type": ""
              }
            ],
            "src": "18252:471:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18948:160:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18965:3:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18970:66:75",
                        "type": "",
                        "value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18958:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18958:79:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18958:79:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "19057:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19062:2:75",
                            "type": "",
                            "value": "28"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19053:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19053:12:75"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "19067:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19046:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19046:28:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19046:28:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19083:19:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19094:3:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19099:2:75",
                        "type": "",
                        "value": "60"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19090:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19090:12:75"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "19083:3:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "18924:3:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18929:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "18940:3:75",
                "type": ""
              }
            ],
            "src": "18728:380:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19294:217:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19304:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19316:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19327:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19312:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19312:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19304:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19347:9:75"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "19358:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19340:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19340:25:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19340:25:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19385:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19396:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19381:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19381:18:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "19405:6:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19413:4:75",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "19401:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19401:17:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19374:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19374:45:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19374:45:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19439:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19450:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19435:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19435:18:75"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "19455:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19428:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19428:34:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19428:34:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19482:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19493:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19478:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19478:18:75"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "19498:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19471:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19471:34:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19471:34:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19239:9:75",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "19250:6:75",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "19258:6:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19266:6:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19274:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19285:4:75",
                "type": ""
              }
            ],
            "src": "19113:398:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19569:205:75",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19579:10:75",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "19588:1:75",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "19583:1:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19648:63:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "19673:3:75"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "19678:1:75"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "19669:3:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "19669:11:75"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "19692:3:75"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "19697:1:75"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "19688:3:75"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "19688:11:75"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "19682:5:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "19682:18:75"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "19662:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19662:39:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19662:39:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "19609:1:75"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "19612:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "19606:2:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19606:13:75"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "19620:19:75",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "19622:15:75",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "19631:1:75"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19634:2:75",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "19627:3:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19627:10:75"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "19622:1:75"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "19602:3:75",
                    "statements": []
                  },
                  "src": "19598:113:75"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19737:31:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "19750:3:75"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "19755:6:75"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "19746:3:75"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "19746:16:75"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19764:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "19739:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19739:27:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19739:27:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "19726:1:75"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "19729:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "19723:2:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19723:13:75"
                  },
                  "nodeType": "YulIf",
                  "src": "19720:48:75"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "19547:3:75",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "19552:3:75",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "19557:6:75",
                "type": ""
              }
            ],
            "src": "19516:258:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20168:397:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20185:3:75"
                      },
                      {
                        "hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20190:25:75",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20178:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20178:38:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20178:38:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20225:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "20245:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "20239:5:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20239:13:75"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "20229:6:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "20287:6:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20295:4:75",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20283:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20283:17:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "20306:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20311:2:75",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20302:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20302:12:75"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20316:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "20261:21:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20261:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20261:62:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20332:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20346:3:75"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20351:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20342:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20342:16:75"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "20336:2:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "20378:2:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20382:2:75",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20374:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20374:11:75"
                      },
                      {
                        "hexValue": "206973206d697373696e6720726f6c6520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20387:19:75",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20367:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20367:40:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20367:40:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20416:29:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "20438:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "20432:5:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20432:13:75"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "20420:8:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "20480:6:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20488:4:75",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20476:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20476:17:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "20499:2:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20503:2:75",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20495:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20495:11:75"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "20508:8:75"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "20454:21:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20454:63:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20454:63:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20526:33:75",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "20541:2:75"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "20545:8:75"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20537:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20537:17:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20556:2:75",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20533:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20533:26:75"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "20526:3:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "20136:3:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "20141:6:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20149:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "20160:3:75",
                "type": ""
              }
            ],
            "src": "19779:786:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20691:262:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20708:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20719:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20701:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20701:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20701:21:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20731:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "20751:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "20745:5:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20745:13:75"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "20735:6:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20778:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20789:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20774:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20774:18:75"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20794:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20767:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20767:34:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20767:34:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "20836:6:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20844:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20832:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20832:15:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20853:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20864:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20849:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20849:18:75"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20869:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "20810:21:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20810:66:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20810:66:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20885:62:75",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20901:9:75"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "20920:6:75"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20928:2:75",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20916:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20916:15:75"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20937:2:75",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "20933:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20933:7:75"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "20912:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20912:29:75"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20897:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20897:45:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20944:2:75",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20893:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20893:54:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20885:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20660:9:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20671:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20682:4:75",
                "type": ""
              }
            ],
            "src": "20570:383:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21132:174:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21149:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21160:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21142:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21142:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21142:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21183:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21194:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21179:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21179:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21199:2:75",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21172:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21172:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21172:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21222:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21233:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21218:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21218:18:75"
                      },
                      {
                        "hexValue": "696e76616c6964207369676e6174757265206c656e677468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21238:26:75",
                        "type": "",
                        "value": "invalid signature length"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21211:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21211:54:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21211:54:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21274:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21286:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21297:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21282:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21282:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21274:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21109:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21123:4:75",
                "type": ""
              }
            ],
            "src": "20958:348:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21343:95:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21360:1:75",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21367:3:75",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21372:10:75",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "21363:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21363:20:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21353:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21353:31:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21353:31:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21400:1:75",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21403:4:75",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21393:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21393:15:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21393:15:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21424:1:75",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21427:4:75",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "21417:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21417:15:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21417:15:75"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "21311:127:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21475:95:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21492:1:75",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21499:3:75",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21504:10:75",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "21495:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21495:20:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21485:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21485:31:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21485:31:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21532:1:75",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21535:4:75",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21525:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21525:15:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21525:15:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21556:1:75",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21559:4:75",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "21549:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21549:15:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21549:15:75"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "21443:127:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21622:89:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21649:22:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "21651:16:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21651:18:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21651:18:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "21642:5:75"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "21635:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21635:13:75"
                  },
                  "nodeType": "YulIf",
                  "src": "21632:39:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21680:25:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "21691:5:75"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21702:1:75",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "21698:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21698:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21687:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21687:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "21680:3:75"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21604:5:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "21614:3:75",
                "type": ""
              }
            ],
            "src": "21575:136:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21890:182:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21907:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21918:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21900:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21900:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21900:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21941:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21952:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21937:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21937:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21957:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21930:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21930:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21930:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21980:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21991:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21976:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21976:18:75"
                      },
                      {
                        "hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21996:34:75",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21969:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21969:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21969:62:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22040:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22052:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22063:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22048:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22048:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22040:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21867:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21881:4:75",
                "type": ""
              }
            ],
            "src": "21716:356:75"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_struct$_Order_$14322_calldata_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if slt(sub(dataEnd, _1), 480) { revert(0, 0) }\n        value0 := _1\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_struct$_Fee_$14290_memory_ptr__to_t_struct$_Fee_$14290_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), and(mload(add(value0, 0x80)), sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_ITransferProxy_$14219__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_enum$_BuyingAssetType_$14229(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 2)) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_BuyingAssetType(value, pos)\n    {\n        if iszero(lt(value, 2))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, shl(248, value))\n    }\n    function abi_encode_tuple_packed_t_address_t_address_t_address_t_enum$_BuyingAssetType_$14229_t_uint256_t_uint256_t_bool_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint8_t_uint256_t_uint256_t_bool_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        mstore(add(pos, 40), and(shl(96, value2), _1))\n        abi_encode_enum_BuyingAssetType(value3, add(pos, 60))\n        mstore(add(pos, 61), value4)\n        mstore(add(pos, 93), value5)\n        mstore(add(pos, 125), shl(248, iszero(iszero(value6))))\n        mstore(add(pos, 126), value7)\n        mstore(add(pos, 158), value8)\n        mstore(add(pos, 190), value9)\n        end := add(pos, 222)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint16(x, y) -> sum\n    {\n        let _1 := 0xffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if gt(x_1, sub(_1, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_51ad396264f84709ad4269026509e9a624e8487203b518fbe12cbf6e3bd45edc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Only owner can all this function\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b330f54cb3b506e1ff7dd011cf0af03f672b9aa361bc07d55d3a09f4938be41c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Signer value is same\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_address_t_address_t_enum$_BuyingAssetType_$14229_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value7, value6, value5, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        mstore(add(pos, 40), and(shl(96, value2), _1))\n        abi_encode_enum_BuyingAssetType(value3, add(pos, 60))\n        mstore(add(pos, 61), value4)\n        mstore(add(pos, 93), value5)\n        mstore(add(pos, 125), value6)\n        mstore(add(pos, 157), value7)\n        end := add(pos, 189)\n    }\n    function abi_encode_tuple_t_stringliteral_0232994d300f1855432717262d46f657ff60402553233f5cab772e9cc006f548__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Seller cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1fb710e407d3acf7c76b5184aac53e479a04425b545529056daaa017a41197de__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Buyer cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e780f352d098f9a16b0fb7523366752ff32ed4302ddaad054445e5458bac72e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"NFT Address cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f5a9b8cb24de78b4cc0610fef5a7806abc7253e6b7442e76e50ba2862e966585__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Auction is not started yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f6411240398b6c1614d1df84c9aa8aea8046a0212eeb55a9a59b7cc84c1b0939__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Auction is ended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_530ab7dc56782b1c8db2179ce8929e7f68bd8990eea5c3b3c18ec0e36f36b331__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Unit price cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_935879e226d4bdb9bd7e7e780091d0a26cb918d532ef3ba1f3e9947deddfc286__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"TokenId cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8beea76deddeff1012d90e1e8da369393f885b0575eb094a33da9912cc4bbb8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Amount cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_662e76c4c7be31c911ead8c8dc124c282d7230289373f196ee23a95cc629918b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Quantity cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ba600277e48edf73e4c4cfe3b5ef7ab485c317e94395cf181dcd19efbd5f916e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Only order buyer can call this m\")\n        mstore(add(headStart, 96), \"ethod\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1720ac4e2a48e81b9bc85ccf3361a2938d26d92bf9e3070ee081eb99ab7f6caa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Paid invalid amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_b736b3a4b26bc43c4b574dc3beb4a35e025f1fea386508885f1007a1f18d9143__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Caller is not order seller\")\n        tail := add(headStart, 96)\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function abi_encode_tuple_t_stringliteral_78a9165f89a9f51c6398b08106809c65c4102ad9fd7f52adf2a2cf61e69e86d0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid order details\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0c99eb1f384c1a02d19b903debb028bbe28a4ade3502226eaaa61a9ea9668aab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Order already complted or cancel\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e1b6679d28c127b63a0e7639ff84499fdd30665ebfc1a5554ab3f05786b087d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"SellerFeePermille value is same\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_45ab2a59a0e95a2d07251692a1073e091187085eb92f80257f932439a93f4b62__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"BuyerFeePermille value is same\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6e68da84f21b80e71d3487e97fb1fff1029163585f2eaa681b648b6d33c0e2fa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid bid details\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7781e8c9acdd69da49f1e6194130023eb30523cfd8e98d7d3dc6a8996b296997__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Only order seller can call this \")\n        mstore(add(headStart, 96), \"method\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_818e0918d5f8f3c22488584ebd17e1866e4077457a7a7fbab6c59de50fbc5a43__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Only signer can all this functio\")\n        mstore(add(headStart, 96), \"n\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_contract$_IERC721_$10142_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_contract$_IERC1155_$8268_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), 192)\n        mstore(add(headStart, 192), 0)\n        tail := add(headStart, 224)\n    }\n    function abi_encode_tuple_t_stringliteral_ee7795d41bcacc139a12c4d8a7d29e2e70d3d410cf6ed4eda0b4229156b7a294__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Order closed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d6b39d85b143f9803d307392c43cc4279a0ab934faeb0976571dd4e99e023a0c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Order Quantity is invalid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$9074_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 75,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "230:17316:74:-:0;;;3926:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4049:16;:28;;-1:-1:-1;;;;;4129:30:74;;;;;-1:-1:-1;;;;;;4049:28:74;4088:30;;;4049:28;4088:30;-1:-1:-1;;4088:30:74;;;4049:28;;;;4088:30;;;;;;;;4129;;;;;;;:13;4170:18;;-1:-1:-1;;;;;;4170:18:74;4178:10;4170:18;;;230:17316;;14:160:75;91:13;;144:4;133:16;;123:27;;113:55;;164:1;161;154:12;113:55;14:160;;;:::o;179:476::-;287:6;295;303;356:2;344:9;335:7;331:23;327:32;324:52;;;372:1;369;362:12;324:52;395:38;423:9;395:38;:::i;:::-;385:48;;452:47;495:2;484:9;480:18;452:47;:::i;:::-;542:2;527:18;;521:25;442:57;;-1:-1:-1;;;;;;575:31:75;;565:42;;555:70;;621:1;618;611:12;555:70;644:5;634:15;;;179:476;;;;;:::o;:::-;230:17316:74;;;;;;",
  "deployedSourceMap": "230:17316:74:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:202:30;;;;;;:::i;:::-;;:::i;:::-;;;470:14:75;;463:22;445:41;;433:2;418:18;2606:202:30;;;;;;;;14822:613:74;;;;;;:::i;:::-;;:::i;:::-;;;1034:25:75;;;1022:2;1007:18;14822:613:74;888:177:75;1161:21:74;;;;;-1:-1:-1;;;;;1161:21:74;;;;;;-1:-1:-1;;;;;1234:32:75;;;1216:51;;1204:2;1189:18;1161:21:74;1070:203:75;4378:129:30;;;;;;:::i;:::-;4452:7;4478:12;;;;;;;;;;:22;;;;4378:129;4803:145;;;;;;:::i;:::-;;:::i;:::-;;5912:214;;;;;;:::i;:::-;;:::i;11221:908:74:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;2128:13:75;;2110:32;;2198:4;2186:17;;;2180:24;2158:20;;;2151:54;2261:4;2249:17;;;2243:24;2221:20;;;2214:54;2324:4;2312:17;;;2306:24;2284:20;;;2277:54;2391:4;2379:17;;;2373:24;-1:-1:-1;;;;;2369:50:75;2347:20;;;2340:80;;;;2097:3;2082:19;;1919:507;5941:109:74;6025:17;;;;;;;5941:109;;;2603:4:75;2591:17;;;2573:36;;2561:2;2546:18;5941:109:74;2431:184:75;6720:146:74;;;;;;:::i;:::-;;:::i;1068:35::-;;;;;;;;-1:-1:-1;;;;;1068:35:74;;;15549:519;;;;;;:::i;:::-;;:::i;10126:633::-;;;;;;:::i;:::-;;:::i;1132:20::-;;;;;-1:-1:-1;;;;;1132:20:74;;;6957:218;;;;;;:::i;:::-;;:::i;2895:145:30:-;;;;;;:::i;:::-;;:::i;7338:878:74:-;;;;;;:::i;:::-;;:::i;5748:107::-;5831:16;;;;5748:107;;2027:49:30;;2072:4;2027:49;;6438:220:74;;;;;;:::i;:::-;;:::i;6137:213::-;;;;;;:::i;:::-;;:::i;5228:147:30:-;;;;;;:::i;:::-;;:::i;10767:446:74:-;;;;;;:::i;:::-;;:::i;13859:812::-;;;;;;:::i;:::-;;:::i;2606:202:30:-;2691:4;-1:-1:-1;;;;;;2714:47:30;;-1:-1:-1;;;2714:47:30;;:87;;-1:-1:-1;;;;;;;;;;937:40:60;;;2765:36:30;2707:94;2606:202;-1:-1:-1;;2606:202:30:o;14822:613:74:-;14920:7;15032:12;;;;:5;:12;:::i;:::-;15067:18;;;;;;;;:::i;:::-;15108:16;;;;;;;;:::i;:::-;15147:13;;;;;;;;:::i;:::-;15183:15;;;;15221:22;;;;15266:17;;;;;;;;:::i;:::-;15306:5;:15;;;15344:5;:13;;;15380:5;:13;;;14993:419;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14965:462;;;;;;14945:482;;14822:613;;;:::o;4803:145:30:-;4452:7;4478:12;;;;;;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;4916:25:::1;4927:4;4933:7;4916:10;:25::i;:::-;4803:145:::0;;;:::o;5912:214::-;-1:-1:-1;;;;;6007:23:30;;719:10:57;6007:23:30;5999:83;;;;-1:-1:-1;;;5999:83:30;;5475:2:75;5999:83:30;;;5457:21:75;5514:2;5494:18;;;5487:30;5553:34;5533:18;;;5526:62;-1:-1:-1;;;5604:18:75;;;5597:45;5659:19;;5999:83:30;;;;;;;;;6093:26;6105:4;6111:7;6093:11;:26::i;:::-;5912:214;;:::o;11221:908:74:-;11281:10;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11281:10:74;11469:16;;11304:20;;;;;;;;;;11462:23;;11469:16;;11462:4;:23;:::i;:::-;11437:49;;11438:19;:12;;;;11453:4;11438:19;:::i;:::-;11437:49;;;;:::i;:::-;11421:65;-1:-1:-1;11497:16:74;11516:20;11421:65;11516:12;;;;:20;:::i;:::-;11576:17;;11497:39;;-1:-1:-1;11547:17:74;;11597:4;;11568:25;;11576:17;;;;;11568:5;:25;:::i;:::-;11567:34;;;;:::i;:::-;11547:54;-1:-1:-1;11626:20:74;11547:54;11626:8;:20;:::i;:::-;11612:34;-1:-1:-1;11676:17:74;;;;;;;;:::i;:::-;11675:18;:141;;;;-1:-1:-1;11729:22:74;11712:13;;;;;;;;:::i;:::-;:39;;;;;;;;:::i;:::-;;11711:104;;;-1:-1:-1;11791:23:74;11774:13;;;;;;;;:::i;:::-;:40;;;;;;;;:::i;:::-;;11711:104;11657:336;;;11881:16;;;;;;;;:::i;:::-;11872:109;;-1:-1:-1;;;11872:109:74;;11929:13;;;;11872:109;;;6882:25:75;6923:18;;;6916:34;;;-1:-1:-1;;;;;11872:38:74;;;;;;;6855:18:75;;11872:109:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11843:138;;-1:-1:-1;11843:138:74;-1:-1:-1;11657:336:74;12035:9;12014:18;12022:10;12014:5;:18;:::i;:::-;:30;;;;:::i;:::-;12062:59;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12062:59:74;;;;-1:-1:-1;;;;;;;12062:59:74;;;;;;;;11221:908;-1:-1:-1;;11221:908:74:o;6720:146::-;4255:5;;-1:-1:-1;;;;;4255:5:74;4243:10;:17;4235:61;;;;-1:-1:-1;;;4235:61:74;;;;;;;:::i;:::-;6794:6:::1;::::0;-1:-1:-1;;;;;6794:15:74;;::::1;:6:::0;::::1;:15:::0;6786:47:::1;;;::::0;-1:-1:-1;;;6786:47:74;;7841:2:75;6786:47:74::1;::::0;::::1;7823:21:75::0;7880:2;7860:18;;;7853:30;-1:-1:-1;;;7899:18:75;;;7892:50;7959:18;;6786:47:74::1;7639:344:75::0;6786:47:74::1;6844:6;:14:::0;;-1:-1:-1;;;;;;6844:14:74::1;-1:-1:-1::0;;;;;6844:14:74;;;::::1;::::0;;;::::1;::::0;;6720:146::o;15549:519::-;15646:7;15758:11;;;;;;;;:::i;:::-;15792:18;;;;;;;;:::i;:::-;15833:16;;;;;;;;:::i;:::-;15872:13;;;;;;;;:::i;:::-;15908:5;:15;;;15946:5;:13;;;15982:5;:12;;;16017:5;:9;;;15719:326;;;;;;;;;;;;;;;:::i;10126:633::-;10231:4;10206:5;10231:4;4563:12;;;;10206:5;4563:12;:::i;:::-;-1:-1:-1;;;;;4563:26:74;;4555:61;;;;-1:-1:-1;;;4555:61:74;;8983:2:75;4555:61:74;;;8965:21:75;9022:2;9002:18;;;8995:30;-1:-1:-1;;;9041:18:75;;;9034:52;9103:18;;4555:61:74;8781:346:75;4555:61:74;4658:1;4635:11;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4635:25:74;;4627:59;;;;-1:-1:-1;;;4627:59:74;;9334:2:75;4627:59:74;;;9316:21:75;9373:2;9353:18;;;9346:30;-1:-1:-1;;;9392:18:75;;;9385:51;9453:18;;4627:59:74;9132:345:75;4627:59:74;4733:1;4705:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4705:30:74;;4697:70;;;;-1:-1:-1;;;4697:70:74;;9684:2:75;4697:70:74;;;9666:21:75;9723:2;9703:18;;;9696:30;9762:29;9742:18;;;9735:57;9809:18;;4697:70:74;9482:351:75;4697:70:74;4819:15;4800:5;:15;;;:34;;4778:110;;;;-1:-1:-1;;;4778:110:74;;10040:2:75;4778:110:74;;;10022:21:75;10079:2;10059:18;;;10052:30;10118:28;10098:18;;;10091:56;10164:18;;4778:110:74;9838:350:75;4778:110:74;4925:5;:13;;;4907:15;:31;4899:60;;;;-1:-1:-1;;;4899:60:74;;10395:2:75;4899:60:74;;;10377:21:75;10434:2;10414:18;;;10407:30;-1:-1:-1;;;10453:18:75;;;10446:46;10509:18;;4899:60:74;10193:340:75;4899:60:74;4996:1;4978:5;:15;;;:19;4970:57;;;;-1:-1:-1;;;4970:57:74;;10740:2:75;4970:57:74;;;10722:21:75;10779:2;10759:18;;;10752:30;-1:-1:-1;;;10798:18:75;;;10791:55;10863:18;;4970:57:74;10538:349:75;4970:57:74;5062:1;5046:5;:13;;;:17;5038:52;;;;-1:-1:-1;;;5038:52:74;;11094:2:75;5038:52:74;;;11076:21:75;11133:2;11113:18;;;11106:30;-1:-1:-1;;;11152:18:75;;;11145:52;11214:18;;5038:52:74;10892:346:75;5038:52:74;5124:1;5109:5;:12;;;:16;5101:50;;;;-1:-1:-1;;;5101:50:74;;11445:2:75;5101:50:74;;;11427:21:75;11484:2;11464:18;;;11457:30;-1:-1:-1;;;11503:18:75;;;11496:51;11564:18;;5101:50:74;11243:345:75;5101:50:74;5182:1;5170:5;:9;;;:13;5162:49;;;;-1:-1:-1;;;5162:49:74;;11795:2:75;5162:49:74;;;11777:21:75;11834:2;11814:18;;;11807:30;-1:-1:-1;;;11853:18:75;;;11846:53;11916:18;;5162:49:74;11593:347:75;5162:49:74;10273:11:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;10261:23:74::1;:10;-1:-1:-1::0;;;;;10261:23:74::1;;10253:72;;;::::0;-1:-1:-1;;;10253:72:74;;12147:2:75;10253:72:74::1;::::0;::::1;12129:21:75::0;12186:2;12166:18;;;12159:30;12225:34;12205:18;;;12198:62;-1:-1:-1;;;12276:18:75;;;12269:35;12321:19;;10253:72:74::1;11945:401:75::0;10253:72:74::1;10336:14;10353;10361:5;10353:7;:14::i;:::-;10336:31:::0;-1:-1:-1;10414:27:74::1;10432:9;::::0;::::1;;10414:15;::::0;::::1;;:27;:::i;:::-;10401:3;:9;;;:40;;10378:113;;;::::0;-1:-1:-1;;;10378:113:74;;12553:2:75;10378:113:74::1;::::0;::::1;12535:21:75::0;12592:2;12572:18;;;12565:30;-1:-1:-1;;;12611:18:75;;;12604:49;12670:18;;10378:113:74::1;12351:343:75::0;10378:113:74::1;10506:38;10538:5;10506:31;:38::i;:::-;10502:227;;;10561:49;10572:5:::0;10579:3;10584:11:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;10597:12;;::::0;::::1;:5:::0;:12:::1;:::i;:::-;10561:10;:49::i;:::-;10679:11;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;10630:61:74::1;10653:13;::::0;::::1;;10639:12;;::::0;::::1;10653:5:::0;10639:12:::1;:::i;:::-;-1:-1:-1::0;;;;;10630:61:74::1;;10668:5;:9;;;10630:61;;;;1034:25:75::0;;1022:2;1007:18;;888:177;10630:61:74::1;;;;;;;;10713:4;10706:11;;;;;10502:227;10746:5;10739:12;;;5222:1;10126:633:::0;;;;:::o;6957:218::-;7020:4;7089:16;7057:21;;;;:10;:21;;;;;:28;;;;;:48;;;;;;;;:::i;:::-;;:110;;;-1:-1:-1;7154:13:74;7122:21;;;;:10;:21;;;;;:28;;;;;:45;;;;;;;;:::i;:::-;;7037:130;6957:218;-1:-1:-1;;6957:218:74:o;2895:145:30:-;2981:4;3004:12;;;;;;;;;;;-1:-1:-1;;;;;3004:29:30;;;;;;;;;;;;;;;2895:145::o;7338:878:74:-;7397:4;7414:23;7440:25;7459:5;7440:18;:25::i;:::-;7414:51;;7476:30;7509:25;7518:15;7509:8;:25::i;:::-;7476:58;-1:-1:-1;7571:10:74;7555:12;;;;:5;:12;:::i;:::-;-1:-1:-1;;;;;7555:26:74;;7547:65;;;;-1:-1:-1;;;7547:65:74;;13083:2:75;7547:65:74;;;13065:21:75;13122:2;13102:18;;;13095:30;13161:28;13141:18;;;13134:56;13207:18;;7547:65:74;12881:350:75;7547:65:74;7678:126;7714:22;7759:26;;;;:5;:26;:::i;:::-;7678:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7678:13:74;;-1:-1:-1;;;7678:126:74:i;:::-;-1:-1:-1;;;;;7645:159:74;:12;;;;:5;:12;:::i;:::-;-1:-1:-1;;;;;7645:159:74;;7623:230;;;;-1:-1:-1;;;7623:230:74;;13964:2:75;7623:230:74;;;13946:21:75;14003:2;13983:18;;;13976:30;-1:-1:-1;;;14022:18:75;;;14015:51;14083:18;;7623:230:74;13762:345:75;7623:230:74;7887:37;7901:22;7887:13;:37::i;:::-;7886:38;7864:120;;;;-1:-1:-1;;;7864:120:74;;14314:2:75;7864:120:74;;;14296:21:75;;;14333:18;;;14326:30;14392:34;14372:18;;;14365:62;14444:18;;7864:120:74;14112:356:75;7864:120:74;8115:1;8068:34;;;:10;:34;;;;;:48;;;8127:41;;;;:57;;-1:-1:-1;;8127:57:74;8171:13;8127:57;;;:41;8204:4;-1:-1:-1;;;7338:878:74:o;6438:220::-;4255:5;;-1:-1:-1;;;;;4255:5:74;4243:10;:17;4235:61;;;;-1:-1:-1;;;4235:61:74;;;;;;;:::i;:::-;6531:17:::1;::::0;:37:::1;::::0;;::::1;:17;::::0;;::::1;;:37:::0;6523:80:::1;;;::::0;-1:-1:-1;;;6523:80:74;;14675:2:75;6523:80:74::1;::::0;::::1;14657:21:75::0;14714:2;14694:18;;;14687:30;14753:33;14733:18;;;14726:61;14804:18;;6523:80:74::1;14473:355:75::0;6523:80:74::1;6614:17;:36:::0;;::::1;::::0;;::::1;;;-1:-1:-1::0;;6614:36:74;;::::1;::::0;;;::::1;::::0;;6438:220::o;6137:213::-;4255:5;;-1:-1:-1;;;;;4255:5:74;4243:10;:17;4235:61;;;;-1:-1:-1;;;4235:61:74;;;;;;;:::i;:::-;6228:16:::1;::::0;:35:::1;::::0;;::::1;:16:::0;::::1;:35:::0;6220:77:::1;;;::::0;-1:-1:-1;;;6220:77:74;;15035:2:75;6220:77:74::1;::::0;::::1;15017:21:75::0;15074:2;15054:18;;;15047:30;15113:32;15093:18;;;15086:60;15163:18;;6220:77:74::1;14833:354:75::0;6220:77:74::1;6308:16;:34:::0;;-1:-1:-1;;6308:34:74::1;;::::0;;;::::1;::::0;;;::::1;::::0;;6137:213::o;5228:147:30:-;4452:7;4478:12;;;;;;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;5342:26:::1;5354:4;5360:7;5342:11;:26::i;10767:446:74:-:0;10906:4;10849:5;10906:4;4563:12;;;;10849:5;4563:12;:::i;:::-;-1:-1:-1;;;;;4563:26:74;;4555:61;;;;-1:-1:-1;;;4555:61:74;;8983:2:75;4555:61:74;;;8965:21:75;9022:2;9002:18;;;8995:30;-1:-1:-1;;;9041:18:75;;;9034:52;9103:18;;4555:61:74;8781:346:75;4555:61:74;4658:1;4635:11;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4635:25:74;;4627:59;;;;-1:-1:-1;;;4627:59:74;;9334:2:75;4627:59:74;;;9316:21:75;9373:2;9353:18;;;9346:30;-1:-1:-1;;;9392:18:75;;;9385:51;9453:18;;4627:59:74;9132:345:75;4627:59:74;4733:1;4705:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4705:30:74;;4697:70;;;;-1:-1:-1;;;4697:70:74;;9684:2:75;4697:70:74;;;9666:21:75;9723:2;9703:18;;;9696:30;9762:29;9742:18;;;9735:57;9809:18;;4697:70:74;9482:351:75;4697:70:74;4819:15;4800:5;:15;;;:34;;4778:110;;;;-1:-1:-1;;;4778:110:74;;10040:2:75;4778:110:74;;;10022:21:75;10079:2;10059:18;;;10052:30;10118:28;10098:18;;;10091:56;10164:18;;4778:110:74;9838:350:75;4778:110:74;4925:5;:13;;;4907:15;:31;4899:60;;;;-1:-1:-1;;;4899:60:74;;10395:2:75;4899:60:74;;;10377:21:75;10434:2;10414:18;;;10407:30;-1:-1:-1;;;10453:18:75;;;10446:46;10509:18;;4899:60:74;10193:340:75;4899:60:74;4996:1;4978:5;:15;;;:19;4970:57;;;;-1:-1:-1;;;4970:57:74;;10740:2:75;4970:57:74;;;10722:21:75;10779:2;10759:18;;;10752:30;-1:-1:-1;;;10798:18:75;;;10791:55;10863:18;;4970:57:74;10538:349:75;4970:57:74;5062:1;5046:5;:13;;;:17;5038:52;;;;-1:-1:-1;;;5038:52:74;;11094:2:75;5038:52:74;;;11076:21:75;11133:2;11113:18;;;11106:30;-1:-1:-1;;;11152:18:75;;;11145:52;11214:18;;5038:52:74;10892:346:75;5038:52:74;5124:1;5109:5;:12;;;:16;5101:50;;;;-1:-1:-1;;;5101:50:74;;11445:2:75;5101:50:74;;;11427:21:75;11484:2;11464:18;;;11457:30;-1:-1:-1;;;11503:18:75;;;11496:51;11564:18;;5101:50:74;11243:345:75;5101:50:74;5182:1;5170:5;:9;;;:13;5162:49;;;;-1:-1:-1;;;5162:49:74;;11795:2:75;5162:49:74;;;11777:21:75;11834:2;11814:18;;;11807:30;-1:-1:-1;;;11853:18:75;;;11846:53;11916:18;;5162:49:74;11593:347:75;5162:49:74;10881:5:::1;5350:22;5375:24;5393:5;5375:17;:24::i;:::-;5350:49;;5410:29;5442:24;5451:14;5442:8;:24::i;:::-;5410:56:::0;-1:-1:-1;5533:63:74::1;5410:56:::0;5570:25:::1;;::::0;::::1;:5:::0;:25:::1;:::i;5533:63::-;-1:-1:-1::0;;;;;5501:95:74::1;:11;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;5501:95:74::1;;5479:164;;;::::0;-1:-1:-1;;;5479:164:74;;15394:2:75;5479:164:74::1;::::0;::::1;15376:21:75::0;15433:2;15413:18;;;15406:30;-1:-1:-1;;;15452:18:75;;;15445:49;15511:18;;5479:164:74::1;15192:343:75::0;5479:164:74::1;10948:12:::2;;::::0;::::2;:5:::0;:12:::2;:::i;:::-;-1:-1:-1::0;;;;;10936:24:74::2;:10;-1:-1:-1::0;;;;;10936:24:74::2;;10928:74;;;::::0;-1:-1:-1;;;10928:74:74;;15742:2:75;10928:74:74::2;::::0;::::2;15724:21:75::0;15781:2;15761:18;;;15754:30;15820:34;15800:18;;;15793:62;-1:-1:-1;;;15871:18:75;;;15864:36;15917:19;;10928:74:74::2;15540:402:75::0;10928:74:74::2;11013:14;11030;11038:5;11030:7;:14::i;:::-;11013:31:::0;-1:-1:-1;11055:49:74::2;11066:5:::0;11013:31;11078:11:::2;::::0;;;::::2;::::0;::::2;;:::i;:::-;11091:12;;::::0;::::2;:5:::0;:12:::2;:::i;11055:49::-;11171:11;::::0;;;::::2;::::0;::::2;;:::i;:::-;-1:-1:-1::0;;;;;11120:63:74::2;11145:13;::::0;::::2;;11131:12;;::::0;::::2;11145:5:::0;11131:12:::2;:::i;:::-;-1:-1:-1::0;;;;;11120:63:74::2;;11160:5;:9;;;11120:63;;;;1034:25:75::0;;1022:2;1007:18;;888:177;11120:63:74::2;;;;;;;;-1:-1:-1::0;11201:4:74::2;::::0;10767:446;-1:-1:-1;;;;;;10767:446:74:o;13859:812::-;4376:6;;13959:4;;-1:-1:-1;;;;;4376:6:74;4364:10;:18;4356:63;;;;-1:-1:-1;;;4356:63:74;;16149:2:75;4356:63:74;;;16131:21:75;16188:2;16168:18;;;16161:30;16227:34;16207:18;;;16200:62;-1:-1:-1;;;16278:18:75;;;16271:31;16319:19;;4356:63:74;15947:397:75;4356:63:74;14002:22:::1;13985:13;::::0;;;::::1;::::0;::::1;;:::i;:::-;:39;;;;;;;;:::i;:::-;::::0;13981:260:::1;;14041:13;::::0;;;::::1;-1:-1:-1::0;;;;;14041:13:74::1;:36;14104:16;::::0;;;::::1;::::0;::::1;;:::i;:::-;14140:12;;::::0;::::1;:5:::0;:12:::1;:::i;:::-;14171:11;::::0;;;::::1;::::0;::::1;;:::i;:::-;14201:5;:13;;;14041:188;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;13981:260;14272:23;14255:13;::::0;;;::::1;::::0;::::1;;:::i;:::-;:40;;;;;;;;:::i;:::-;::::0;14251:312:::1;;14312:13;::::0;;;::::1;-1:-1:-1::0;;;;;14312:13:74::1;:37;14377:16;::::0;;;::::1;::::0;::::1;;:::i;:::-;14413:12;;::::0;::::1;:5:::0;:12:::1;:::i;:::-;14444:11;::::0;;;::::1;::::0;::::1;;:::i;:::-;14474:5;:13;;;14506:5;:9;;;14312:239;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;14251:312;14629:11;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;14580:61:74::1;14603:13;::::0;::::1;;14589:12;;::::0;::::1;14603:5:::0;14589:12:::1;:::i;:::-;-1:-1:-1::0;;;;;14580:61:74::1;;14618:5;:9;;;14580:61;;;;1034:25:75::0;;1022:2;1007:18;;888:177;14580:61:74::1;;;;;;;;-1:-1:-1::0;14659:4:74::1;13859:812:::0;;;:::o;3334:103:30:-;3400:30;3411:4;719:10:57;3400::30;:30::i;:::-;3334:103;:::o;7461:233::-;7544:22;7552:4;7558:7;7544;:22::i;:::-;7539:149;;7582:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7582:29:30;;;;;;;;;:36;;-1:-1:-1;;7582:36:30;7614:4;7582:36;;;7664:12;719:10:57;;640:96;7664:12:30;-1:-1:-1;;;;;7637:40:30;7655:7;-1:-1:-1;;;;;7637:40:30;7649:4;7637:40;;;;;;;;;;7461:233;;:::o;7865:234::-;7948:22;7956:4;7962:7;7948;:22::i;:::-;7944:149;;;8018:5;7986:12;;;;;;;;;;;-1:-1:-1;;;;;7986:29:30;;;;;;;;;;:37;;-1:-1:-1;;7986:37:30;;;8042:40;719:10:57;;7986:12:30;;8042:40;;8018:5;8042:40;7865:234;;:::o;8410:1604:74:-;8510:4;8532:23;8558:25;8577:5;8558:18;:25::i;:::-;8532:51;;8594:30;8627:25;8636:15;8627:8;:25::i;:::-;8594:58;-1:-1:-1;8720:126:74;8594:58;8801:26;;;;:5;:26;:::i;8720:126::-;-1:-1:-1;;;;;8687:159:74;:12;;;;:5;:12;:::i;:::-;-1:-1:-1;;;;;8687:159:74;;8665:230;;;;-1:-1:-1;;;8665:230:74;;13964:2:75;8665:230:74;;;13946:21:75;14003:2;13983:18;;;13976:30;-1:-1:-1;;;14022:18:75;;;14015:51;14083:18;;8665:230:74;13762:345:75;8665:230:74;8915:37;8929:22;8915:13;:37::i;:::-;8914:38;8906:63;;;;-1:-1:-1;;;8906:63:74;;17759:2:75;8906:63:74;;;17741:21:75;17798:2;17778:18;;;17771:30;-1:-1:-1;;;17817:18:75;;;17810:42;17869:18;;8906:63:74;17557:336:75;8906:63:74;9094:11;9049:34;;;:10;:34;;;;;:41;;;;;:56;;;;;;;;:::i;:::-;;9045:938;;9122:34;;;;:10;:34;;;;;9169:22;;;;9122:69;;9250:11;9206:41;;;:55;;-1:-1:-1;;9206:55:74;;;;;;9045:938;;;9328:11;9283:34;;;;:10;:34;;;;;:41;;;;;:56;;;;;;;;:::i;:::-;;9279:704;;9382:34;;;;:10;:34;;;;;:44;9430:9;;;;-1:-1:-1;9382:57:74;9356:144;;;;-1:-1:-1;;;9356:144:74;;18100:2:75;9356:144:74;;;18082:21:75;18139:2;18119:18;;;18112:30;18178:27;18158:18;;;18151:55;18223:18;;9356:144:74;17898:349:75;9356:144:74;9571:25;9599:34;;;:10;:34;;;;;:62;:74;;9664:9;;;;;9599:74;:::i;:::-;9571:102;;9692:17;9713:1;9692:22;9688:205;;9817:34;;;;:10;:34;;;;;:41;;:60;;-1:-1:-1;;9817:60:74;9861:16;9817:60;;;9688:205;9907:34;;;;:10;:34;;;;;:64;9279:704;-1:-1:-1;10002:4:74;;8410:1604;-1:-1:-1;;;8410:1604:74:o;12311:1404::-;12492:22;12475:13;;;;;;;;:::i;:::-;:39;;;;;;;;:::i;:::-;;12471:248;;12531:13;;;;;-1:-1:-1;;;;;12531:13:74;:36;12594:16;;;;;;;;:::i;:::-;12630:6;12655:5;12679;:13;;;12531:176;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12471:248;12750:23;12733:13;;;;;;;;:::i;:::-;:40;;;;;;;;:::i;:::-;;12729:300;;12790:13;;;;;-1:-1:-1;;;;;12790:13:74;:37;12855:16;;;;;;;;:::i;:::-;12891:6;12916:5;12940;:13;;;12972:5;:9;;;12790:227;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12729:300;13045:15;;:19;13041:229;;13081:13;;;;;-1:-1:-1;;;;;13081:13:74;:35;13142:18;;;;;;;;:::i;:::-;13204:5;;13228:15;;13081:177;;-1:-1:-1;;;;;;13081:177:74;;;;;;;;;;13180:5;;-1:-1:-1;;;;;13204:5:74;;;;13081:177;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13041:229;13301:1;13284:3;:14;;;:18;:42;;;;-1:-1:-1;13308:17:74;;;;;;;;:::i;:::-;13307:18;13284:42;13280:262;;;13343:13;;;;;-1:-1:-1;;;;;13343:13:74;:35;13404:18;;;;;;;;:::i;:::-;13442:5;13466:3;:16;;;13501:3;:14;;;13343:187;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13280:262;13552:13;;;;;-1:-1:-1;;;;;13552:13:74;:35;13609:18;;;;;;;;:::i;:::-;13643:5;13663:6;13684:3;:12;;;13552:155;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12311:1404;;;;:::o;16076:281::-;16207:127;;18970:66:75;16207:127:74;;;18958:79:75;19053:12;;;19046:28;;;16139:7:74;;19090:12:75;;16207:127:74;18728:380:75;16365:277:74;16491:7;16517:9;16528;16539:7;16550:26;16565:10;16550:14;:26::i;:::-;16596:38;;;;;;;;;;;;19340:25:75;;;19413:4;19401:17;;19381:18;;;19374:45;;;;19435:18;;;19428:34;;;19478:18;;;19471:34;;;16516:60:74;;-1:-1:-1;16516:60:74;;-1:-1:-1;16516:60:74;-1:-1:-1;16596:38:74;;19312:19:75;;16596:38:74;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16596:38:74;;-1:-1:-1;;16596:38:74;;;16365:277;-1:-1:-1;;;;;;;16365:277:74:o;3718:479:30:-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:390;;3989:28;4009:7;3989:19;:28::i;:::-;4088:38;4116:4;4123:2;4088:19;:38::i;:::-;3896:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3896:252:30;;;;;;;;;;-1:-1:-1;;;3844:336:30;;;;;;;:::i;16650:893:74:-;16756:9;16780;16804:7;16847:3;:10;16861:2;16847:16;16839:53;;;;-1:-1:-1;;;16839:53:74;;21160:2:75;16839:53:74;;;21142:21:75;21199:2;21179:18;;;21172:30;21238:26;21218:18;;;21211:54;21282:18;;16839:53:74;20958:348:75;16839:53:74;-1:-1:-1;;;17301:2:74;17292:12;;17286:19;17371:2;17362:12;;17356:19;17478:2;17469:12;;;17463:19;17286;;17460:1;17455:28;;;;;16650:893::o;2102:149:59:-;2160:13;2192:52;-1:-1:-1;;;;;2204:22:59;;311:2;1513:437;1588:13;1613:19;1645:10;1649:6;1645:1;:10;:::i;:::-;:14;;1658:1;1645:14;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1635:25:59;;1613:47;;-1:-1:-1;;;1670:6:59;1677:1;1670:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1670:15:59;;;;;;;;;-1:-1:-1;;;1695:6:59;1702:1;1695:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1695:15:59;;;;;;;;-1:-1:-1;1725:9:59;1737:10;1741:6;1737:1;:10;:::i;:::-;:14;;1750:1;1737:14;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;-1:-1:-1;;;1800:5:59;1808:3;1800:11;1791:21;;;;;;;:::i;:::-;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;1779:33:59;;;;;;;;-1:-1:-1;1836:1:59;1826:11;;;;;1760:3;;;:::i;:::-;;;1720:128;;;-1:-1:-1;1865:10:59;;1857:55;;;;-1:-1:-1;;;1857:55:59;;21918:2:75;1857:55:59;;;21900:21:75;;;21937:18;;;21930:30;21996:34;21976:18;;;21969:62;22048:18;;1857:55:59;21716:356:75;1857:55:59;1936:6;1513:437;-1:-1:-1;;;1513:437:59:o;14:286:75:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:75;;209:43;;199:71;;266:1;263;256:12;497:386;582:6;635:2;623:9;614:7;610:23;606:32;603:52;;;651:1;648;641:12;603:52;691:9;678:23;724:18;716:6;713:30;710:50;;;756:1;753;746:12;710:50;779:22;;835:3;817:16;;;813:26;810:46;;;852:1;849;842:12;1278:180;1337:6;1390:2;1378:9;1369:7;1365:23;1361:32;1358:52;;;1406:1;1403;1396:12;1358:52;-1:-1:-1;1429:23:75;;1278:180;-1:-1:-1;1278:180:75:o;1463:131::-;-1:-1:-1;;;;;1538:31:75;;1528:42;;1518:70;;1584:1;1581;1574:12;1599:315;1667:6;1675;1728:2;1716:9;1707:7;1703:23;1699:32;1696:52;;;1744:1;1741;1734:12;1696:52;1780:9;1767:23;1757:33;;1840:2;1829:9;1825:18;1812:32;1853:31;1878:5;1853:31;:::i;:::-;1903:5;1893:15;;;1599:315;;;;;:::o;2620:247::-;2679:6;2732:2;2720:9;2711:7;2707:23;2703:32;2700:52;;;2748:1;2745;2738:12;2700:52;2787:9;2774:23;2806:31;2831:5;2806:31;:::i;3104:269::-;3161:6;3214:2;3202:9;3193:7;3189:23;3185:32;3182:52;;;3230:1;3227;3220:12;3182:52;3269:9;3256:23;3319:4;3312:5;3308:16;3301:5;3298:27;3288:55;;3339:1;3336;3329:12;3378:277;3458:6;3511:2;3499:9;3490:7;3486:23;3482:32;3479:52;;;3527:1;3524;3517:12;3479:52;3566:9;3553:23;3605:1;3598:5;3595:12;3585:40;;3621:1;3618;3611:12;3660:273;3716:6;3769:2;3757:9;3748:7;3744:23;3740:32;3737:52;;;3785:1;3782;3775:12;3737:52;3824:9;3811:23;3877:5;3870:13;3863:21;3856:5;3853:32;3843:60;;3899:1;3896;3889:12;3938:127;3999:10;3994:3;3990:20;3987:1;3980:31;4030:4;4027:1;4020:15;4054:4;4051:1;4044:15;4070:253;4157:1;4150:5;4147:12;4137:143;;4202:10;4197:3;4193:20;4190:1;4183:31;4237:4;4234:1;4227:15;4265:4;4262:1;4255:15;4137:143;4305:3;4301:15;4289:28;;4070:253::o;4328:940::-;4704:3;4736:26;4732:31;4805:2;4796:6;4792:2;4788:15;4784:24;4779:3;4772:37;4860:2;4851:6;4847:2;4843:15;4839:24;4834:2;4829:3;4825:12;4818:46;4915:2;4906:6;4902:2;4898:15;4894:24;4889:2;4884:3;4880:12;4873:46;;4928:53;4977:2;4972:3;4968:12;4960:6;4928:53;:::i;:::-;-1:-1:-1;5006:2:75;4997:12;;4990:28;;;;5043:2;5034:12;;5027:28;;;;5102:14;;5095:22;5090:3;5086:32;5080:3;5071:13;;5064:55;5144:3;5135:13;;5128:29;5182:3;5173:13;;5166:29;5220:3;5211:13;;5204:29;5258:3;5249:13;;4328:940;-1:-1:-1;;;;4328:940:75:o;5689:127::-;5750:10;5745:3;5741:20;5738:1;5731:31;5781:4;5778:1;5771:15;5805:4;5802:1;5795:15;5821:224;5860:3;5888:6;5921:2;5918:1;5914:10;5951:2;5948:1;5944:10;5982:3;5978:2;5974:12;5969:3;5966:21;5963:47;;;5990:18;;:::i;:::-;6026:13;;5821:224;-1:-1:-1;;;;5821:224:75:o;6050:168::-;6090:7;6156:1;6152;6148:6;6144:14;6141:1;6138:21;6133:1;6126:9;6119:17;6115:45;6112:71;;;6163:18;;:::i;:::-;-1:-1:-1;6203:9:75;;6050:168::o;6223:217::-;6263:1;6289;6279:132;;6333:10;6328:3;6324:20;6321:1;6314:31;6368:4;6365:1;6358:15;6396:4;6393:1;6386:15;6279:132;-1:-1:-1;6425:9:75;;6223:217::o;6445:125::-;6485:4;6513:1;6510;6507:8;6504:34;;;6518:18;;:::i;:::-;-1:-1:-1;6555:9:75;;6445:125::o;6575:128::-;6615:3;6646:1;6642:6;6639:1;6636:13;6633:39;;;6652:18;;:::i;:::-;-1:-1:-1;6688:9:75;;6575:128::o;6961:312::-;7040:6;7048;7101:2;7089:9;7080:7;7076:23;7072:32;7069:52;;;7117:1;7114;7107:12;7069:52;7149:9;7143:16;7168:31;7193:5;7168:31;:::i;:::-;7263:2;7248:18;;;;7242:25;7218:5;;7242:25;;-1:-1:-1;;;6961:312:75:o;7278:356::-;7480:2;7462:21;;;7499:18;;;7492:30;7558:34;7553:2;7538:18;;7531:62;7625:2;7610:18;;7278:356::o;7988:788::-;8314:3;8346:26;8342:31;8415:2;8406:6;8402:2;8398:15;8394:24;8389:3;8382:37;8470:2;8461:6;8457:2;8453:15;8449:24;8444:2;8439:3;8435:12;8428:46;8525:2;8516:6;8512:2;8508:15;8504:24;8499:2;8494:3;8490:12;8483:46;;8538:53;8587:2;8582:3;8578:12;8570:6;8538:53;:::i;:::-;-1:-1:-1;8616:2:75;8607:12;;8600:28;;;;8653:2;8644:12;;8637:28;;;;8690:3;8681:13;;8674:29;8728:3;8719:13;;8712:29;8766:3;8757:13;;7988:788;-1:-1:-1;;;;7988:788:75:o;13236:521::-;13313:4;13319:6;13379:11;13366:25;13473:2;13469:7;13458:8;13442:14;13438:29;13434:43;13414:18;13410:68;13400:96;;13492:1;13489;13482:12;13400:96;13519:33;;13571:20;;;-1:-1:-1;13614:18:75;13603:30;;13600:50;;;13646:1;13643;13636:12;13600:50;13679:4;13667:17;;-1:-1:-1;13710:14:75;13706:27;;;13696:38;;13693:58;;;13747:1;13744;13737:12;13693:58;13236:521;;;;;:::o;16349:473::-;-1:-1:-1;;;;;16653:15:75;;;16635:34;;16705:15;;;16700:2;16685:18;;16678:43;16757:15;;16752:2;16737:18;;16730:43;16804:2;16789:18;;16782:34;;;;16584:3;16569:19;;16349:473::o;16827:725::-;-1:-1:-1;;;;;17223:15:75;;;17205:34;;17275:15;;;17270:2;17255:18;;17248:43;17327:15;;;;17322:2;17307:18;;17300:43;17374:2;17359:18;;17352:34;;;;17417:3;17402:19;;17395:35;;;;17467:3;17185;17446:19;;17439:32;;;17148:4;17487:19;;;17480:30;17542:3;17527:19;;16827:725::o;19516:258::-;19588:1;19598:113;19612:6;19609:1;19606:13;19598:113;;;19688:11;;;19682:18;19669:11;;;19662:39;19634:2;19627:10;19598:113;;;19729:6;19726:1;19723:13;19720:48;;;19764:1;19755:6;19750:3;19746:16;19739:27;19720:48;;19516:258;;;:::o;19779:786::-;20190:25;20185:3;20178:38;20160:3;20245:6;20239:13;20261:62;20316:6;20311:2;20306:3;20302:12;20295:4;20287:6;20283:17;20261:62;:::i;:::-;-1:-1:-1;;;20382:2:75;20342:16;;;20374:11;;;20367:40;20432:13;;20454:63;20432:13;20503:2;20495:11;;20488:4;20476:17;;20454:63;:::i;:::-;20537:17;20556:2;20533:26;;19779:786;-1:-1:-1;;;;19779:786:75:o;20570:383::-;20719:2;20708:9;20701:21;20682:4;20751:6;20745:13;20794:6;20789:2;20778:9;20774:18;20767:34;20810:66;20869:6;20864:2;20853:9;20849:18;20844:2;20836:6;20832:15;20810:66;:::i;:::-;20937:2;20916:15;-1:-1:-1;;20912:29:75;20897:45;;;;20944:2;20893:54;;20570:383;-1:-1:-1;;20570:383:75:o;21311:127::-;21372:10;21367:3;21363:20;21360:1;21353:31;21403:4;21400:1;21393:15;21427:4;21424:1;21417:15;21443:127;21504:10;21499:3;21495:20;21492:1;21485:31;21535:4;21532:1;21525:15;21559:4;21556:1;21549:15;21575:136;21614:3;21642:5;21632:39;;21651:18;;:::i;:::-;-1:-1:-1;;;21687:18:75;;21575:136::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.14;\r\n\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/interfaces/IERC2981.sol\";\r\nimport \"./interface/ITransferProxy.sol\";\r\n\r\ncontract Trade is AccessControl {\r\n    enum BuyingAssetType {\r\n        ERC1155,\r\n        ERC721\r\n    }\r\n    enum Status {\r\n        NONE,\r\n        LIVE,\r\n        COMPLETED,\r\n        CANCEL\r\n    }\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n    event SellerFee(uint8 sellerFee);\r\n    event BuyerFee(uint8 buyerFee);\r\n    event BuyAsset(\r\n        address indexed assetOwner,\r\n        uint256 indexed tokenId,\r\n        uint256 quantity,\r\n        address indexed buyer\r\n    );\r\n    event ExecuteBid(\r\n        address indexed assetOwner,\r\n        uint256 indexed tokenId,\r\n        uint256 quantity,\r\n        address indexed buyer\r\n    );\r\n    // buyer platformFee\r\n    uint8 private buyerFeePermille;\r\n    //seller platformFee\r\n    uint8 private sellerFeePermille;\r\n    ITransferProxy public transferProxy;\r\n    //contract owner\r\n    address public owner;\r\n\r\n    address public signer;\r\n\r\n    //// mapping(uint256 => bool) private usedNonce;\r\n\r\n    // Create a new role identifier for the minter role\r\n    //// bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\r\n\r\n    /** Fee Struct\r\n        @param platformFee  uint256 (buyerFee + sellerFee) value which is transferred to current contract owner.\r\n        @param assetFee  uint256  assetvalue which is transferred to current seller of the NFT.\r\n        @param royaltyFee  uint256 value, transferred to Minter of the NFT.\r\n        @param price  uint256 value, the combination of buyerFee and assetValue.\r\n        @param tokenCreator address value, it's store the creator of NFT.\r\n     */\r\n    struct Fee {\r\n        uint256 platformFee;\r\n        uint256 assetFee;\r\n        uint256 royaltyFee;\r\n        uint256 price;\r\n        address tokenCreator;\r\n    }\r\n\r\n    /** Order Params\r\n        @param seller address of user,who's selling the NFT.\r\n        @param buyer address of user, who's buying the NFT.\r\n        @param erc20Address address of the token, which is used as payment token(WETH/WBNB/WMATIC...)\r\n        @param nftAddress address of NFT contract where the NFT token is created/Minted.\r\n        @param nftType an enum value, if the type is ERC721/ERC1155 the enum value is 0/1.\r\n        @param uintprice the Price Each NFT it's not including the buyerFee.\r\n        @param nftOrderQuantity the max Quantity of NFT available for order.\r\n        @param skipRoyalty skip royalty part or not.\r\n        @param startDate the start Date of the order.\r\n        @param endDate the end Date of the order.\r\n        @param tokenId \r\n        @param amount the price of NFT(assetFee + buyerFee).\r\n        @param qty number of quantity to be transfer.\r\n        @param sellerOrdersignature order hash signed by seller.\r\n        @param buyerOrdersignature order hash signed by buyer.\r\n     */\r\n    struct Order {\r\n        address seller;\r\n        address buyer;\r\n        address erc20Address;\r\n        address nftAddress;\r\n        BuyingAssetType nftType;\r\n        uint256 unitPrice;\r\n        uint256 nftOrderQuantity;\r\n        bool skipRoyalty;\r\n        uint256 startDate;\r\n        uint256 endDate;\r\n        uint256 tokenId;\r\n        uint256 amount;\r\n        uint256 qty;\r\n        bytes sellerOrdersignature;\r\n        bytes buyerOrdersignature;\r\n    }\r\n\r\n    /** OrderStatus Params\r\n        @param maxAmount is the maximum nft currently available in auction.\r\n        @param status an enum value, if the type is NONE|LIVE|COMPLETED|CANCEL the enum value is 0|1|2|3.\r\n     */\r\n    struct OrderStatus {\r\n        uint256 maxAmount;\r\n        Status status;\r\n    }\r\n\r\n    // order Limit which hold closed and live order data\r\n    mapping(bytes32 => OrderStatus) orderLimit;\r\n\r\n    constructor(\r\n        uint8 _buyerFee,\r\n        uint8 _sellerFee,\r\n        ITransferProxy _transferProxy\r\n    ) {\r\n        buyerFeePermille = _buyerFee;\r\n        sellerFeePermille = _sellerFee;\r\n        transferProxy = _transferProxy;\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier OnlyOwner(){\r\n        require(msg.sender==owner,\"Only owner can all this function\");\r\n        _;\r\n    }\r\n\r\n    modifier OnlySigner(){\r\n        require(msg.sender==signer,\"Only signer can all this function\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n        checks the order is valid\r\n     */\r\n    modifier isvalidOrder(Order calldata order) {\r\n        require(order.seller != address(0), \"Seller cannot be empty\");\r\n        require(order.buyer != address(0), \"Buyer cannot be empty\");\r\n        require(order.nftAddress != address(0), \"NFT Address cannot be empty\");\r\n        require(\r\n            order.startDate <= block.timestamp,\r\n            \"Auction is not started yet\"\r\n        );\r\n        require(block.timestamp < order.endDate, \"Auction is ended\");\r\n        require(order.unitPrice > 0, \"Unit price cannot be zero\");\r\n        require(order.tokenId > 0, \"TokenId cannot be zero\");\r\n        require(order.amount > 0, \"Amount cannot be zero\");\r\n        require(order.qty > 0, \"Quantity cannot be zero\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n        checks the order is valid\r\n     */\r\n    modifier isvalidOrderBid(Order calldata order) {\r\n        bytes32 buyerOrderhash = getOrderBuyerHash(order);\r\n        bytes32 buyerOrderhashMessage = prefixed(buyerOrderhash);\r\n\r\n        require(\r\n            order.buyer ==\r\n                recoverSigner(buyerOrderhashMessage, order.buyerOrdersignature),\r\n            \"Invalid bid details\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    /**\r\n        returns the buyerservice Fee in multiply of 1000.\r\n     */\r\n    function buyerServiceFee() external view virtual returns (uint8) {\r\n        return buyerFeePermille;\r\n    }\r\n\r\n    /**\r\n        returns the sellerservice Fee in multiply of 1000.\r\n     */\r\n    function sellerServiceFee() external view virtual returns (uint8) {\r\n        return sellerFeePermille;\r\n    }\r\n\r\n    /**\r\n        returns the buyerservice Fee in multiply of 1000.\r\n     */\r\n\r\n    function setBuyerServiceFee(uint8 _buyerFeePermille) public OnlyOwner() {\r\n        require(buyerFeePermille!=_buyerFeePermille,\"BuyerFeePermille value is same\");\r\n        buyerFeePermille=_buyerFeePermille;\r\n    }\r\n\r\n    /**\r\n        returns the sellerservice Fee in multiply of 1000.\r\n     */\r\n\r\n    function setSellerServiceFee(uint8 _sellerFeePermille) public OnlyOwner() {\r\n        require(sellerFeePermille!=_sellerFeePermille,\"SellerFeePermille value is same\");\r\n        sellerFeePermille=_sellerFeePermille;\r\n    }\r\n    /**\r\n        set the signer in address.\r\n     */\r\n\r\n    function setSigner(address _signer) public OnlyOwner() {\r\n        require(signer!=_signer,\"Signer value is same\");\r\n        signer=_signer;\r\n    }\r\n\r\n    /**\r\n        returns the whether the order is already exists or not.\r\n     */\r\n    function isOrderClosed(bytes32 orderHash) public view returns (bool) {\r\n        return\r\n            orderLimit[orderHash].status == Status.COMPLETED ||\r\n            orderLimit[orderHash].status == Status.CANCEL;\r\n    }\r\n\r\n    /**\r\n        cancel Order.\r\n        @param order ordervalues(seller, buyer,...).\r\n        this will cancel the invalid use of sign order data\r\n    */\r\n    function cancelOrder(Order calldata order) public returns (bool) {\r\n        bytes32 sellerOrderhash = getOrderSellerHash(order);\r\n        bytes32 sellerOrderhashMessage = prefixed(sellerOrderhash);\r\n\r\n        require(order.seller == msg.sender, \"Caller is not order seller\");\r\n        require(\r\n            order.seller ==\r\n                recoverSigner(\r\n                    sellerOrderhashMessage,\r\n                    order.sellerOrdersignature\r\n                ),\r\n            \"Invalid order details\"\r\n        );\r\n        require(\r\n            !isOrderClosed(sellerOrderhashMessage),\r\n            \"Order already complted or cancel\"\r\n        );\r\n\r\n        // if order is new or live then set its status and max amount\r\n        orderLimit[sellerOrderhashMessage].maxAmount = 0;\r\n        orderLimit[sellerOrderhashMessage].status = Status.CANCEL;\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n        validate and Update Order Limit.\r\n        @param order ordervalues(seller, buyer,...).\r\n        this will validate and update the signature of order for seller\r\n    */\r\n    function validateandUpdateOrderForSeller(Order calldata order)\r\n        internal \r\n        returns (bool)\r\n    {\r\n        bytes32 sellerOrderhash = getOrderSellerHash(order);\r\n        bytes32 sellerOrderhashMessage = prefixed(sellerOrderhash);\r\n\r\n        require(\r\n            order.seller ==\r\n                recoverSigner(\r\n                    sellerOrderhashMessage,\r\n                    order.sellerOrdersignature\r\n                ),\r\n            \"Invalid order details\"\r\n        );\r\n        require(!isOrderClosed(sellerOrderhashMessage), \"Order closed\");\r\n\r\n        // if order is new then set its status and max amount\r\n        if (orderLimit[sellerOrderhashMessage].status == Status.NONE) {\r\n            orderLimit[sellerOrderhashMessage].maxAmount = order.nftOrderQuantity;\r\n            orderLimit[sellerOrderhashMessage].status = Status.LIVE;\r\n        } else if (orderLimit[sellerOrderhashMessage].status == Status.LIVE) {\r\n            require(\r\n                orderLimit[sellerOrderhashMessage].maxAmount >= order.qty,\r\n                \"Order Quantity is invalid\"\r\n            );\r\n            // if order is live then update max amount\r\n            uint256 _updatedMaxAmount = orderLimit[sellerOrderhashMessage]\r\n                .maxAmount - order.qty;\r\n            if (_updatedMaxAmount == 0) {\r\n                // if order max amount will be zero then set status to completed\r\n                orderLimit[sellerOrderhashMessage].status = Status.COMPLETED;\r\n            }\r\n            orderLimit[sellerOrderhashMessage].maxAmount = _updatedMaxAmount;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n        excuting the NFT order.\r\n        @param order ordervalues(seller, buyer,...).\r\n    */\r\n    function buyAsset(Order calldata order)\r\n        external\r\n        isvalidOrder(order)\r\n        returns (bool)\r\n    {\r\n        require(msg.sender==order.buyer,\"Only order buyer can call this method\");\r\n        Fee memory fee = getFees(order);\r\n        require(\r\n            (fee.price <= order.unitPrice * order.qty),\r\n            \"Paid invalid amount\"\r\n\r\n        );\r\n        if (validateandUpdateOrderForSeller(order)) {\r\n            tradeAsset(order, fee, order.buyer, order.seller);\r\n            emit BuyAsset(order.seller, order.tokenId, order.qty, order.buyer);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function executeBid(Order calldata order)\r\n        external\r\n        isvalidOrder(order)\r\n        isvalidOrderBid(order)\r\n        returns (bool)\r\n    {\r\n        require(msg.sender==order.seller,\"Only order seller can call this method\");\r\n        Fee memory fee = getFees(order);\r\n        tradeAsset(order, fee, order.buyer, order.seller);\r\n        emit ExecuteBid(order.seller, order.tokenId, order.qty, order.buyer);\r\n        return true;\r\n    }\r\n\r\n    function getFees(Order calldata order) public view returns (Fee memory) {\r\n        address tokenCreator;\r\n        uint256 platformFee;\r\n        uint256 royaltyFee;\r\n        uint256 assetFee;\r\n        uint256 price = (order.amount * 1000) / (1000 + buyerFeePermille);\r\n        uint256 buyerFee = order.amount - price;\r\n        uint256 sellerFee = (price * sellerFeePermille) / 1000;\r\n        platformFee = buyerFee + sellerFee;\r\n        if (\r\n            !order.skipRoyalty &&\r\n            ((order.nftType == BuyingAssetType.ERC721) ||\r\n                (order.nftType == BuyingAssetType.ERC1155))\r\n        ) {\r\n            (tokenCreator, royaltyFee) = IERC2981(order.nftAddress).royaltyInfo(\r\n                order.tokenId,\r\n                price\r\n            );\r\n        }\r\n        assetFee = price - royaltyFee - sellerFee;\r\n        return Fee(platformFee, assetFee, royaltyFee, price, tokenCreator);\r\n    }\r\n\r\n    /** \r\n        transfers the NFTs and tokens...\r\n        @param order ordervalues(seller, buyer,...).\r\n        @param fee Feevalues(platformFee, assetFee,...).\r\n    */\r\n\r\n    function tradeAsset(\r\n        Order calldata order,\r\n        Fee memory fee,\r\n        address buyer,\r\n        address seller\r\n    ) internal virtual {\r\n        if (order.nftType == BuyingAssetType.ERC721) {\r\n            transferProxy.erc721safeTransferFrom(\r\n                IERC721(order.nftAddress),\r\n                seller,\r\n                buyer,\r\n                order.tokenId\r\n            );\r\n        }\r\n        if (order.nftType == BuyingAssetType.ERC1155) {\r\n            transferProxy.erc1155safeTransferFrom(\r\n                IERC1155(order.nftAddress),\r\n                seller,\r\n                buyer,\r\n                order.tokenId,\r\n                order.qty,\r\n                \"\"\r\n            );\r\n        }\r\n\r\n        if (fee.platformFee > 0) {\r\n            transferProxy.erc20safeTransferFrom(\r\n                IERC20(order.erc20Address),\r\n                buyer,\r\n                owner,\r\n                fee.platformFee\r\n            );\r\n        }\r\n        if (fee.royaltyFee > 0 && (!order.skipRoyalty)) {\r\n            transferProxy.erc20safeTransferFrom(\r\n                IERC20(order.erc20Address),\r\n                buyer,\r\n                fee.tokenCreator,\r\n                fee.royaltyFee\r\n            );\r\n        }\r\n        transferProxy.erc20safeTransferFrom(\r\n            IERC20(order.erc20Address),\r\n            buyer,\r\n            seller,\r\n            fee.assetFee\r\n        );\r\n    }\r\n\r\n    // moonpay\r\n    /** \r\n        transfers the NFTs by external wallets\r\n        @param order ordervalues(seller, buyer,...).\r\n    */\r\n    function deliverNFT(Order calldata order)\r\n        external\r\n        OnlySigner()\r\n        returns (bool)\r\n    {\r\n        if (order.nftType == BuyingAssetType.ERC721) {\r\n            transferProxy.erc721safeTransferFrom(\r\n                IERC721(order.nftAddress),\r\n                order.seller,\r\n                order.buyer,\r\n                order.tokenId\r\n            );\r\n        }\r\n        if (order.nftType == BuyingAssetType.ERC1155) {\r\n            transferProxy.erc1155safeTransferFrom(\r\n                IERC1155(order.nftAddress),\r\n                order.seller,\r\n                order.buyer,\r\n                order.tokenId,\r\n                order.qty,\r\n                \"\"\r\n            );\r\n        }\r\n\r\n        emit BuyAsset(order.seller, order.tokenId, order.qty, order.buyer);\r\n        return true;\r\n    }\r\n\r\n    // Signature validation part\r\n\r\n    /**\r\n        get Order Hash for seller.\r\n        @param order ordervalues(seller, buyer,...).\r\n    */\r\n    function getOrderSellerHash(Order calldata order)\r\n        public\r\n        pure\r\n        returns (bytes32)\r\n    {\r\n        return\r\n            keccak256(\r\n                abi.encodePacked(\r\n                    order.seller,\r\n                    order.erc20Address,\r\n                    order.nftAddress,\r\n                    order.nftType,\r\n                    order.unitPrice,\r\n                    order.nftOrderQuantity,\r\n                    order.skipRoyalty,\r\n                    order.startDate,\r\n                    order.endDate,\r\n                    order.tokenId\r\n                )\r\n            );\r\n    }\r\n\r\n    /**\r\n        get Order Hash for buyer.\r\n        @param order ordervalues(seller, buyer,...).\r\n    */\r\n    function getOrderBuyerHash(Order calldata order)\r\n        public\r\n        pure\r\n        returns (bytes32)\r\n    {\r\n        return\r\n            keccak256(\r\n                abi.encodePacked(\r\n                    order.buyer,\r\n                    order.erc20Address,\r\n                    order.nftAddress,\r\n                    order.nftType,\r\n                    order.unitPrice,\r\n                    order.tokenId,\r\n                    order.amount,\r\n                    order.qty\r\n                )\r\n            );\r\n    }\r\n\r\n    function prefixed(bytes32 _messageHash) internal pure returns (bytes32) {\r\n        return\r\n            keccak256(\r\n                abi.encodePacked(\r\n                    \"\\x19Ethereum Signed Message:\\n32\",\r\n                    _messageHash\r\n                )\r\n            );\r\n    }\r\n\r\n    function recoverSigner(bytes32 _signedMessageHash, bytes memory _signature)\r\n        internal\r\n        pure\r\n        returns (address)\r\n    {\r\n        (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature);\r\n\r\n        return ecrecover(_signedMessageHash, v, r, s);\r\n    }\r\n\r\n    function splitSignature(bytes memory sig)\r\n        internal\r\n        pure\r\n        returns (\r\n            bytes32 r,\r\n            bytes32 s,\r\n            uint8 v\r\n        )\r\n    {\r\n        require(sig.length == 65, \"invalid signature length\");\r\n\r\n        assembly {\r\n            /*\r\n            First 32 bytes stores the length of the signature\r\n\r\n            add(sig, 32) = pointer of sig + 32\r\n            effectively, skips first 32 bytes of signature\r\n\r\n            mload(p) loads next 32 bytes starting at the memory address p into memory\r\n            */\r\n\r\n            // first 32 bytes, after the length prefix\r\n            r := mload(add(sig, 32))\r\n            // second 32 bytes\r\n            s := mload(add(sig, 64))\r\n            // final byte (first byte of the next 32 bytes)\r\n            v := byte(0, mload(add(sig, 96)))\r\n        }\r\n\r\n        // implicitly return (r, s, v)\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\Yash\\Desktop\\Temporary\\Github\\marketplace\\src\\contracts\\trade.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/trade.sol",
    "exportedSymbols": {
      "AccessControl": [6178],
      "Context": [10539],
      "ERC165": [10798],
      "IAccessControl": [6251],
      "IERC1155": [8268],
      "IERC165": [10810],
      "IERC20": [9074],
      "IERC2981": [6389],
      "IERC721": [10142],
      "ILazyMint": [14142],
      "ITransferProxy": [14219],
      "Math": [11675],
      "Strings": [10774],
      "Trade": [15349]
    },
    "id": 15350,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14221,
        "literals": ["solidity", "0.8", ".14"],
        "nodeType": "PragmaDirective",
        "src": "40:23:74"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 14222,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15350,
        "sourceUnit": 6179,
        "src": "67:58:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/interfaces/IERC2981.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC2981.sol",
        "id": 14223,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15350,
        "sourceUnit": 6390,
        "src": "127:57:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/interface/ITransferProxy.sol",
        "file": "./interface/ITransferProxy.sol",
        "id": 14224,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15350,
        "sourceUnit": 14220,
        "src": "186:40:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14225,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6178,
              "src": "248:13:74"
            },
            "id": 14226,
            "nodeType": "InheritanceSpecifier",
            "src": "248:13:74"
          }
        ],
        "canonicalName": "Trade",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 15349,
        "linearizedBaseContracts": [15349, 6178, 10798, 10810, 6251, 10539],
        "name": "Trade",
        "nameLocation": "239:5:74",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Trade.BuyingAssetType",
            "id": 14229,
            "members": [
              {
                "id": 14227,
                "name": "ERC1155",
                "nameLocation": "301:7:74",
                "nodeType": "EnumValue",
                "src": "301:7:74"
              },
              {
                "id": 14228,
                "name": "ERC721",
                "nameLocation": "319:6:74",
                "nodeType": "EnumValue",
                "src": "319:6:74"
              }
            ],
            "name": "BuyingAssetType",
            "nameLocation": "274:15:74",
            "nodeType": "EnumDefinition",
            "src": "269:63:74"
          },
          {
            "canonicalName": "Trade.Status",
            "id": 14234,
            "members": [
              {
                "id": 14230,
                "name": "NONE",
                "nameLocation": "361:4:74",
                "nodeType": "EnumValue",
                "src": "361:4:74"
              },
              {
                "id": 14231,
                "name": "LIVE",
                "nameLocation": "376:4:74",
                "nodeType": "EnumValue",
                "src": "376:4:74"
              },
              {
                "id": 14232,
                "name": "COMPLETED",
                "nameLocation": "391:9:74",
                "nodeType": "EnumValue",
                "src": "391:9:74"
              },
              {
                "id": 14233,
                "name": "CANCEL",
                "nameLocation": "411:6:74",
                "nodeType": "EnumValue",
                "src": "411:6:74"
              }
            ],
            "name": "Status",
            "nameLocation": "343:6:74",
            "nodeType": "EnumDefinition",
            "src": "338:86:74"
          },
          {
            "anonymous": false,
            "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
            "id": 14240,
            "name": "OwnershipTransferred",
            "nameLocation": "438:20:74",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14236,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner",
                  "nameLocation": "485:13:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14240,
                  "src": "469:29:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "469:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14238,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "525:8:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14240,
                  "src": "509:24:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "458:82:74"
            },
            "src": "432:109:74"
          },
          {
            "anonymous": false,
            "eventSelector": "04e959c7352d9eda8a6d989e4fee25ff0bf44c87386b7259d8500343c4e9992e",
            "id": 14244,
            "name": "SellerFee",
            "nameLocation": "553:9:74",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14242,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sellerFee",
                  "nameLocation": "569:9:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14244,
                  "src": "563:15:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 14241,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "563:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "562:17:74"
            },
            "src": "547:33:74"
          },
          {
            "anonymous": false,
            "eventSelector": "1715ed10763088cbfba08a6ecfb6e5894eac73040cb1899d10d3f96ced2bd0ef",
            "id": 14248,
            "name": "BuyerFee",
            "nameLocation": "592:8:74",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14246,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyerFee",
                  "nameLocation": "607:8:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14248,
                  "src": "601:14:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 14245,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "601:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "600:16:74"
            },
            "src": "586:31:74"
          },
          {
            "anonymous": false,
            "eventSelector": "b10197cef009fd301a90b892d25451c22c3701eb18ee2df1250d31e514fff394",
            "id": 14258,
            "name": "BuyAsset",
            "nameLocation": "629:8:74",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14250,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "assetOwner",
                  "nameLocation": "664:10:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14258,
                  "src": "648:26:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14252,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "701:7:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14258,
                  "src": "685:23:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "685:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14254,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "727:8:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14258,
                  "src": "719:16:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14256,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "762:5:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14258,
                  "src": "746:21:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14255,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "746:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "637:137:74"
            },
            "src": "623:152:74"
          },
          {
            "anonymous": false,
            "eventSelector": "ec34853c156da04e4792f1c735112ae54e5ed52bac58db5014b26746f306a362",
            "id": 14268,
            "name": "ExecuteBid",
            "nameLocation": "787:10:74",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14260,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "assetOwner",
                  "nameLocation": "824:10:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14268,
                  "src": "808:26:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "808:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14262,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "861:7:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14268,
                  "src": "845:23:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14264,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "887:8:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14268,
                  "src": "879:16:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "879:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14266,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "922:5:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14268,
                  "src": "906:21:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "797:137:74"
            },
            "src": "781:154:74"
          },
          {
            "constant": false,
            "id": 14270,
            "mutability": "mutable",
            "name": "buyerFeePermille",
            "nameLocation": "981:16:74",
            "nodeType": "VariableDeclaration",
            "scope": 15349,
            "src": "967:30:74",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 14269,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "967:5:74",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 14272,
            "mutability": "mutable",
            "name": "sellerFeePermille",
            "nameLocation": "1044:17:74",
            "nodeType": "VariableDeclaration",
            "scope": 15349,
            "src": "1030:31:74",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 14271,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1030:5:74",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "6e667db3",
            "id": 14275,
            "mutability": "mutable",
            "name": "transferProxy",
            "nameLocation": "1090:13:74",
            "nodeType": "VariableDeclaration",
            "scope": 15349,
            "src": "1068:35:74",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ITransferProxy_$14219",
              "typeString": "contract ITransferProxy"
            },
            "typeName": {
              "id": 14274,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14273,
                "name": "ITransferProxy",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 14219,
                "src": "1068:14:74"
              },
              "referencedDeclaration": 14219,
              "src": "1068:14:74",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ITransferProxy_$14219",
                "typeString": "contract ITransferProxy"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 14277,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1147:5:74",
            "nodeType": "VariableDeclaration",
            "scope": 15349,
            "src": "1132:20:74",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14276,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1132:7:74",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "238ac933",
            "id": 14279,
            "mutability": "mutable",
            "name": "signer",
            "nameLocation": "1176:6:74",
            "nodeType": "VariableDeclaration",
            "scope": 15349,
            "src": "1161:21:74",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14278,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1161:7:74",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Trade.Fee",
            "id": 14290,
            "members": [
              {
                "constant": false,
                "id": 14281,
                "mutability": "mutable",
                "name": "platformFee",
                "nameLocation": "1882:11:74",
                "nodeType": "VariableDeclaration",
                "scope": 14290,
                "src": "1874:19:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14280,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1874:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14283,
                "mutability": "mutable",
                "name": "assetFee",
                "nameLocation": "1912:8:74",
                "nodeType": "VariableDeclaration",
                "scope": 14290,
                "src": "1904:16:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14282,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1904:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14285,
                "mutability": "mutable",
                "name": "royaltyFee",
                "nameLocation": "1939:10:74",
                "nodeType": "VariableDeclaration",
                "scope": 14290,
                "src": "1931:18:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14284,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1931:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14287,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "1968:5:74",
                "nodeType": "VariableDeclaration",
                "scope": 14290,
                "src": "1960:13:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14286,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1960:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14289,
                "mutability": "mutable",
                "name": "tokenCreator",
                "nameLocation": "1992:12:74",
                "nodeType": "VariableDeclaration",
                "scope": 14290,
                "src": "1984:20:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14288,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1984:7:74",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Fee",
            "nameLocation": "1859:3:74",
            "nodeType": "StructDefinition",
            "scope": 15349,
            "src": "1852:160:74",
            "visibility": "public"
          },
          {
            "canonicalName": "Trade.Order",
            "id": 14322,
            "members": [
              {
                "constant": false,
                "id": 14292,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "3079:6:74",
                "nodeType": "VariableDeclaration",
                "scope": 14322,
                "src": "3071:14:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14291,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3071:7:74",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14294,
                "mutability": "mutable",
                "name": "buyer",
                "nameLocation": "3104:5:74",
                "nodeType": "VariableDeclaration",
                "scope": 14322,
                "src": "3096:13:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14293,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3096:7:74",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14296,
                "mutability": "mutable",
                "name": "erc20Address",
                "nameLocation": "3128:12:74",
                "nodeType": "VariableDeclaration",
                "scope": 14322,
                "src": "3120:20:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14295,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3120:7:74",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14298,
                "mutability": "mutable",
                "name": "nftAddress",
                "nameLocation": "3159:10:74",
                "nodeType": "VariableDeclaration",
                "scope": 14322,
                "src": "3151:18:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14297,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3151:7:74",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14301,
                "mutability": "mutable",
                "name": "nftType",
                "nameLocation": "3196:7:74",
                "nodeType": "VariableDeclaration",
                "scope": 14322,
                "src": "3180:23:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                  "typeString": "enum Trade.BuyingAssetType"
                },
                "typeName": {
                  "id": 14300,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 14299,
                    "name": "BuyingAssetType",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 14229,
                    "src": "3180:15:74"
                  },
                  "referencedDeclaration": 14229,
                  "src": "3180:15:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                    "typeString": "enum Trade.BuyingAssetType"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14303,
                "mutability": "mutable",
                "name": "unitPrice",
                "nameLocation": "3222:9:74",
                "nodeType": "VariableDeclaration",
                "scope": 14322,
                "src": "3214:17:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14302,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3214:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14305,
                "mutability": "mutable",
                "name": "nftOrderQuantity",
                "nameLocation": "3250:16:74",
                "nodeType": "VariableDeclaration",
                "scope": 14322,
                "src": "3242:24:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14304,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3242:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14307,
                "mutability": "mutable",
                "name": "skipRoyalty",
                "nameLocation": "3282:11:74",
                "nodeType": "VariableDeclaration",
                "scope": 14322,
                "src": "3277:16:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 14306,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3277:4:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14309,
                "mutability": "mutable",
                "name": "startDate",
                "nameLocation": "3312:9:74",
                "nodeType": "VariableDeclaration",
                "scope": 14322,
                "src": "3304:17:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14308,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3304:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14311,
                "mutability": "mutable",
                "name": "endDate",
                "nameLocation": "3340:7:74",
                "nodeType": "VariableDeclaration",
                "scope": 14322,
                "src": "3332:15:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14310,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3332:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14313,
                "mutability": "mutable",
                "name": "tokenId",
                "nameLocation": "3366:7:74",
                "nodeType": "VariableDeclaration",
                "scope": 14322,
                "src": "3358:15:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14312,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3358:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14315,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "3392:6:74",
                "nodeType": "VariableDeclaration",
                "scope": 14322,
                "src": "3384:14:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14314,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3384:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14317,
                "mutability": "mutable",
                "name": "qty",
                "nameLocation": "3417:3:74",
                "nodeType": "VariableDeclaration",
                "scope": 14322,
                "src": "3409:11:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14316,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3409:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14319,
                "mutability": "mutable",
                "name": "sellerOrdersignature",
                "nameLocation": "3437:20:74",
                "nodeType": "VariableDeclaration",
                "scope": 14322,
                "src": "3431:26:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 14318,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "3431:5:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14321,
                "mutability": "mutable",
                "name": "buyerOrdersignature",
                "nameLocation": "3474:19:74",
                "nodeType": "VariableDeclaration",
                "scope": 14322,
                "src": "3468:25:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 14320,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "3468:5:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Order",
            "nameLocation": "3054:5:74",
            "nodeType": "StructDefinition",
            "scope": 15349,
            "src": "3047:454:74",
            "visibility": "public"
          },
          {
            "canonicalName": "Trade.OrderStatus",
            "id": 14328,
            "members": [
              {
                "constant": false,
                "id": 14324,
                "mutability": "mutable",
                "name": "maxAmount",
                "nameLocation": "3768:9:74",
                "nodeType": "VariableDeclaration",
                "scope": 14328,
                "src": "3760:17:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14323,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3760:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14327,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "3795:6:74",
                "nodeType": "VariableDeclaration",
                "scope": 14328,
                "src": "3788:13:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Status_$14234",
                  "typeString": "enum Trade.Status"
                },
                "typeName": {
                  "id": 14326,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 14325,
                    "name": "Status",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 14234,
                    "src": "3788:6:74"
                  },
                  "referencedDeclaration": 14234,
                  "src": "3788:6:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Status_$14234",
                    "typeString": "enum Trade.Status"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "OrderStatus",
            "nameLocation": "3737:11:74",
            "nodeType": "StructDefinition",
            "scope": 15349,
            "src": "3730:79:74",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14333,
            "mutability": "mutable",
            "name": "orderLimit",
            "nameLocation": "3907:10:74",
            "nodeType": "VariableDeclaration",
            "scope": 15349,
            "src": "3875:42:74",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14328_storage_$",
              "typeString": "mapping(bytes32 => struct Trade.OrderStatus)"
            },
            "typeName": {
              "id": 14332,
              "keyType": {
                "id": 14329,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3883:7:74",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3875:31:74",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14328_storage_$",
                "typeString": "mapping(bytes32 => struct Trade.OrderStatus)"
              },
              "valueType": {
                "id": 14331,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 14330,
                  "name": "OrderStatus",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14328,
                  "src": "3894:11:74"
                },
                "referencedDeclaration": 14328,
                "src": "3894:11:74",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_OrderStatus_$14328_storage_ptr",
                  "typeString": "struct Trade.OrderStatus"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14360,
              "nodeType": "Block",
              "src": "4038:158:74",
              "statements": [
                {
                  "expression": {
                    "id": 14345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14343,
                      "name": "buyerFeePermille",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14270,
                      "src": "4049:16:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14344,
                      "name": "_buyerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14335,
                      "src": "4068:9:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4049:28:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 14346,
                  "nodeType": "ExpressionStatement",
                  "src": "4049:28:74"
                },
                {
                  "expression": {
                    "id": 14349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14347,
                      "name": "sellerFeePermille",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14272,
                      "src": "4088:17:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14348,
                      "name": "_sellerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14337,
                      "src": "4108:10:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4088:30:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 14350,
                  "nodeType": "ExpressionStatement",
                  "src": "4088:30:74"
                },
                {
                  "expression": {
                    "id": 14353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14351,
                      "name": "transferProxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14275,
                      "src": "4129:13:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITransferProxy_$14219",
                        "typeString": "contract ITransferProxy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14352,
                      "name": "_transferProxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14340,
                      "src": "4145:14:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITransferProxy_$14219",
                        "typeString": "contract ITransferProxy"
                      }
                    },
                    "src": "4129:30:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITransferProxy_$14219",
                      "typeString": "contract ITransferProxy"
                    }
                  },
                  "id": 14354,
                  "nodeType": "ExpressionStatement",
                  "src": "4129:30:74"
                },
                {
                  "expression": {
                    "id": 14358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14355,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14277,
                      "src": "4170:5:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 14356,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4178:3:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 14357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4178:10:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4170:18:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14359,
                  "nodeType": "ExpressionStatement",
                  "src": "4170:18:74"
                }
              ]
            },
            "id": 14361,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14335,
                  "mutability": "mutable",
                  "name": "_buyerFee",
                  "nameLocation": "3954:9:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14361,
                  "src": "3948:15:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 14334,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3948:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14337,
                  "mutability": "mutable",
                  "name": "_sellerFee",
                  "nameLocation": "3980:10:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14361,
                  "src": "3974:16:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 14336,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3974:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14340,
                  "mutability": "mutable",
                  "name": "_transferProxy",
                  "nameLocation": "4016:14:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14361,
                  "src": "4001:29:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITransferProxy_$14219",
                    "typeString": "contract ITransferProxy"
                  },
                  "typeName": {
                    "id": 14339,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14338,
                      "name": "ITransferProxy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14219,
                      "src": "4001:14:74"
                    },
                    "referencedDeclaration": 14219,
                    "src": "4001:14:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITransferProxy_$14219",
                      "typeString": "contract ITransferProxy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3937:100:74"
            },
            "returnParameters": {
              "id": 14342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4038:0:74"
            },
            "scope": 15349,
            "src": "3926:270:74",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14372,
              "nodeType": "Block",
              "src": "4224:92:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14364,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4243:3:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 14365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4243:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 14366,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14277,
                          "src": "4255:5:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4243:17:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e20616c6c20746869732066756e6374696f6e",
                        "id": 14368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4261:34:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51ad396264f84709ad4269026509e9a624e8487203b518fbe12cbf6e3bd45edc",
                          "typeString": "literal_string \"Only owner can all this function\""
                        },
                        "value": "Only owner can all this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51ad396264f84709ad4269026509e9a624e8487203b518fbe12cbf6e3bd45edc",
                          "typeString": "literal_string \"Only owner can all this function\""
                        }
                      ],
                      "id": 14363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "4235:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4235:61:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14370,
                  "nodeType": "ExpressionStatement",
                  "src": "4235:61:74"
                },
                {
                  "id": 14371,
                  "nodeType": "PlaceholderStatement",
                  "src": "4307:1:74"
                }
              ]
            },
            "id": 14373,
            "name": "OnlyOwner",
            "nameLocation": "4213:9:74",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 14362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4222:2:74"
            },
            "src": "4204:112:74",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14384,
              "nodeType": "Block",
              "src": "4345:94:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14376,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4364:3:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 14377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4364:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 14378,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14279,
                          "src": "4376:6:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4364:18:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207369676e65722063616e20616c6c20746869732066756e6374696f6e",
                        "id": 14380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4383:35:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_818e0918d5f8f3c22488584ebd17e1866e4077457a7a7fbab6c59de50fbc5a43",
                          "typeString": "literal_string \"Only signer can all this function\""
                        },
                        "value": "Only signer can all this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_818e0918d5f8f3c22488584ebd17e1866e4077457a7a7fbab6c59de50fbc5a43",
                          "typeString": "literal_string \"Only signer can all this function\""
                        }
                      ],
                      "id": 14375,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "4356:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4356:63:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14382,
                  "nodeType": "ExpressionStatement",
                  "src": "4356:63:74"
                },
                {
                  "id": 14383,
                  "nodeType": "PlaceholderStatement",
                  "src": "4430:1:74"
                }
              ]
            },
            "id": 14385,
            "name": "OnlySigner",
            "nameLocation": "4333:10:74",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 14374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4343:2:74"
            },
            "src": "4324:115:74",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14475,
              "nodeType": "Block",
              "src": "4544:687:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14392,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14389,
                            "src": "4563:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 14393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14292,
                          "src": "4563:12:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4587:1:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4579:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14394,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4579:7:74",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4579:10:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4563:26:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656c6c65722063616e6e6f7420626520656d707479",
                        "id": 14399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4591:24:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0232994d300f1855432717262d46f657ff60402553233f5cab772e9cc006f548",
                          "typeString": "literal_string \"Seller cannot be empty\""
                        },
                        "value": "Seller cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0232994d300f1855432717262d46f657ff60402553233f5cab772e9cc006f548",
                          "typeString": "literal_string \"Seller cannot be empty\""
                        }
                      ],
                      "id": 14391,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "4555:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4555:61:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14401,
                  "nodeType": "ExpressionStatement",
                  "src": "4555:61:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14403,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14389,
                            "src": "4635:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 14404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14294,
                          "src": "4635:11:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4658:1:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4650:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14405,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4650:7:74",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4650:10:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4635:25:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42757965722063616e6e6f7420626520656d707479",
                        "id": 14410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4662:23:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1fb710e407d3acf7c76b5184aac53e479a04425b545529056daaa017a41197de",
                          "typeString": "literal_string \"Buyer cannot be empty\""
                        },
                        "value": "Buyer cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1fb710e407d3acf7c76b5184aac53e479a04425b545529056daaa017a41197de",
                          "typeString": "literal_string \"Buyer cannot be empty\""
                        }
                      ],
                      "id": 14402,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "4627:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4627:59:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14412,
                  "nodeType": "ExpressionStatement",
                  "src": "4627:59:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14414,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14389,
                            "src": "4705:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 14415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nftAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14298,
                          "src": "4705:16:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4733:1:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4725:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14416,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4725:7:74",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4725:10:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4705:30:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e465420416464726573732063616e6e6f7420626520656d707479",
                        "id": 14421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4737:29:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e780f352d098f9a16b0fb7523366752ff32ed4302ddaad054445e5458bac72e7",
                          "typeString": "literal_string \"NFT Address cannot be empty\""
                        },
                        "value": "NFT Address cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e780f352d098f9a16b0fb7523366752ff32ed4302ddaad054445e5458bac72e7",
                          "typeString": "literal_string \"NFT Address cannot be empty\""
                        }
                      ],
                      "id": 14413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "4697:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4697:70:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14423,
                  "nodeType": "ExpressionStatement",
                  "src": "4697:70:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14425,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14389,
                            "src": "4800:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 14426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "startDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14309,
                          "src": "4800:15:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 14427,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4819:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 14428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4819:15:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4800:34:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41756374696f6e206973206e6f74207374617274656420796574",
                        "id": 14430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4849:28:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5a9b8cb24de78b4cc0610fef5a7806abc7253e6b7442e76e50ba2862e966585",
                          "typeString": "literal_string \"Auction is not started yet\""
                        },
                        "value": "Auction is not started yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5a9b8cb24de78b4cc0610fef5a7806abc7253e6b7442e76e50ba2862e966585",
                          "typeString": "literal_string \"Auction is not started yet\""
                        }
                      ],
                      "id": 14424,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "4778:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4778:110:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14432,
                  "nodeType": "ExpressionStatement",
                  "src": "4778:110:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14434,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4907:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 14435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4907:15:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 14436,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14389,
                            "src": "4925:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 14437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14311,
                          "src": "4925:13:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4907:31:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41756374696f6e20697320656e646564",
                        "id": 14439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4940:18:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6411240398b6c1614d1df84c9aa8aea8046a0212eeb55a9a59b7cc84c1b0939",
                          "typeString": "literal_string \"Auction is ended\""
                        },
                        "value": "Auction is ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6411240398b6c1614d1df84c9aa8aea8046a0212eeb55a9a59b7cc84c1b0939",
                          "typeString": "literal_string \"Auction is ended\""
                        }
                      ],
                      "id": 14433,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "4899:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4899:60:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14441,
                  "nodeType": "ExpressionStatement",
                  "src": "4899:60:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14443,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14389,
                            "src": "4978:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 14444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "unitPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14303,
                          "src": "4978:15:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 14445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4996:1:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4978:19:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e69742070726963652063616e6e6f74206265207a65726f",
                        "id": 14447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4999:27:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_530ab7dc56782b1c8db2179ce8929e7f68bd8990eea5c3b3c18ec0e36f36b331",
                          "typeString": "literal_string \"Unit price cannot be zero\""
                        },
                        "value": "Unit price cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_530ab7dc56782b1c8db2179ce8929e7f68bd8990eea5c3b3c18ec0e36f36b331",
                          "typeString": "literal_string \"Unit price cannot be zero\""
                        }
                      ],
                      "id": 14442,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "4970:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4970:57:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14449,
                  "nodeType": "ExpressionStatement",
                  "src": "4970:57:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14451,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14389,
                            "src": "5046:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 14452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14313,
                          "src": "5046:13:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 14453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5062:1:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5046:17:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e49642063616e6e6f74206265207a65726f",
                        "id": 14455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5065:24:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_935879e226d4bdb9bd7e7e780091d0a26cb918d532ef3ba1f3e9947deddfc286",
                          "typeString": "literal_string \"TokenId cannot be zero\""
                        },
                        "value": "TokenId cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_935879e226d4bdb9bd7e7e780091d0a26cb918d532ef3ba1f3e9947deddfc286",
                          "typeString": "literal_string \"TokenId cannot be zero\""
                        }
                      ],
                      "id": 14450,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "5038:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5038:52:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14457,
                  "nodeType": "ExpressionStatement",
                  "src": "5038:52:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14459,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14389,
                            "src": "5109:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 14460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14315,
                          "src": "5109:12:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 14461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5124:1:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5109:16:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742063616e6e6f74206265207a65726f",
                        "id": 14463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5127:23:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8beea76deddeff1012d90e1e8da369393f885b0575eb094a33da9912cc4bbb8b",
                          "typeString": "literal_string \"Amount cannot be zero\""
                        },
                        "value": "Amount cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8beea76deddeff1012d90e1e8da369393f885b0575eb094a33da9912cc4bbb8b",
                          "typeString": "literal_string \"Amount cannot be zero\""
                        }
                      ],
                      "id": 14458,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "5101:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5101:50:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14465,
                  "nodeType": "ExpressionStatement",
                  "src": "5101:50:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14467,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14389,
                            "src": "5170:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 14468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "qty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14317,
                          "src": "5170:9:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 14469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5182:1:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5170:13:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5175616e746974792063616e6e6f74206265207a65726f",
                        "id": 14471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5185:25:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_662e76c4c7be31c911ead8c8dc124c282d7230289373f196ee23a95cc629918b",
                          "typeString": "literal_string \"Quantity cannot be zero\""
                        },
                        "value": "Quantity cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_662e76c4c7be31c911ead8c8dc124c282d7230289373f196ee23a95cc629918b",
                          "typeString": "literal_string \"Quantity cannot be zero\""
                        }
                      ],
                      "id": 14466,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "5162:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5162:49:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14473,
                  "nodeType": "ExpressionStatement",
                  "src": "5162:49:74"
                },
                {
                  "id": 14474,
                  "nodeType": "PlaceholderStatement",
                  "src": "5222:1:74"
                }
              ]
            },
            "documentation": {
              "id": 14386,
              "nodeType": "StructuredDocumentation",
              "src": "4447:47:74",
              "text": "checks the order is valid"
            },
            "id": 14476,
            "name": "isvalidOrder",
            "nameLocation": "4509:12:74",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 14390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14389,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "4537:5:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14476,
                  "src": "4522:20:74",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                    "typeString": "struct Trade.Order"
                  },
                  "typeName": {
                    "id": 14388,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14387,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14322,
                      "src": "4522:5:74"
                    },
                    "referencedDeclaration": 14322,
                    "src": "4522:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14322_storage_ptr",
                      "typeString": "struct Trade.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4521:22:74"
            },
            "src": "4500:731:74",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14507,
              "nodeType": "Block",
              "src": "5339:324:74",
              "statements": [
                {
                  "assignments": [14483],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14483,
                      "mutability": "mutable",
                      "name": "buyerOrderhash",
                      "nameLocation": "5358:14:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 14507,
                      "src": "5350:22:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14482,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5350:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14487,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14485,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14480,
                        "src": "5393:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      ],
                      "id": 14484,
                      "name": "getOrderBuyerHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15284,
                      "src": "5375:17:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Order_$14322_calldata_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct Trade.Order calldata) pure returns (bytes32)"
                      }
                    },
                    "id": 14486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5375:24:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5350:49:74"
                },
                {
                  "assignments": [14489],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14489,
                      "mutability": "mutable",
                      "name": "buyerOrderhashMessage",
                      "nameLocation": "5418:21:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 14507,
                      "src": "5410:29:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14488,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5410:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14493,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14491,
                        "name": "buyerOrderhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14483,
                        "src": "5451:14:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 14490,
                      "name": "prefixed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15300,
                      "src": "5442:8:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 14492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5442:24:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5410:56:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14495,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14480,
                            "src": "5501:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 14496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14294,
                          "src": "5501:11:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 14498,
                              "name": "buyerOrderhashMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14489,
                              "src": "5547:21:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 14499,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14480,
                                "src": "5570:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 14500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "buyerOrdersignature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14321,
                              "src": "5570:25:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 14497,
                            "name": "recoverSigner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15327,
                            "src": "5533:13:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 14501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5533:63:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5501:95:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206269642064657461696c73",
                        "id": 14503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5611:21:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e68da84f21b80e71d3487e97fb1fff1029163585f2eaa681b648b6d33c0e2fa",
                          "typeString": "literal_string \"Invalid bid details\""
                        },
                        "value": "Invalid bid details"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e68da84f21b80e71d3487e97fb1fff1029163585f2eaa681b648b6d33c0e2fa",
                          "typeString": "literal_string \"Invalid bid details\""
                        }
                      ],
                      "id": 14494,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "5479:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5479:164:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14505,
                  "nodeType": "ExpressionStatement",
                  "src": "5479:164:74"
                },
                {
                  "id": 14506,
                  "nodeType": "PlaceholderStatement",
                  "src": "5654:1:74"
                }
              ]
            },
            "documentation": {
              "id": 14477,
              "nodeType": "StructuredDocumentation",
              "src": "5239:47:74",
              "text": "checks the order is valid"
            },
            "id": 14508,
            "name": "isvalidOrderBid",
            "nameLocation": "5301:15:74",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 14481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14480,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "5332:5:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14508,
                  "src": "5317:20:74",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                    "typeString": "struct Trade.Order"
                  },
                  "typeName": {
                    "id": 14479,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14478,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14322,
                      "src": "5317:5:74"
                    },
                    "referencedDeclaration": 14322,
                    "src": "5317:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14322_storage_ptr",
                      "typeString": "struct Trade.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5316:22:74"
            },
            "src": "5292:371:74",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14516,
              "nodeType": "Block",
              "src": "5813:42:74",
              "statements": [
                {
                  "expression": {
                    "id": 14514,
                    "name": "buyerFeePermille",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14270,
                    "src": "5831:16:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 14513,
                  "id": 14515,
                  "nodeType": "Return",
                  "src": "5824:23:74"
                }
              ]
            },
            "documentation": {
              "id": 14509,
              "nodeType": "StructuredDocumentation",
              "src": "5671:71:74",
              "text": "returns the buyerservice Fee in multiply of 1000."
            },
            "functionSelector": "9c66809d",
            "id": 14517,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyerServiceFee",
            "nameLocation": "5757:15:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5772:2:74"
            },
            "returnParameters": {
              "id": 14513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14512,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14517,
                  "src": "5806:5:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 14511,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5806:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5805:7:74"
            },
            "scope": 15349,
            "src": "5748:107:74",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14525,
              "nodeType": "Block",
              "src": "6007:43:74",
              "statements": [
                {
                  "expression": {
                    "id": 14523,
                    "name": "sellerFeePermille",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14272,
                    "src": "6025:17:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 14522,
                  "id": 14524,
                  "nodeType": "Return",
                  "src": "6018:24:74"
                }
              ]
            },
            "documentation": {
              "id": 14518,
              "nodeType": "StructuredDocumentation",
              "src": "5863:72:74",
              "text": "returns the sellerservice Fee in multiply of 1000."
            },
            "functionSelector": "60085da6",
            "id": 14526,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellerServiceFee",
            "nameLocation": "5950:16:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5966:2:74"
            },
            "returnParameters": {
              "id": 14522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14521,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14526,
                  "src": "6000:5:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 14520,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6000:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5999:7:74"
            },
            "scope": 15349,
            "src": "5941:109:74",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14545,
              "nodeType": "Block",
              "src": "6209:141:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 14537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14535,
                          "name": "buyerFeePermille",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14270,
                          "src": "6228:16:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 14536,
                          "name": "_buyerFeePermille",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14529,
                          "src": "6246:17:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "6228:35:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42757965724665655065726d696c6c652076616c75652069732073616d65",
                        "id": 14538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6264:32:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45ab2a59a0e95a2d07251692a1073e091187085eb92f80257f932439a93f4b62",
                          "typeString": "literal_string \"BuyerFeePermille value is same\""
                        },
                        "value": "BuyerFeePermille value is same"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45ab2a59a0e95a2d07251692a1073e091187085eb92f80257f932439a93f4b62",
                          "typeString": "literal_string \"BuyerFeePermille value is same\""
                        }
                      ],
                      "id": 14534,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "6220:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6220:77:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14540,
                  "nodeType": "ExpressionStatement",
                  "src": "6220:77:74"
                },
                {
                  "expression": {
                    "id": 14543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14541,
                      "name": "buyerFeePermille",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14270,
                      "src": "6308:16:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14542,
                      "name": "_buyerFeePermille",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14529,
                      "src": "6325:17:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "6308:34:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 14544,
                  "nodeType": "ExpressionStatement",
                  "src": "6308:34:74"
                }
              ]
            },
            "documentation": {
              "id": 14527,
              "nodeType": "StructuredDocumentation",
              "src": "6058:71:74",
              "text": "returns the buyerservice Fee in multiply of 1000."
            },
            "functionSelector": "a96b446d",
            "id": 14546,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 14532,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14531,
                  "name": "OnlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14373,
                  "src": "6197:9:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "6197:11:74"
              }
            ],
            "name": "setBuyerServiceFee",
            "nameLocation": "6146:18:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14529,
                  "mutability": "mutable",
                  "name": "_buyerFeePermille",
                  "nameLocation": "6171:17:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14546,
                  "src": "6165:23:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 14528,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6165:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6164:25:74"
            },
            "returnParameters": {
              "id": 14533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6209:0:74"
            },
            "scope": 15349,
            "src": "6137:213:74",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14565,
              "nodeType": "Block",
              "src": "6512:146:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 14557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14555,
                          "name": "sellerFeePermille",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14272,
                          "src": "6531:17:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 14556,
                          "name": "_sellerFeePermille",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14549,
                          "src": "6550:18:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "6531:37:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656c6c65724665655065726d696c6c652076616c75652069732073616d65",
                        "id": 14558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6569:33:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1b6679d28c127b63a0e7639ff84499fdd30665ebfc1a5554ab3f05786b087d7",
                          "typeString": "literal_string \"SellerFeePermille value is same\""
                        },
                        "value": "SellerFeePermille value is same"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1b6679d28c127b63a0e7639ff84499fdd30665ebfc1a5554ab3f05786b087d7",
                          "typeString": "literal_string \"SellerFeePermille value is same\""
                        }
                      ],
                      "id": 14554,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "6523:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6523:80:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14560,
                  "nodeType": "ExpressionStatement",
                  "src": "6523:80:74"
                },
                {
                  "expression": {
                    "id": 14563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14561,
                      "name": "sellerFeePermille",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14272,
                      "src": "6614:17:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14562,
                      "name": "_sellerFeePermille",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14549,
                      "src": "6632:18:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "6614:36:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 14564,
                  "nodeType": "ExpressionStatement",
                  "src": "6614:36:74"
                }
              ]
            },
            "documentation": {
              "id": 14547,
              "nodeType": "StructuredDocumentation",
              "src": "6358:72:74",
              "text": "returns the sellerservice Fee in multiply of 1000."
            },
            "functionSelector": "a3667c7b",
            "id": 14566,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 14552,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14551,
                  "name": "OnlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14373,
                  "src": "6500:9:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "6500:11:74"
              }
            ],
            "name": "setSellerServiceFee",
            "nameLocation": "6447:19:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14549,
                  "mutability": "mutable",
                  "name": "_sellerFeePermille",
                  "nameLocation": "6473:18:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14566,
                  "src": "6467:24:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 14548,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6467:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6466:26:74"
            },
            "returnParameters": {
              "id": 14553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6512:0:74"
            },
            "scope": 15349,
            "src": "6438:220:74",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14585,
              "nodeType": "Block",
              "src": "6775:91:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14575,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14279,
                          "src": "6794:6:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 14576,
                          "name": "_signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14569,
                          "src": "6802:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6794:15:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5369676e65722076616c75652069732073616d65",
                        "id": 14578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6810:22:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b330f54cb3b506e1ff7dd011cf0af03f672b9aa361bc07d55d3a09f4938be41c",
                          "typeString": "literal_string \"Signer value is same\""
                        },
                        "value": "Signer value is same"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b330f54cb3b506e1ff7dd011cf0af03f672b9aa361bc07d55d3a09f4938be41c",
                          "typeString": "literal_string \"Signer value is same\""
                        }
                      ],
                      "id": 14574,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "6786:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6786:47:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14580,
                  "nodeType": "ExpressionStatement",
                  "src": "6786:47:74"
                },
                {
                  "expression": {
                    "id": 14583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14581,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14279,
                      "src": "6844:6:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14582,
                      "name": "_signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14569,
                      "src": "6851:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6844:14:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14584,
                  "nodeType": "ExpressionStatement",
                  "src": "6844:14:74"
                }
              ]
            },
            "documentation": {
              "id": 14567,
              "nodeType": "StructuredDocumentation",
              "src": "6664:48:74",
              "text": "set the signer in address."
            },
            "functionSelector": "6c19e783",
            "id": 14586,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 14572,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14571,
                  "name": "OnlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14373,
                  "src": "6763:9:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "6763:11:74"
              }
            ],
            "name": "setSigner",
            "nameLocation": "6729:9:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14569,
                  "mutability": "mutable",
                  "name": "_signer",
                  "nameLocation": "6747:7:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14586,
                  "src": "6739:15:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6739:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6738:17:74"
            },
            "returnParameters": {
              "id": 14573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6775:0:74"
            },
            "scope": 15349,
            "src": "6720:146:74",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14610,
              "nodeType": "Block",
              "src": "7026:149:74",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 14608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Status_$14234",
                        "typeString": "enum Trade.Status"
                      },
                      "id": 14600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 14594,
                            "name": "orderLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14333,
                            "src": "7057:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14328_storage_$",
                              "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                            }
                          },
                          "id": 14596,
                          "indexExpression": {
                            "id": 14595,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14589,
                            "src": "7068:9:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7057:21:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderStatus_$14328_storage",
                            "typeString": "struct Trade.OrderStatus storage ref"
                          }
                        },
                        "id": 14597,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "status",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14327,
                        "src": "7057:28:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$14234",
                          "typeString": "enum Trade.Status"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 14598,
                          "name": "Status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14234,
                          "src": "7089:6:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Status_$14234_$",
                            "typeString": "type(enum Trade.Status)"
                          }
                        },
                        "id": 14599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "COMPLETED",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14232,
                        "src": "7089:16:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$14234",
                          "typeString": "enum Trade.Status"
                        }
                      },
                      "src": "7057:48:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Status_$14234",
                        "typeString": "enum Trade.Status"
                      },
                      "id": 14607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 14601,
                            "name": "orderLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14333,
                            "src": "7122:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14328_storage_$",
                              "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                            }
                          },
                          "id": 14603,
                          "indexExpression": {
                            "id": 14602,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14589,
                            "src": "7133:9:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7122:21:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderStatus_$14328_storage",
                            "typeString": "struct Trade.OrderStatus storage ref"
                          }
                        },
                        "id": 14604,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "status",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14327,
                        "src": "7122:28:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$14234",
                          "typeString": "enum Trade.Status"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 14605,
                          "name": "Status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14234,
                          "src": "7154:6:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Status_$14234_$",
                            "typeString": "type(enum Trade.Status)"
                          }
                        },
                        "id": 14606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "CANCEL",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14233,
                        "src": "7154:13:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$14234",
                          "typeString": "enum Trade.Status"
                        }
                      },
                      "src": "7122:45:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7057:110:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 14593,
                  "id": 14609,
                  "nodeType": "Return",
                  "src": "7037:130:74"
                }
              ]
            },
            "documentation": {
              "id": 14587,
              "nodeType": "StructuredDocumentation",
              "src": "6874:77:74",
              "text": "returns the whether the order is already exists or not."
            },
            "functionSelector": "8e1615ac",
            "id": 14611,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOrderClosed",
            "nameLocation": "6966:13:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14589,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "6988:9:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14611,
                  "src": "6980:17:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14588,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6980:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6979:19:74"
            },
            "returnParameters": {
              "id": 14593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14592,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14611,
                  "src": "7020:4:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14591,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7020:4:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7019:6:74"
            },
            "scope": 15349,
            "src": "6957:218:74",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14678,
              "nodeType": "Block",
              "src": "7403:813:74",
              "statements": [
                {
                  "assignments": [14621],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14621,
                      "mutability": "mutable",
                      "name": "sellerOrderhash",
                      "nameLocation": "7422:15:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 14678,
                      "src": "7414:23:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14620,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7414:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14625,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14623,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14615,
                        "src": "7459:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      ],
                      "id": 14622,
                      "name": "getOrderSellerHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15252,
                      "src": "7440:18:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Order_$14322_calldata_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct Trade.Order calldata) pure returns (bytes32)"
                      }
                    },
                    "id": 14624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7440:25:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7414:51:74"
                },
                {
                  "assignments": [14627],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14627,
                      "mutability": "mutable",
                      "name": "sellerOrderhashMessage",
                      "nameLocation": "7484:22:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 14678,
                      "src": "7476:30:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14626,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7476:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14631,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14629,
                        "name": "sellerOrderhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14621,
                        "src": "7518:15:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 14628,
                      "name": "prefixed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15300,
                      "src": "7509:8:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 14630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7509:25:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7476:58:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14633,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14615,
                            "src": "7555:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 14634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14292,
                          "src": "7555:12:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 14635,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7571:3:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 14636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7571:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7555:26:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f74206f726465722073656c6c6572",
                        "id": 14638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7583:28:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b736b3a4b26bc43c4b574dc3beb4a35e025f1fea386508885f1007a1f18d9143",
                          "typeString": "literal_string \"Caller is not order seller\""
                        },
                        "value": "Caller is not order seller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b736b3a4b26bc43c4b574dc3beb4a35e025f1fea386508885f1007a1f18d9143",
                          "typeString": "literal_string \"Caller is not order seller\""
                        }
                      ],
                      "id": 14632,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "7547:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7547:65:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14640,
                  "nodeType": "ExpressionStatement",
                  "src": "7547:65:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14642,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14615,
                            "src": "7645:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 14643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14292,
                          "src": "7645:12:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 14645,
                              "name": "sellerOrderhashMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14627,
                              "src": "7714:22:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 14646,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14615,
                                "src": "7759:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 14647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sellerOrdersignature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14319,
                              "src": "7759:26:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 14644,
                            "name": "recoverSigner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15327,
                            "src": "7678:13:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 14648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7678:126:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7645:159:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f726465722064657461696c73",
                        "id": 14650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7819:23:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78a9165f89a9f51c6398b08106809c65c4102ad9fd7f52adf2a2cf61e69e86d0",
                          "typeString": "literal_string \"Invalid order details\""
                        },
                        "value": "Invalid order details"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78a9165f89a9f51c6398b08106809c65c4102ad9fd7f52adf2a2cf61e69e86d0",
                          "typeString": "literal_string \"Invalid order details\""
                        }
                      ],
                      "id": 14641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "7623:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7623:230:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14652,
                  "nodeType": "ExpressionStatement",
                  "src": "7623:230:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7886:38:74",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 14655,
                              "name": "sellerOrderhashMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14627,
                              "src": "7901:22:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 14654,
                            "name": "isOrderClosed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14611,
                            "src": "7887:13:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
                              "typeString": "function (bytes32) view returns (bool)"
                            }
                          },
                          "id": 14656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7887:37:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7264657220616c726561647920636f6d706c746564206f722063616e63656c",
                        "id": 14658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7939:34:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c99eb1f384c1a02d19b903debb028bbe28a4ade3502226eaaa61a9ea9668aab",
                          "typeString": "literal_string \"Order already complted or cancel\""
                        },
                        "value": "Order already complted or cancel"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0c99eb1f384c1a02d19b903debb028bbe28a4ade3502226eaaa61a9ea9668aab",
                          "typeString": "literal_string \"Order already complted or cancel\""
                        }
                      ],
                      "id": 14653,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "7864:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7864:120:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14660,
                  "nodeType": "ExpressionStatement",
                  "src": "7864:120:74"
                },
                {
                  "expression": {
                    "id": 14666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 14661,
                          "name": "orderLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14333,
                          "src": "8068:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14328_storage_$",
                            "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                          }
                        },
                        "id": 14663,
                        "indexExpression": {
                          "id": 14662,
                          "name": "sellerOrderhashMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14627,
                          "src": "8079:22:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8068:34:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderStatus_$14328_storage",
                          "typeString": "struct Trade.OrderStatus storage ref"
                        }
                      },
                      "id": 14664,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14324,
                      "src": "8068:44:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 14665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8115:1:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8068:48:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14667,
                  "nodeType": "ExpressionStatement",
                  "src": "8068:48:74"
                },
                {
                  "expression": {
                    "id": 14674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 14668,
                          "name": "orderLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14333,
                          "src": "8127:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14328_storage_$",
                            "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                          }
                        },
                        "id": 14670,
                        "indexExpression": {
                          "id": 14669,
                          "name": "sellerOrderhashMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14627,
                          "src": "8138:22:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8127:34:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderStatus_$14328_storage",
                          "typeString": "struct Trade.OrderStatus storage ref"
                        }
                      },
                      "id": 14671,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14327,
                      "src": "8127:41:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$14234",
                        "typeString": "enum Trade.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 14672,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14234,
                        "src": "8171:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$14234_$",
                          "typeString": "type(enum Trade.Status)"
                        }
                      },
                      "id": 14673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CANCEL",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14233,
                      "src": "8171:13:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$14234",
                        "typeString": "enum Trade.Status"
                      }
                    },
                    "src": "8127:57:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$14234",
                      "typeString": "enum Trade.Status"
                    }
                  },
                  "id": 14675,
                  "nodeType": "ExpressionStatement",
                  "src": "8127:57:74"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 14676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8204:4:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 14619,
                  "id": 14677,
                  "nodeType": "Return",
                  "src": "8197:11:74"
                }
              ]
            },
            "documentation": {
              "id": 14612,
              "nodeType": "StructuredDocumentation",
              "src": "7183:149:74",
              "text": "cancel Order.\n@param order ordervalues(seller, buyer,...).\nthis will cancel the invalid use of sign order data"
            },
            "functionSelector": "96c94acf",
            "id": 14679,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelOrder",
            "nameLocation": "7347:11:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14615,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "7374:5:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14679,
                  "src": "7359:20:74",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                    "typeString": "struct Trade.Order"
                  },
                  "typeName": {
                    "id": 14614,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14613,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14322,
                      "src": "7359:5:74"
                    },
                    "referencedDeclaration": 14322,
                    "src": "7359:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14322_storage_ptr",
                      "typeString": "struct Trade.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7358:22:74"
            },
            "returnParameters": {
              "id": 14619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14618,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14679,
                  "src": "7397:4:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14617,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7397:4:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7396:6:74"
            },
            "scope": 15349,
            "src": "7338:878:74",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14797,
              "nodeType": "Block",
              "src": "8521:1493:74",
              "statements": [
                {
                  "assignments": [14689],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14689,
                      "mutability": "mutable",
                      "name": "sellerOrderhash",
                      "nameLocation": "8540:15:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 14797,
                      "src": "8532:23:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14688,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8532:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14693,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14691,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14683,
                        "src": "8577:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      ],
                      "id": 14690,
                      "name": "getOrderSellerHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15252,
                      "src": "8558:18:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Order_$14322_calldata_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct Trade.Order calldata) pure returns (bytes32)"
                      }
                    },
                    "id": 14692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8558:25:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8532:51:74"
                },
                {
                  "assignments": [14695],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14695,
                      "mutability": "mutable",
                      "name": "sellerOrderhashMessage",
                      "nameLocation": "8602:22:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 14797,
                      "src": "8594:30:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14694,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8594:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14699,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14697,
                        "name": "sellerOrderhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14689,
                        "src": "8636:15:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 14696,
                      "name": "prefixed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15300,
                      "src": "8627:8:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 14698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8627:25:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8594:58:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14701,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14683,
                            "src": "8687:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 14702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14292,
                          "src": "8687:12:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 14704,
                              "name": "sellerOrderhashMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14695,
                              "src": "8756:22:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 14705,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14683,
                                "src": "8801:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 14706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sellerOrdersignature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14319,
                              "src": "8801:26:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 14703,
                            "name": "recoverSigner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15327,
                            "src": "8720:13:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 14707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8720:126:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8687:159:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f726465722064657461696c73",
                        "id": 14709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8861:23:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78a9165f89a9f51c6398b08106809c65c4102ad9fd7f52adf2a2cf61e69e86d0",
                          "typeString": "literal_string \"Invalid order details\""
                        },
                        "value": "Invalid order details"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78a9165f89a9f51c6398b08106809c65c4102ad9fd7f52adf2a2cf61e69e86d0",
                          "typeString": "literal_string \"Invalid order details\""
                        }
                      ],
                      "id": 14700,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "8665:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8665:230:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14711,
                  "nodeType": "ExpressionStatement",
                  "src": "8665:230:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8914:38:74",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 14714,
                              "name": "sellerOrderhashMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14695,
                              "src": "8929:22:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 14713,
                            "name": "isOrderClosed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14611,
                            "src": "8915:13:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
                              "typeString": "function (bytes32) view returns (bool)"
                            }
                          },
                          "id": 14715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8915:37:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7264657220636c6f736564",
                        "id": 14717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8954:14:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee7795d41bcacc139a12c4d8a7d29e2e70d3d410cf6ed4eda0b4229156b7a294",
                          "typeString": "literal_string \"Order closed\""
                        },
                        "value": "Order closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee7795d41bcacc139a12c4d8a7d29e2e70d3d410cf6ed4eda0b4229156b7a294",
                          "typeString": "literal_string \"Order closed\""
                        }
                      ],
                      "id": 14712,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "8906:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8906:63:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14719,
                  "nodeType": "ExpressionStatement",
                  "src": "8906:63:74"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Status_$14234",
                      "typeString": "enum Trade.Status"
                    },
                    "id": 14726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 14720,
                          "name": "orderLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14333,
                          "src": "9049:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14328_storage_$",
                            "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                          }
                        },
                        "id": 14722,
                        "indexExpression": {
                          "id": 14721,
                          "name": "sellerOrderhashMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14695,
                          "src": "9060:22:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9049:34:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderStatus_$14328_storage",
                          "typeString": "struct Trade.OrderStatus storage ref"
                        }
                      },
                      "id": 14723,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14327,
                      "src": "9049:41:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$14234",
                        "typeString": "enum Trade.Status"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 14724,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14234,
                        "src": "9094:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$14234_$",
                          "typeString": "type(enum Trade.Status)"
                        }
                      },
                      "id": 14725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "NONE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14230,
                      "src": "9094:11:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$14234",
                        "typeString": "enum Trade.Status"
                      }
                    },
                    "src": "9049:56:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Status_$14234",
                        "typeString": "enum Trade.Status"
                      },
                      "id": 14750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 14744,
                            "name": "orderLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14333,
                            "src": "9283:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14328_storage_$",
                              "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                            }
                          },
                          "id": 14746,
                          "indexExpression": {
                            "id": 14745,
                            "name": "sellerOrderhashMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14695,
                            "src": "9294:22:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9283:34:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderStatus_$14328_storage",
                            "typeString": "struct Trade.OrderStatus storage ref"
                          }
                        },
                        "id": 14747,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "status",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14327,
                        "src": "9283:41:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$14234",
                          "typeString": "enum Trade.Status"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 14748,
                          "name": "Status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14234,
                          "src": "9328:6:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Status_$14234_$",
                            "typeString": "type(enum Trade.Status)"
                          }
                        },
                        "id": 14749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "LIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14231,
                        "src": "9328:11:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$14234",
                          "typeString": "enum Trade.Status"
                        }
                      },
                      "src": "9283:56:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 14793,
                    "nodeType": "IfStatement",
                    "src": "9279:704:74",
                    "trueBody": {
                      "id": 14792,
                      "nodeType": "Block",
                      "src": "9341:642:74",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 14758,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 14752,
                                      "name": "orderLimit",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14333,
                                      "src": "9382:10:74",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14328_storage_$",
                                        "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                                      }
                                    },
                                    "id": 14754,
                                    "indexExpression": {
                                      "id": 14753,
                                      "name": "sellerOrderhashMessage",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14695,
                                      "src": "9393:22:74",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9382:34:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OrderStatus_$14328_storage",
                                      "typeString": "struct Trade.OrderStatus storage ref"
                                    }
                                  },
                                  "id": 14755,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "maxAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14324,
                                  "src": "9382:44:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 14756,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14683,
                                    "src": "9430:5:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                      "typeString": "struct Trade.Order calldata"
                                    }
                                  },
                                  "id": 14757,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "qty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14317,
                                  "src": "9430:9:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9382:57:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4f72646572205175616e7469747920697320696e76616c6964",
                                "id": 14759,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9458:27:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_d6b39d85b143f9803d307392c43cc4279a0ab934faeb0976571dd4e99e023a0c",
                                  "typeString": "literal_string \"Order Quantity is invalid\""
                                },
                                "value": "Order Quantity is invalid"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_d6b39d85b143f9803d307392c43cc4279a0ab934faeb0976571dd4e99e023a0c",
                                  "typeString": "literal_string \"Order Quantity is invalid\""
                                }
                              ],
                              "id": 14751,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [4294967278, 4294967278],
                              "referencedDeclaration": 4294967278,
                              "src": "9356:7:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 14760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9356:144:74",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 14761,
                          "nodeType": "ExpressionStatement",
                          "src": "9356:144:74"
                        },
                        {
                          "assignments": [14763],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 14763,
                              "mutability": "mutable",
                              "name": "_updatedMaxAmount",
                              "nameLocation": "9579:17:74",
                              "nodeType": "VariableDeclaration",
                              "scope": 14792,
                              "src": "9571:25:74",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 14762,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9571:7:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 14771,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 14770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 14764,
                                  "name": "orderLimit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14333,
                                  "src": "9599:10:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14328_storage_$",
                                    "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                                  }
                                },
                                "id": 14766,
                                "indexExpression": {
                                  "id": 14765,
                                  "name": "sellerOrderhashMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14695,
                                  "src": "9610:22:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9599:34:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderStatus_$14328_storage",
                                  "typeString": "struct Trade.OrderStatus storage ref"
                                }
                              },
                              "id": 14767,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "maxAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14324,
                              "src": "9599:62:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "expression": {
                                "id": 14768,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14683,
                                "src": "9664:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 14769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "qty",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14317,
                              "src": "9664:9:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9599:74:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9571:102:74"
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 14774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 14772,
                              "name": "_updatedMaxAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14763,
                              "src": "9692:17:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 14773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9713:1:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "9692:22:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 14784,
                          "nodeType": "IfStatement",
                          "src": "9688:205:74",
                          "trueBody": {
                            "id": 14783,
                            "nodeType": "Block",
                            "src": "9716:177:74",
                            "statements": [
                              {
                                "expression": {
                                  "id": 14781,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 14775,
                                        "name": "orderLimit",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 14333,
                                        "src": "9817:10:74",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14328_storage_$",
                                          "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                                        }
                                      },
                                      "id": 14777,
                                      "indexExpression": {
                                        "id": 14776,
                                        "name": "sellerOrderhashMessage",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 14695,
                                        "src": "9828:22:74",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9817:34:74",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_OrderStatus_$14328_storage",
                                        "typeString": "struct Trade.OrderStatus storage ref"
                                      }
                                    },
                                    "id": 14778,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberName": "status",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14327,
                                    "src": "9817:41:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Status_$14234",
                                      "typeString": "enum Trade.Status"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "expression": {
                                      "id": 14779,
                                      "name": "Status",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14234,
                                      "src": "9861:6:74",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Status_$14234_$",
                                        "typeString": "type(enum Trade.Status)"
                                      }
                                    },
                                    "id": 14780,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "COMPLETED",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14232,
                                    "src": "9861:16:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Status_$14234",
                                      "typeString": "enum Trade.Status"
                                    }
                                  },
                                  "src": "9817:60:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$14234",
                                    "typeString": "enum Trade.Status"
                                  }
                                },
                                "id": 14782,
                                "nodeType": "ExpressionStatement",
                                "src": "9817:60:74"
                              }
                            ]
                          }
                        },
                        {
                          "expression": {
                            "id": 14790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 14785,
                                  "name": "orderLimit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14333,
                                  "src": "9907:10:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14328_storage_$",
                                    "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                                  }
                                },
                                "id": 14787,
                                "indexExpression": {
                                  "id": 14786,
                                  "name": "sellerOrderhashMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14695,
                                  "src": "9918:22:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9907:34:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderStatus_$14328_storage",
                                  "typeString": "struct Trade.OrderStatus storage ref"
                                }
                              },
                              "id": 14788,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "maxAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14324,
                              "src": "9907:44:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 14789,
                              "name": "_updatedMaxAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14763,
                              "src": "9954:17:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9907:64:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 14791,
                          "nodeType": "ExpressionStatement",
                          "src": "9907:64:74"
                        }
                      ]
                    }
                  },
                  "id": 14794,
                  "nodeType": "IfStatement",
                  "src": "9045:938:74",
                  "trueBody": {
                    "id": 14743,
                    "nodeType": "Block",
                    "src": "9107:166:74",
                    "statements": [
                      {
                        "expression": {
                          "id": 14733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 14727,
                                "name": "orderLimit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14333,
                                "src": "9122:10:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14328_storage_$",
                                  "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                                }
                              },
                              "id": 14729,
                              "indexExpression": {
                                "id": 14728,
                                "name": "sellerOrderhashMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14695,
                                "src": "9133:22:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9122:34:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderStatus_$14328_storage",
                                "typeString": "struct Trade.OrderStatus storage ref"
                              }
                            },
                            "id": 14730,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "maxAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14324,
                            "src": "9122:44:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 14731,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14683,
                              "src": "9169:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 14732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftOrderQuantity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14305,
                            "src": "9169:22:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9122:69:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 14734,
                        "nodeType": "ExpressionStatement",
                        "src": "9122:69:74"
                      },
                      {
                        "expression": {
                          "id": 14741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 14735,
                                "name": "orderLimit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14333,
                                "src": "9206:10:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$14328_storage_$",
                                  "typeString": "mapping(bytes32 => struct Trade.OrderStatus storage ref)"
                                }
                              },
                              "id": 14737,
                              "indexExpression": {
                                "id": 14736,
                                "name": "sellerOrderhashMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14695,
                                "src": "9217:22:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9206:34:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderStatus_$14328_storage",
                                "typeString": "struct Trade.OrderStatus storage ref"
                              }
                            },
                            "id": 14738,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14327,
                            "src": "9206:41:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$14234",
                              "typeString": "enum Trade.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 14739,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14234,
                              "src": "9250:6:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$14234_$",
                                "typeString": "type(enum Trade.Status)"
                              }
                            },
                            "id": 14740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "LIVE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14231,
                            "src": "9250:11:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$14234",
                              "typeString": "enum Trade.Status"
                            }
                          },
                          "src": "9206:55:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$14234",
                            "typeString": "enum Trade.Status"
                          }
                        },
                        "id": 14742,
                        "nodeType": "ExpressionStatement",
                        "src": "9206:55:74"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 14795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10002:4:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 14687,
                  "id": 14796,
                  "nodeType": "Return",
                  "src": "9995:11:74"
                }
              ]
            },
            "documentation": {
              "id": 14680,
              "nodeType": "StructuredDocumentation",
              "src": "8224:180:74",
              "text": "validate and Update Order Limit.\n@param order ordervalues(seller, buyer,...).\nthis will validate and update the signature of order for seller"
            },
            "id": 14798,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateandUpdateOrderForSeller",
            "nameLocation": "8419:31:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14683,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "8466:5:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14798,
                  "src": "8451:20:74",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                    "typeString": "struct Trade.Order"
                  },
                  "typeName": {
                    "id": 14682,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14681,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14322,
                      "src": "8451:5:74"
                    },
                    "referencedDeclaration": 14322,
                    "src": "8451:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14322_storage_ptr",
                      "typeString": "struct Trade.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8450:22:74"
            },
            "returnParameters": {
              "id": 14687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14686,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14798,
                  "src": "8510:4:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14685,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8510:4:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8509:6:74"
            },
            "scope": 15349,
            "src": "8410:1604:74",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14868,
              "nodeType": "Block",
              "src": "10242:517:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14811,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10261:3:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 14812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10261:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 14813,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14802,
                            "src": "10273:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 14814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14294,
                          "src": "10273:11:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10261:23:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f726465722062757965722063616e2063616c6c2074686973206d6574686f64",
                        "id": 14816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10285:39:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba600277e48edf73e4c4cfe3b5ef7ab485c317e94395cf181dcd19efbd5f916e",
                          "typeString": "literal_string \"Only order buyer can call this method\""
                        },
                        "value": "Only order buyer can call this method"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba600277e48edf73e4c4cfe3b5ef7ab485c317e94395cf181dcd19efbd5f916e",
                          "typeString": "literal_string \"Only order buyer can call this method\""
                        }
                      ],
                      "id": 14810,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "10253:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10253:72:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14818,
                  "nodeType": "ExpressionStatement",
                  "src": "10253:72:74"
                },
                {
                  "assignments": [14821],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14821,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "10347:3:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 14868,
                      "src": "10336:14:74",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fee_$14290_memory_ptr",
                        "typeString": "struct Trade.Fee"
                      },
                      "typeName": {
                        "id": 14820,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14819,
                          "name": "Fee",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14290,
                          "src": "10336:3:74"
                        },
                        "referencedDeclaration": 14290,
                        "src": "10336:3:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fee_$14290_storage_ptr",
                          "typeString": "struct Trade.Fee"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14825,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14823,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14802,
                        "src": "10361:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      ],
                      "id": 14822,
                      "name": "getFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15029,
                      "src": "10353:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Order_$14322_calldata_ptr_$returns$_t_struct$_Fee_$14290_memory_ptr_$",
                        "typeString": "function (struct Trade.Order calldata) view returns (struct Trade.Fee memory)"
                      }
                    },
                    "id": 14824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10353:14:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fee_$14290_memory_ptr",
                      "typeString": "struct Trade.Fee memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10336:31:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 14834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 14827,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14821,
                                "src": "10401:3:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Fee_$14290_memory_ptr",
                                  "typeString": "struct Trade.Fee memory"
                                }
                              },
                              "id": 14828,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14287,
                              "src": "10401:9:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 14833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 14829,
                                  "name": "order",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14802,
                                  "src": "10414:5:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                    "typeString": "struct Trade.Order calldata"
                                  }
                                },
                                "id": 14830,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "unitPrice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14303,
                                "src": "10414:15:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 14831,
                                  "name": "order",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14802,
                                  "src": "10432:5:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                    "typeString": "struct Trade.Order calldata"
                                  }
                                },
                                "id": 14832,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "qty",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14317,
                                "src": "10432:9:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10414:27:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10401:40:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 14835,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "10400:42:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061696420696e76616c696420616d6f756e74",
                        "id": 14836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10457:21:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1720ac4e2a48e81b9bc85ccf3361a2938d26d92bf9e3070ee081eb99ab7f6caa",
                          "typeString": "literal_string \"Paid invalid amount\""
                        },
                        "value": "Paid invalid amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1720ac4e2a48e81b9bc85ccf3361a2938d26d92bf9e3070ee081eb99ab7f6caa",
                          "typeString": "literal_string \"Paid invalid amount\""
                        }
                      ],
                      "id": 14826,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "10378:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10378:113:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14838,
                  "nodeType": "ExpressionStatement",
                  "src": "10378:113:74"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 14840,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14802,
                        "src": "10538:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      ],
                      "id": 14839,
                      "name": "validateandUpdateOrderForSeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14798,
                      "src": "10506:31:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Order_$14322_calldata_ptr_$returns$_t_bool_$",
                        "typeString": "function (struct Trade.Order calldata) returns (bool)"
                      }
                    },
                    "id": 14841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10506:38:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14865,
                  "nodeType": "IfStatement",
                  "src": "10502:227:74",
                  "trueBody": {
                    "id": 14864,
                    "nodeType": "Block",
                    "src": "10546:183:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 14843,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14802,
                              "src": "10572:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            {
                              "id": 14844,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14821,
                              "src": "10579:3:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Fee_$14290_memory_ptr",
                                "typeString": "struct Trade.Fee memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 14845,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14802,
                                "src": "10584:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 14846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "buyer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14294,
                              "src": "10584:11:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 14847,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14802,
                                "src": "10597:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 14848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "seller",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14292,
                              "src": "10597:12:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              },
                              {
                                "typeIdentifier": "t_struct$_Fee_$14290_memory_ptr",
                                "typeString": "struct Trade.Fee memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14842,
                            "name": "tradeAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15144,
                            "src": "10561:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Order_$14322_calldata_ptr_$_t_struct$_Fee_$14290_memory_ptr_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (struct Trade.Order calldata,struct Trade.Fee memory,address,address)"
                            }
                          },
                          "id": 14849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10561:49:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 14850,
                        "nodeType": "ExpressionStatement",
                        "src": "10561:49:74"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 14852,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14802,
                                "src": "10639:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 14853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "seller",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14292,
                              "src": "10639:12:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 14854,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14802,
                                "src": "10653:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 14855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14313,
                              "src": "10653:13:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 14856,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14802,
                                "src": "10668:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 14857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "qty",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14317,
                              "src": "10668:9:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 14858,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14802,
                                "src": "10679:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 14859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "buyer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14294,
                              "src": "10679:11:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14851,
                            "name": "BuyAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14258,
                            "src": "10630:8:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,uint256,uint256,address)"
                            }
                          },
                          "id": 14860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10630:61:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 14861,
                        "nodeType": "EmitStatement",
                        "src": "10625:66:74"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 14862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10713:4:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 14809,
                        "id": 14863,
                        "nodeType": "Return",
                        "src": "10706:11:74"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 14866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10746:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 14809,
                  "id": 14867,
                  "nodeType": "Return",
                  "src": "10739:12:74"
                }
              ]
            },
            "documentation": {
              "id": 14799,
              "nodeType": "StructuredDocumentation",
              "src": "10022:98:74",
              "text": "excuting the NFT order.\n@param order ordervalues(seller, buyer,...)."
            },
            "functionSelector": "8162b6bd",
            "id": 14869,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 14805,
                    "name": "order",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14802,
                    "src": "10206:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                      "typeString": "struct Trade.Order calldata"
                    }
                  }
                ],
                "id": 14806,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14804,
                  "name": "isvalidOrder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14476,
                  "src": "10193:12:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "10193:19:74"
              }
            ],
            "name": "buyAsset",
            "nameLocation": "10135:8:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14802,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "10159:5:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14869,
                  "src": "10144:20:74",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                    "typeString": "struct Trade.Order"
                  },
                  "typeName": {
                    "id": 14801,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14800,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14322,
                      "src": "10144:5:74"
                    },
                    "referencedDeclaration": 14322,
                    "src": "10144:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14322_storage_ptr",
                      "typeString": "struct Trade.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10143:22:74"
            },
            "returnParameters": {
              "id": 14809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14808,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14869,
                  "src": "10231:4:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14807,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10231:4:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10230:6:74"
            },
            "scope": 15349,
            "src": "10126:633:74",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14921,
              "nodeType": "Block",
              "src": "10917:296:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14884,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10936:3:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 14885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10936:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 14886,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14872,
                            "src": "10948:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                              "typeString": "struct Trade.Order calldata"
                            }
                          },
                          "id": 14887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14292,
                          "src": "10948:12:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10936:24:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f726465722073656c6c65722063616e2063616c6c2074686973206d6574686f64",
                        "id": 14889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10961:40:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7781e8c9acdd69da49f1e6194130023eb30523cfd8e98d7d3dc6a8996b296997",
                          "typeString": "literal_string \"Only order seller can call this method\""
                        },
                        "value": "Only order seller can call this method"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7781e8c9acdd69da49f1e6194130023eb30523cfd8e98d7d3dc6a8996b296997",
                          "typeString": "literal_string \"Only order seller can call this method\""
                        }
                      ],
                      "id": 14883,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "10928:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10928:74:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14891,
                  "nodeType": "ExpressionStatement",
                  "src": "10928:74:74"
                },
                {
                  "assignments": [14894],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14894,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "11024:3:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 14921,
                      "src": "11013:14:74",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fee_$14290_memory_ptr",
                        "typeString": "struct Trade.Fee"
                      },
                      "typeName": {
                        "id": 14893,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14892,
                          "name": "Fee",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14290,
                          "src": "11013:3:74"
                        },
                        "referencedDeclaration": 14290,
                        "src": "11013:3:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fee_$14290_storage_ptr",
                          "typeString": "struct Trade.Fee"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14898,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14896,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14872,
                        "src": "11038:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      ],
                      "id": 14895,
                      "name": "getFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15029,
                      "src": "11030:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Order_$14322_calldata_ptr_$returns$_t_struct$_Fee_$14290_memory_ptr_$",
                        "typeString": "function (struct Trade.Order calldata) view returns (struct Trade.Fee memory)"
                      }
                    },
                    "id": 14897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11030:14:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fee_$14290_memory_ptr",
                      "typeString": "struct Trade.Fee memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11013:31:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14900,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14872,
                        "src": "11066:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      },
                      {
                        "id": 14901,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14894,
                        "src": "11073:3:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fee_$14290_memory_ptr",
                          "typeString": "struct Trade.Fee memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 14902,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14872,
                          "src": "11078:5:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                            "typeString": "struct Trade.Order calldata"
                          }
                        },
                        "id": 14903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14294,
                        "src": "11078:11:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 14904,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14872,
                          "src": "11091:5:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                            "typeString": "struct Trade.Order calldata"
                          }
                        },
                        "id": 14905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14292,
                        "src": "11091:12:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_Fee_$14290_memory_ptr",
                          "typeString": "struct Trade.Fee memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14899,
                      "name": "tradeAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15144,
                      "src": "11055:10:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Order_$14322_calldata_ptr_$_t_struct$_Fee_$14290_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (struct Trade.Order calldata,struct Trade.Fee memory,address,address)"
                      }
                    },
                    "id": 14906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11055:49:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14907,
                  "nodeType": "ExpressionStatement",
                  "src": "11055:49:74"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 14909,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14872,
                          "src": "11131:5:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                            "typeString": "struct Trade.Order calldata"
                          }
                        },
                        "id": 14910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14292,
                        "src": "11131:12:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 14911,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14872,
                          "src": "11145:5:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                            "typeString": "struct Trade.Order calldata"
                          }
                        },
                        "id": 14912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14313,
                        "src": "11145:13:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 14913,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14872,
                          "src": "11160:5:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                            "typeString": "struct Trade.Order calldata"
                          }
                        },
                        "id": 14914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "qty",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14317,
                        "src": "11160:9:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 14915,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14872,
                          "src": "11171:5:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                            "typeString": "struct Trade.Order calldata"
                          }
                        },
                        "id": 14916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14294,
                        "src": "11171:11:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 14908,
                      "name": "ExecuteBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14268,
                      "src": "11120:10:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,uint256,address)"
                      }
                    },
                    "id": 14917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11120:63:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14918,
                  "nodeType": "EmitStatement",
                  "src": "11115:68:74"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 14919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11201:4:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 14882,
                  "id": 14920,
                  "nodeType": "Return",
                  "src": "11194:11:74"
                }
              ]
            },
            "functionSelector": "dab56b48",
            "id": 14922,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 14875,
                    "name": "order",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14872,
                    "src": "10849:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                      "typeString": "struct Trade.Order calldata"
                    }
                  }
                ],
                "id": 14876,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14874,
                  "name": "isvalidOrder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14476,
                  "src": "10836:12:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "10836:19:74"
              },
              {
                "arguments": [
                  {
                    "id": 14878,
                    "name": "order",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14872,
                    "src": "10881:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                      "typeString": "struct Trade.Order calldata"
                    }
                  }
                ],
                "id": 14879,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14877,
                  "name": "isvalidOrderBid",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14508,
                  "src": "10865:15:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "10865:22:74"
              }
            ],
            "name": "executeBid",
            "nameLocation": "10776:10:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14872,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "10802:5:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14922,
                  "src": "10787:20:74",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                    "typeString": "struct Trade.Order"
                  },
                  "typeName": {
                    "id": 14871,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14870,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14322,
                      "src": "10787:5:74"
                    },
                    "referencedDeclaration": 14322,
                    "src": "10787:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14322_storage_ptr",
                      "typeString": "struct Trade.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10786:22:74"
            },
            "returnParameters": {
              "id": 14882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14881,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14922,
                  "src": "10906:4:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14880,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10906:4:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10905:6:74"
            },
            "scope": 15349,
            "src": "10767:446:74",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15028,
              "nodeType": "Block",
              "src": "11293:836:74",
              "statements": [
                {
                  "assignments": [14932],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14932,
                      "mutability": "mutable",
                      "name": "tokenCreator",
                      "nameLocation": "11312:12:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 15028,
                      "src": "11304:20:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 14931,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11304:7:74",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14933,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11304:20:74"
                },
                {
                  "assignments": [14935],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14935,
                      "mutability": "mutable",
                      "name": "platformFee",
                      "nameLocation": "11343:11:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 15028,
                      "src": "11335:19:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14934,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11335:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14936,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11335:19:74"
                },
                {
                  "assignments": [14938],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14938,
                      "mutability": "mutable",
                      "name": "royaltyFee",
                      "nameLocation": "11373:10:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 15028,
                      "src": "11365:18:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14937,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11365:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14939,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11365:18:74"
                },
                {
                  "assignments": [14941],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14941,
                      "mutability": "mutable",
                      "name": "assetFee",
                      "nameLocation": "11402:8:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 15028,
                      "src": "11394:16:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14940,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11394:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14942,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11394:16:74"
                },
                {
                  "assignments": [14944],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14944,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "11429:5:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 15028,
                      "src": "11421:13:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14943,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11421:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14955,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 14945,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14925,
                              "src": "11438:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 14946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14315,
                            "src": "11438:12:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 14947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11453:4:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "11438:19:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 14949,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11437:21:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 14952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 14950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11462:4:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 14951,
                            "name": "buyerFeePermille",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14270,
                            "src": "11469:16:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "11462:23:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "id": 14953,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11461:25:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "11437:49:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11421:65:74"
                },
                {
                  "assignments": [14957],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14957,
                      "mutability": "mutable",
                      "name": "buyerFee",
                      "nameLocation": "11505:8:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 15028,
                      "src": "11497:16:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14956,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11497:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14962,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 14958,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14925,
                        "src": "11516:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      },
                      "id": 14959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14315,
                      "src": "11516:12:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 14960,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14944,
                      "src": "11531:5:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11516:20:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11497:39:74"
                },
                {
                  "assignments": [14964],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14964,
                      "mutability": "mutable",
                      "name": "sellerFee",
                      "nameLocation": "11555:9:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 15028,
                      "src": "11547:17:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14963,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11547:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14971,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 14965,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14944,
                            "src": "11568:5:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 14966,
                            "name": "sellerFeePermille",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14272,
                            "src": "11576:17:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "11568:25:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 14968,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11567:27:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 14969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11597:4:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "11567:34:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11547:54:74"
                },
                {
                  "expression": {
                    "id": 14976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14972,
                      "name": "platformFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14935,
                      "src": "11612:11:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 14975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 14973,
                        "name": "buyerFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14957,
                        "src": "11626:8:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 14974,
                        "name": "sellerFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14964,
                        "src": "11637:9:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11626:20:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11612:34:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14977,
                  "nodeType": "ExpressionStatement",
                  "src": "11612:34:74"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 14995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "11675:18:74",
                      "subExpression": {
                        "expression": {
                          "id": 14978,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14925,
                          "src": "11676:5:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                            "typeString": "struct Trade.Order calldata"
                          }
                        },
                        "id": 14979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "skipRoyalty",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14307,
                        "src": "11676:17:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 14993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                                  "typeString": "enum Trade.BuyingAssetType"
                                },
                                "id": 14985,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 14981,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14925,
                                    "src": "11712:5:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                      "typeString": "struct Trade.Order calldata"
                                    }
                                  },
                                  "id": 14982,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14301,
                                  "src": "11712:13:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                                    "typeString": "enum Trade.BuyingAssetType"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 14983,
                                    "name": "BuyingAssetType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14229,
                                    "src": "11729:15:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_BuyingAssetType_$14229_$",
                                      "typeString": "type(enum Trade.BuyingAssetType)"
                                    }
                                  },
                                  "id": 14984,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "ERC721",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14228,
                                  "src": "11729:22:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                                    "typeString": "enum Trade.BuyingAssetType"
                                  }
                                },
                                "src": "11712:39:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 14986,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11711:41:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                                  "typeString": "enum Trade.BuyingAssetType"
                                },
                                "id": 14991,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 14987,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14925,
                                    "src": "11774:5:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                      "typeString": "struct Trade.Order calldata"
                                    }
                                  },
                                  "id": 14988,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14301,
                                  "src": "11774:13:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                                    "typeString": "enum Trade.BuyingAssetType"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 14989,
                                    "name": "BuyingAssetType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14229,
                                    "src": "11791:15:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_BuyingAssetType_$14229_$",
                                      "typeString": "type(enum Trade.BuyingAssetType)"
                                    }
                                  },
                                  "id": 14990,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "ERC1155",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14227,
                                  "src": "11791:23:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                                    "typeString": "enum Trade.BuyingAssetType"
                                  }
                                },
                                "src": "11774:40:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 14992,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11773:42:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11711:104:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 14994,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11710:106:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11675:141:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15011,
                  "nodeType": "IfStatement",
                  "src": "11657:336:74",
                  "trueBody": {
                    "id": 15010,
                    "nodeType": "Block",
                    "src": "11828:165:74",
                    "statements": [
                      {
                        "expression": {
                          "id": 15008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 14996,
                                "name": "tokenCreator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14932,
                                "src": "11844:12:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 14997,
                                "name": "royaltyFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14938,
                                "src": "11858:10:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 14998,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "11843:26:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                              "typeString": "tuple(address,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 15004,
                                  "name": "order",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14925,
                                  "src": "11929:5:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                    "typeString": "struct Trade.Order calldata"
                                  }
                                },
                                "id": 15005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14313,
                                "src": "11929:13:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 15006,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14944,
                                "src": "11961:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 15000,
                                      "name": "order",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14925,
                                      "src": "11881:5:74",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                        "typeString": "struct Trade.Order calldata"
                                      }
                                    },
                                    "id": 15001,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14298,
                                    "src": "11881:16:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 14999,
                                  "name": "IERC2981",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6389,
                                  "src": "11872:8:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC2981_$6389_$",
                                    "typeString": "type(contract IERC2981)"
                                  }
                                },
                                "id": 15002,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11872:26:74",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC2981_$6389",
                                  "typeString": "contract IERC2981"
                                }
                              },
                              "id": 15003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "royaltyInfo",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6388,
                              "src": "11872:38:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_address_$_t_uint256_$",
                                "typeString": "function (uint256,uint256) view external returns (address,uint256)"
                              }
                            },
                            "id": 15007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11872:109:74",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                              "typeString": "tuple(address,uint256)"
                            }
                          },
                          "src": "11843:138:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15009,
                        "nodeType": "ExpressionStatement",
                        "src": "11843:138:74"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 15018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15012,
                      "name": "assetFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14941,
                      "src": "12003:8:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 15017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 15013,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14944,
                          "src": "12014:5:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 15014,
                          "name": "royaltyFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14938,
                          "src": "12022:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12014:18:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 15016,
                        "name": "sellerFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14964,
                        "src": "12035:9:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12014:30:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12003:41:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15019,
                  "nodeType": "ExpressionStatement",
                  "src": "12003:41:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15021,
                        "name": "platformFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14935,
                        "src": "12066:11:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 15022,
                        "name": "assetFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14941,
                        "src": "12079:8:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 15023,
                        "name": "royaltyFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14938,
                        "src": "12089:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 15024,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14944,
                        "src": "12101:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 15025,
                        "name": "tokenCreator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14932,
                        "src": "12108:12:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15020,
                      "name": "Fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14290,
                      "src": "12062:3:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Fee_$14290_storage_ptr_$",
                        "typeString": "type(struct Trade.Fee storage pointer)"
                      }
                    },
                    "id": 15026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12062:59:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fee_$14290_memory_ptr",
                      "typeString": "struct Trade.Fee memory"
                    }
                  },
                  "functionReturnParameters": 14930,
                  "id": 15027,
                  "nodeType": "Return",
                  "src": "12055:66:74"
                }
              ]
            },
            "functionSelector": "4cf4d2b7",
            "id": 15029,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFees",
            "nameLocation": "11230:7:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14925,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "11253:5:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 15029,
                  "src": "11238:20:74",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                    "typeString": "struct Trade.Order"
                  },
                  "typeName": {
                    "id": 14924,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14923,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14322,
                      "src": "11238:5:74"
                    },
                    "referencedDeclaration": 14322,
                    "src": "11238:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14322_storage_ptr",
                      "typeString": "struct Trade.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11237:22:74"
            },
            "returnParameters": {
              "id": 14930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14929,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15029,
                  "src": "11281:10:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Fee_$14290_memory_ptr",
                    "typeString": "struct Trade.Fee"
                  },
                  "typeName": {
                    "id": 14928,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14927,
                      "name": "Fee",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14290,
                      "src": "11281:3:74"
                    },
                    "referencedDeclaration": 14290,
                    "src": "11281:3:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fee_$14290_storage_ptr",
                      "typeString": "struct Trade.Fee"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11280:12:74"
            },
            "scope": 15349,
            "src": "11221:908:74",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15143,
              "nodeType": "Block",
              "src": "12460:1255:74",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                      "typeString": "enum Trade.BuyingAssetType"
                    },
                    "id": 15047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 15043,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15033,
                        "src": "12475:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      },
                      "id": 15044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nftType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14301,
                      "src": "12475:13:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                        "typeString": "enum Trade.BuyingAssetType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 15045,
                        "name": "BuyingAssetType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14229,
                        "src": "12492:15:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_BuyingAssetType_$14229_$",
                          "typeString": "type(enum Trade.BuyingAssetType)"
                        }
                      },
                      "id": 15046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC721",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14228,
                      "src": "12492:22:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                        "typeString": "enum Trade.BuyingAssetType"
                      }
                    },
                    "src": "12475:39:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15062,
                  "nodeType": "IfStatement",
                  "src": "12471:248:74",
                  "trueBody": {
                    "id": 15061,
                    "nodeType": "Block",
                    "src": "12516:203:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 15052,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15033,
                                    "src": "12594:5:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                      "typeString": "struct Trade.Order calldata"
                                    }
                                  },
                                  "id": 15053,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14298,
                                  "src": "12594:16:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 15051,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10142,
                                "src": "12586:7:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$10142_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 15054,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12586:25:74",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$10142",
                                "typeString": "contract IERC721"
                              }
                            },
                            {
                              "id": 15055,
                              "name": "seller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15040,
                              "src": "12630:6:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 15056,
                              "name": "buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15038,
                              "src": "12655:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 15057,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15033,
                                "src": "12679:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15058,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14313,
                              "src": "12679:13:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC721_$10142",
                                "typeString": "contract IERC721"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 15048,
                              "name": "transferProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14275,
                              "src": "12531:13:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITransferProxy_$14219",
                                "typeString": "contract ITransferProxy"
                              }
                            },
                            "id": 15050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "erc721safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14158,
                            "src": "12531:36:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC721_$10142_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC721,address,address,uint256) external"
                            }
                          },
                          "id": 15059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12531:176:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15060,
                        "nodeType": "ExpressionStatement",
                        "src": "12531:176:74"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                      "typeString": "enum Trade.BuyingAssetType"
                    },
                    "id": 15067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 15063,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15033,
                        "src": "12733:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      },
                      "id": 15064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nftType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14301,
                      "src": "12733:13:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                        "typeString": "enum Trade.BuyingAssetType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 15065,
                        "name": "BuyingAssetType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14229,
                        "src": "12750:15:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_BuyingAssetType_$14229_$",
                          "typeString": "type(enum Trade.BuyingAssetType)"
                        }
                      },
                      "id": 15066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC1155",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14227,
                      "src": "12750:23:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                        "typeString": "enum Trade.BuyingAssetType"
                      }
                    },
                    "src": "12733:40:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15085,
                  "nodeType": "IfStatement",
                  "src": "12729:300:74",
                  "trueBody": {
                    "id": 15084,
                    "nodeType": "Block",
                    "src": "12775:254:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 15072,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15033,
                                    "src": "12855:5:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                      "typeString": "struct Trade.Order calldata"
                                    }
                                  },
                                  "id": 15073,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14298,
                                  "src": "12855:16:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 15071,
                                "name": "IERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8268,
                                "src": "12846:8:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$8268_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              },
                              "id": 15074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12846:26:74",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155_$8268",
                                "typeString": "contract IERC1155"
                              }
                            },
                            {
                              "id": 15075,
                              "name": "seller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15040,
                              "src": "12891:6:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 15076,
                              "name": "buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15038,
                              "src": "12916:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 15077,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15033,
                                "src": "12940:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14313,
                              "src": "12940:13:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 15079,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15033,
                                "src": "12972:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "qty",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14317,
                              "src": "12972:9:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 15081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13000:2:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC1155_$8268",
                                "typeString": "contract IERC1155"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "id": 15068,
                              "name": "transferProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14275,
                              "src": "12790:13:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITransferProxy_$14219",
                                "typeString": "contract ITransferProxy"
                              }
                            },
                            "id": 15070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "erc1155safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14174,
                            "src": "12790:37:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC1155_$8268_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC1155,address,address,uint256,uint256,bytes memory) external"
                            }
                          },
                          "id": 15082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12790:227:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15083,
                        "nodeType": "ExpressionStatement",
                        "src": "12790:227:74"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 15086,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15036,
                        "src": "13045:3:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fee_$14290_memory_ptr",
                          "typeString": "struct Trade.Fee memory"
                        }
                      },
                      "id": 15087,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "platformFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14281,
                      "src": "13045:15:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 15088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13063:1:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13045:19:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15104,
                  "nodeType": "IfStatement",
                  "src": "13041:229:74",
                  "trueBody": {
                    "id": 15103,
                    "nodeType": "Block",
                    "src": "13066:204:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 15094,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15033,
                                    "src": "13142:5:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                      "typeString": "struct Trade.Order calldata"
                                    }
                                  },
                                  "id": 15095,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "erc20Address",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14296,
                                  "src": "13142:18:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 15093,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9074,
                                "src": "13135:6:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$9074_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 15096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13135:26:74",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$9074",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 15097,
                              "name": "buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15038,
                              "src": "13180:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 15098,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14277,
                              "src": "13204:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 15099,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15036,
                                "src": "13228:3:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Fee_$14290_memory_ptr",
                                  "typeString": "struct Trade.Fee memory"
                                }
                              },
                              "id": 15100,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "platformFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14281,
                              "src": "13228:15:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$9074",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 15090,
                              "name": "transferProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14275,
                              "src": "13081:13:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITransferProxy_$14219",
                                "typeString": "contract ITransferProxy"
                              }
                            },
                            "id": 15092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "erc20safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14218,
                            "src": "13081:35:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$9074_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,address,uint256) external"
                            }
                          },
                          "id": 15101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13081:177:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15102,
                        "nodeType": "ExpressionStatement",
                        "src": "13081:177:74"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 15113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 15108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 15105,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15036,
                          "src": "13284:3:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fee_$14290_memory_ptr",
                            "typeString": "struct Trade.Fee memory"
                          }
                        },
                        "id": 15106,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyFee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14285,
                        "src": "13284:14:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 15107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13301:1:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "13284:18:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "id": 15111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "13307:18:74",
                          "subExpression": {
                            "expression": {
                              "id": 15109,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15033,
                              "src": "13308:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "skipRoyalty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14307,
                            "src": "13308:17:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 15112,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "13306:20:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13284:42:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15129,
                  "nodeType": "IfStatement",
                  "src": "13280:262:74",
                  "trueBody": {
                    "id": 15128,
                    "nodeType": "Block",
                    "src": "13328:214:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 15118,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15033,
                                    "src": "13404:5:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                      "typeString": "struct Trade.Order calldata"
                                    }
                                  },
                                  "id": 15119,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "erc20Address",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14296,
                                  "src": "13404:18:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 15117,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9074,
                                "src": "13397:6:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$9074_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 15120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13397:26:74",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$9074",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 15121,
                              "name": "buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15038,
                              "src": "13442:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 15122,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15036,
                                "src": "13466:3:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Fee_$14290_memory_ptr",
                                  "typeString": "struct Trade.Fee memory"
                                }
                              },
                              "id": 15123,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenCreator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14289,
                              "src": "13466:16:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 15124,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15036,
                                "src": "13501:3:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Fee_$14290_memory_ptr",
                                  "typeString": "struct Trade.Fee memory"
                                }
                              },
                              "id": 15125,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "royaltyFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14285,
                              "src": "13501:14:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$9074",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 15114,
                              "name": "transferProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14275,
                              "src": "13343:13:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITransferProxy_$14219",
                                "typeString": "contract ITransferProxy"
                              }
                            },
                            "id": 15116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "erc20safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14218,
                            "src": "13343:35:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$9074_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,address,uint256) external"
                            }
                          },
                          "id": 15126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13343:187:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15127,
                        "nodeType": "ExpressionStatement",
                        "src": "13343:187:74"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 15134,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15033,
                              "src": "13609:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "erc20Address",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14296,
                            "src": "13609:18:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15133,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9074,
                          "src": "13602:6:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9074_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 15136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13602:26:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9074",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 15137,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15038,
                        "src": "13643:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15138,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15040,
                        "src": "13663:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 15139,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15036,
                          "src": "13684:3:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fee_$14290_memory_ptr",
                            "typeString": "struct Trade.Fee memory"
                          }
                        },
                        "id": 15140,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "assetFee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14283,
                        "src": "13684:12:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$9074",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15130,
                        "name": "transferProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14275,
                        "src": "13552:13:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITransferProxy_$14219",
                          "typeString": "contract ITransferProxy"
                        }
                      },
                      "id": 15132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc20safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14218,
                      "src": "13552:35:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$9074_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,address,uint256) external"
                      }
                    },
                    "id": 15141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13552:155:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15142,
                  "nodeType": "ExpressionStatement",
                  "src": "13552:155:74"
                }
              ]
            },
            "documentation": {
              "id": 15030,
              "nodeType": "StructuredDocumentation",
              "src": "12137:166:74",
              "text": "transfers the NFTs and tokens...\n@param order ordervalues(seller, buyer,...).\n@param fee Feevalues(platformFee, assetFee,...)."
            },
            "id": 15144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tradeAsset",
            "nameLocation": "12320:10:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15033,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "12356:5:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 15144,
                  "src": "12341:20:74",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                    "typeString": "struct Trade.Order"
                  },
                  "typeName": {
                    "id": 15032,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15031,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14322,
                      "src": "12341:5:74"
                    },
                    "referencedDeclaration": 14322,
                    "src": "12341:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14322_storage_ptr",
                      "typeString": "struct Trade.Order"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15036,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "12383:3:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 15144,
                  "src": "12372:14:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Fee_$14290_memory_ptr",
                    "typeString": "struct Trade.Fee"
                  },
                  "typeName": {
                    "id": 15035,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15034,
                      "name": "Fee",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14290,
                      "src": "12372:3:74"
                    },
                    "referencedDeclaration": 14290,
                    "src": "12372:3:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fee_$14290_storage_ptr",
                      "typeString": "struct Trade.Fee"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15038,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "12405:5:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 15144,
                  "src": "12397:13:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12397:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15040,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "12429:6:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 15144,
                  "src": "12421:14:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12421:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12330:112:74"
            },
            "returnParameters": {
              "id": 15042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12460:0:74"
            },
            "scope": 15349,
            "src": "12311:1404:74",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15215,
              "nodeType": "Block",
              "src": "13970:701:74",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                      "typeString": "enum Trade.BuyingAssetType"
                    },
                    "id": 15159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 15155,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15148,
                        "src": "13985:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      },
                      "id": 15156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nftType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14301,
                      "src": "13985:13:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                        "typeString": "enum Trade.BuyingAssetType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 15157,
                        "name": "BuyingAssetType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14229,
                        "src": "14002:15:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_BuyingAssetType_$14229_$",
                          "typeString": "type(enum Trade.BuyingAssetType)"
                        }
                      },
                      "id": 15158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC721",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14228,
                      "src": "14002:22:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                        "typeString": "enum Trade.BuyingAssetType"
                      }
                    },
                    "src": "13985:39:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15176,
                  "nodeType": "IfStatement",
                  "src": "13981:260:74",
                  "trueBody": {
                    "id": 15175,
                    "nodeType": "Block",
                    "src": "14026:215:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 15164,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15148,
                                    "src": "14104:5:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                      "typeString": "struct Trade.Order calldata"
                                    }
                                  },
                                  "id": 15165,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14298,
                                  "src": "14104:16:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 15163,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10142,
                                "src": "14096:7:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$10142_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 15166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14096:25:74",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$10142",
                                "typeString": "contract IERC721"
                              }
                            },
                            {
                              "expression": {
                                "id": 15167,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15148,
                                "src": "14140:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15168,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "seller",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14292,
                              "src": "14140:12:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 15169,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15148,
                                "src": "14171:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "buyer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14294,
                              "src": "14171:11:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 15171,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15148,
                                "src": "14201:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14313,
                              "src": "14201:13:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC721_$10142",
                                "typeString": "contract IERC721"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 15160,
                              "name": "transferProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14275,
                              "src": "14041:13:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITransferProxy_$14219",
                                "typeString": "contract ITransferProxy"
                              }
                            },
                            "id": 15162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "erc721safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14158,
                            "src": "14041:36:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC721_$10142_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC721,address,address,uint256) external"
                            }
                          },
                          "id": 15173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14041:188:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15174,
                        "nodeType": "ExpressionStatement",
                        "src": "14041:188:74"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                      "typeString": "enum Trade.BuyingAssetType"
                    },
                    "id": 15181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 15177,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15148,
                        "src": "14255:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                          "typeString": "struct Trade.Order calldata"
                        }
                      },
                      "id": 15178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nftType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14301,
                      "src": "14255:13:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                        "typeString": "enum Trade.BuyingAssetType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 15179,
                        "name": "BuyingAssetType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14229,
                        "src": "14272:15:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_BuyingAssetType_$14229_$",
                          "typeString": "type(enum Trade.BuyingAssetType)"
                        }
                      },
                      "id": 15180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC1155",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14227,
                      "src": "14272:23:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                        "typeString": "enum Trade.BuyingAssetType"
                      }
                    },
                    "src": "14255:40:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15201,
                  "nodeType": "IfStatement",
                  "src": "14251:312:74",
                  "trueBody": {
                    "id": 15200,
                    "nodeType": "Block",
                    "src": "14297:266:74",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 15186,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15148,
                                    "src": "14377:5:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                      "typeString": "struct Trade.Order calldata"
                                    }
                                  },
                                  "id": 15187,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14298,
                                  "src": "14377:16:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 15185,
                                "name": "IERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8268,
                                "src": "14368:8:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$8268_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              },
                              "id": 15188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14368:26:74",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155_$8268",
                                "typeString": "contract IERC1155"
                              }
                            },
                            {
                              "expression": {
                                "id": 15189,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15148,
                                "src": "14413:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "seller",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14292,
                              "src": "14413:12:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 15191,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15148,
                                "src": "14444:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "buyer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14294,
                              "src": "14444:11:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 15193,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15148,
                                "src": "14474:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14313,
                              "src": "14474:13:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 15195,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15148,
                                "src": "14506:5:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                  "typeString": "struct Trade.Order calldata"
                                }
                              },
                              "id": 15196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "qty",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14317,
                              "src": "14506:9:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 15197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14534:2:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC1155_$8268",
                                "typeString": "contract IERC1155"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "id": 15182,
                              "name": "transferProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14275,
                              "src": "14312:13:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITransferProxy_$14219",
                                "typeString": "contract ITransferProxy"
                              }
                            },
                            "id": 15184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "erc1155safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14174,
                            "src": "14312:37:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC1155_$8268_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC1155,address,address,uint256,uint256,bytes memory) external"
                            }
                          },
                          "id": 15198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14312:239:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15199,
                        "nodeType": "ExpressionStatement",
                        "src": "14312:239:74"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 15203,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15148,
                          "src": "14589:5:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                            "typeString": "struct Trade.Order calldata"
                          }
                        },
                        "id": 15204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14292,
                        "src": "14589:12:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 15205,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15148,
                          "src": "14603:5:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                            "typeString": "struct Trade.Order calldata"
                          }
                        },
                        "id": 15206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14313,
                        "src": "14603:13:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 15207,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15148,
                          "src": "14618:5:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                            "typeString": "struct Trade.Order calldata"
                          }
                        },
                        "id": 15208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "qty",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14317,
                        "src": "14618:9:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 15209,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15148,
                          "src": "14629:5:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                            "typeString": "struct Trade.Order calldata"
                          }
                        },
                        "id": 15210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14294,
                        "src": "14629:11:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15202,
                      "name": "BuyAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14258,
                      "src": "14580:8:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,uint256,address)"
                      }
                    },
                    "id": 15211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14580:61:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15212,
                  "nodeType": "EmitStatement",
                  "src": "14575:66:74"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 15213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14659:4:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 15154,
                  "id": 15214,
                  "nodeType": "Return",
                  "src": "14652:11:74"
                }
              ]
            },
            "documentation": {
              "id": 15145,
              "nodeType": "StructuredDocumentation",
              "src": "13739:114:74",
              "text": "transfers the NFTs by external wallets\n@param order ordervalues(seller, buyer,...)."
            },
            "functionSelector": "f5c7c83d",
            "id": 15216,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 15151,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15150,
                  "name": "OnlySigner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14385,
                  "src": "13928:10:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "13928:12:74"
              }
            ],
            "name": "deliverNFT",
            "nameLocation": "13868:10:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15148,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "13894:5:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 15216,
                  "src": "13879:20:74",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                    "typeString": "struct Trade.Order"
                  },
                  "typeName": {
                    "id": 15147,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15146,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14322,
                      "src": "13879:5:74"
                    },
                    "referencedDeclaration": 14322,
                    "src": "13879:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14322_storage_ptr",
                      "typeString": "struct Trade.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13878:22:74"
            },
            "returnParameters": {
              "id": 15154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15153,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15216,
                  "src": "13959:4:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15152,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13959:4:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13958:6:74"
            },
            "scope": 15349,
            "src": "13859:812:74",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15251,
              "nodeType": "Block",
              "src": "14934:501:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 15228,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15220,
                              "src": "15032:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14292,
                            "src": "15032:12:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 15230,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15220,
                              "src": "15067:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "erc20Address",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14296,
                            "src": "15067:18:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 15232,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15220,
                              "src": "15108:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14298,
                            "src": "15108:16:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 15234,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15220,
                              "src": "15147:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14301,
                            "src": "15147:13:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                              "typeString": "enum Trade.BuyingAssetType"
                            }
                          },
                          {
                            "expression": {
                              "id": 15236,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15220,
                              "src": "15183:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "unitPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14303,
                            "src": "15183:15:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 15238,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15220,
                              "src": "15221:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftOrderQuantity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14305,
                            "src": "15221:22:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 15240,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15220,
                              "src": "15266:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "skipRoyalty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14307,
                            "src": "15266:17:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "expression": {
                              "id": 15242,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15220,
                              "src": "15306:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "startDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14309,
                            "src": "15306:15:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 15244,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15220,
                              "src": "15344:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "endDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14311,
                            "src": "15344:13:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 15246,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15220,
                              "src": "15380:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14313,
                            "src": "15380:13:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                              "typeString": "enum Trade.BuyingAssetType"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 15226,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "14993:3:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 15227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "14993:16:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 15248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14993:419:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 15225,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "14965:9:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 15249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14965:462:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 15224,
                  "id": 15250,
                  "nodeType": "Return",
                  "src": "14945:482:74"
                }
              ]
            },
            "documentation": {
              "id": 15217,
              "nodeType": "StructuredDocumentation",
              "src": "14715:101:74",
              "text": "get Order Hash for seller.\n@param order ordervalues(seller, buyer,...)."
            },
            "functionSelector": "03365857",
            "id": 15252,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderSellerHash",
            "nameLocation": "14831:18:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15220,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "14865:5:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 15252,
                  "src": "14850:20:74",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                    "typeString": "struct Trade.Order"
                  },
                  "typeName": {
                    "id": 15219,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15218,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14322,
                      "src": "14850:5:74"
                    },
                    "referencedDeclaration": 14322,
                    "src": "14850:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14322_storage_ptr",
                      "typeString": "struct Trade.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14849:22:74"
            },
            "returnParameters": {
              "id": 15224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15223,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15252,
                  "src": "14920:7:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15222,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14920:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14919:9:74"
            },
            "scope": 15349,
            "src": "14822:613:74",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15283,
              "nodeType": "Block",
              "src": "15660:408:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 15264,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15256,
                              "src": "15758:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14294,
                            "src": "15758:11:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 15266,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15256,
                              "src": "15792:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "erc20Address",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14296,
                            "src": "15792:18:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 15268,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15256,
                              "src": "15833:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14298,
                            "src": "15833:16:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 15270,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15256,
                              "src": "15872:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14301,
                            "src": "15872:13:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                              "typeString": "enum Trade.BuyingAssetType"
                            }
                          },
                          {
                            "expression": {
                              "id": 15272,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15256,
                              "src": "15908:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "unitPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14303,
                            "src": "15908:15:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 15274,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15256,
                              "src": "15946:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14313,
                            "src": "15946:13:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 15276,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15256,
                              "src": "15982:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14315,
                            "src": "15982:12:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 15278,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15256,
                              "src": "16017:5:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                                "typeString": "struct Trade.Order calldata"
                              }
                            },
                            "id": 15279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "qty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14317,
                            "src": "16017:9:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_enum$_BuyingAssetType_$14229",
                              "typeString": "enum Trade.BuyingAssetType"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 15262,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "15719:3:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 15263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "15719:16:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 15280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15719:326:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 15261,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "15691:9:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 15281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15691:369:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 15260,
                  "id": 15282,
                  "nodeType": "Return",
                  "src": "15671:389:74"
                }
              ]
            },
            "documentation": {
              "id": 15253,
              "nodeType": "StructuredDocumentation",
              "src": "15443:100:74",
              "text": "get Order Hash for buyer.\n@param order ordervalues(seller, buyer,...)."
            },
            "functionSelector": "77c1b664",
            "id": 15284,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderBuyerHash",
            "nameLocation": "15558:17:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15256,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "15591:5:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 15284,
                  "src": "15576:20:74",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$14322_calldata_ptr",
                    "typeString": "struct Trade.Order"
                  },
                  "typeName": {
                    "id": 15255,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15254,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14322,
                      "src": "15576:5:74"
                    },
                    "referencedDeclaration": 14322,
                    "src": "15576:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$14322_storage_ptr",
                      "typeString": "struct Trade.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15575:22:74"
            },
            "returnParameters": {
              "id": 15260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15259,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15284,
                  "src": "15646:7:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15258,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15646:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15645:9:74"
            },
            "scope": 15349,
            "src": "15549:519:74",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15299,
              "nodeType": "Block",
              "src": "16148:209:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                            "id": 15294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16246:34:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                            },
                            "value": "\u0019Ethereum Signed Message:\n32"
                          },
                          {
                            "id": 15295,
                            "name": "_messageHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15286,
                            "src": "16303:12:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 15292,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "16207:3:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 15293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "16207:16:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 15296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16207:127:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 15291,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "16179:9:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 15297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16179:170:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 15290,
                  "id": 15298,
                  "nodeType": "Return",
                  "src": "16159:190:74"
                }
              ]
            },
            "id": 15300,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prefixed",
            "nameLocation": "16085:8:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15286,
                  "mutability": "mutable",
                  "name": "_messageHash",
                  "nameLocation": "16102:12:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 15300,
                  "src": "16094:20:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15285,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16094:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16093:22:74"
            },
            "returnParameters": {
              "id": 15290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15289,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15300,
                  "src": "16139:7:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15288,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16139:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16138:9:74"
            },
            "scope": 15349,
            "src": "16076:281:74",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15326,
              "nodeType": "Block",
              "src": "16505:137:74",
              "statements": [
                {
                  "assignments": [15310, 15312, 15314],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15310,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "16525:1:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 15326,
                      "src": "16517:9:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 15309,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "16517:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 15312,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "16536:1:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 15326,
                      "src": "16528:9:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 15311,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "16528:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 15314,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "16545:1:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 15326,
                      "src": "16539:7:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 15313,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "16539:5:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15318,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 15316,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15304,
                        "src": "16565:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 15315,
                      "name": "splitSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15348,
                      "src": "16550:14:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$_t_bytes32_$_t_uint8_$",
                        "typeString": "function (bytes memory) pure returns (bytes32,bytes32,uint8)"
                      }
                    },
                    "id": 15317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16550:26:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint8_$",
                      "typeString": "tuple(bytes32,bytes32,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16516:60:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15320,
                        "name": "_signedMessageHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15302,
                        "src": "16606:18:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 15321,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15314,
                        "src": "16626:1:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 15322,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15310,
                        "src": "16629:1:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 15323,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15312,
                        "src": "16632:1:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 15319,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967290,
                      "src": "16596:9:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 15324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16596:38:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 15308,
                  "id": 15325,
                  "nodeType": "Return",
                  "src": "16589:45:74"
                }
              ]
            },
            "id": 15327,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recoverSigner",
            "nameLocation": "16374:13:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15302,
                  "mutability": "mutable",
                  "name": "_signedMessageHash",
                  "nameLocation": "16396:18:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 15327,
                  "src": "16388:26:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15301,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16388:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15304,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "16429:10:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 15327,
                  "src": "16416:23:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15303,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16416:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16387:53:74"
            },
            "returnParameters": {
              "id": 15308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15307,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15327,
                  "src": "16491:7:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16491:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16490:9:74"
            },
            "scope": 15349,
            "src": "16365:277:74",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15347,
              "nodeType": "Block",
              "src": "16828:715:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 15339,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15329,
                            "src": "16847:3:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 15340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "16847:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 15341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16861:2:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "16847:16:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964207369676e6174757265206c656e677468",
                        "id": 15343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16865:26:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
                          "typeString": "literal_string \"invalid signature length\""
                        },
                        "value": "invalid signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
                          "typeString": "literal_string \"invalid signature length\""
                        }
                      ],
                      "id": 15338,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "16839:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16839:53:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15345,
                  "nodeType": "ExpressionStatement",
                  "src": "16839:53:74"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "16914:580:74",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "17281:24:74",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "sig",
                                  "nodeType": "YulIdentifier",
                                  "src": "17296:3:74"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "17301:2:74",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "17292:3:74"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17292:12:74"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "17286:5:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17286:19:74"
                        },
                        "variableNames": [
                          {
                            "name": "r",
                            "nodeType": "YulIdentifier",
                            "src": "17281:1:74"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "17351:24:74",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "sig",
                                  "nodeType": "YulIdentifier",
                                  "src": "17366:3:74"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "17371:2:74",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "17362:3:74"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17362:12:74"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "17356:5:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17356:19:74"
                        },
                        "variableNames": [
                          {
                            "name": "s",
                            "nodeType": "YulIdentifier",
                            "src": "17351:1:74"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "17450:33:74",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17460:1:74",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "sig",
                                      "nodeType": "YulIdentifier",
                                      "src": "17473:3:74"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "17478:2:74",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "17469:3:74"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "17469:12:74"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "17463:5:74"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17463:19:74"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "17455:4:74"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17455:28:74"
                        },
                        "variableNames": [
                          {
                            "name": "v",
                            "nodeType": "YulIdentifier",
                            "src": "17450:1:74"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 15332,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "17281:1:74",
                      "valueSize": 1
                    },
                    {
                      "declaration": 15334,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "17351:1:74",
                      "valueSize": 1
                    },
                    {
                      "declaration": 15329,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "17296:3:74",
                      "valueSize": 1
                    },
                    {
                      "declaration": 15329,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "17366:3:74",
                      "valueSize": 1
                    },
                    {
                      "declaration": 15329,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "17473:3:74",
                      "valueSize": 1
                    },
                    {
                      "declaration": 15336,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "17450:1:74",
                      "valueSize": 1
                    }
                  ],
                  "id": 15346,
                  "nodeType": "InlineAssembly",
                  "src": "16905:589:74"
                }
              ]
            },
            "id": 15348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "splitSignature",
            "nameLocation": "16659:14:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15329,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "16687:3:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 15348,
                  "src": "16674:16:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15328,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16674:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16673:18:74"
            },
            "returnParameters": {
              "id": 15337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15332,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "16764:1:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 15348,
                  "src": "16756:9:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15331,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16756:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15334,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "16788:1:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 15348,
                  "src": "16780:9:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15333,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16780:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15336,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "16810:1:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 15348,
                  "src": "16804:7:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 15335,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "16804:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16741:81:74"
            },
            "scope": 15349,
            "src": "16650:893:74",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 15350,
        "src": "230:17316:74",
        "usedErrors": []
      }
    ],
    "src": "40:17508:74"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-08-10T13:39:05.056Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "buyAsset((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "params": {
          "order": "ordervalues(seller, buyer,...)."
        }
      },
      "cancelOrder((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "params": {
          "order": "ordervalues(seller, buyer,...). this will cancel the invalid use of sign order data"
        }
      },
      "deliverNFT((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "params": {
          "order": "ordervalues(seller, buyer,...)."
        }
      },
      "getOrderBuyerHash((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "params": {
          "order": "ordervalues(seller, buyer,...)."
        }
      },
      "getOrderSellerHash((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "params": {
          "order": "ordervalues(seller, buyer,...)."
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "buyAsset((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "notice": "excuting the NFT order."
      },
      "buyerServiceFee()": {
        "notice": "returns the buyerservice Fee in multiply of 1000."
      },
      "cancelOrder((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "notice": "cancel Order."
      },
      "deliverNFT((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "notice": "transfers the NFTs by external wallets"
      },
      "getOrderBuyerHash((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "notice": "get Order Hash for buyer."
      },
      "getOrderSellerHash((address,address,address,address,uint8,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "notice": "get Order Hash for seller."
      },
      "isOrderClosed(bytes32)": {
        "notice": "returns the whether the order is already exists or not."
      },
      "sellerServiceFee()": {
        "notice": "returns the sellerservice Fee in multiply of 1000."
      },
      "setBuyerServiceFee(uint8)": {
        "notice": "returns the buyerservice Fee in multiply of 1000."
      },
      "setSellerServiceFee(uint8)": {
        "notice": "returns the sellerservice Fee in multiply of 1000."
      },
      "setSigner(address)": {
        "notice": "set the signer in address."
      }
    },
    "version": 1
  }
}
