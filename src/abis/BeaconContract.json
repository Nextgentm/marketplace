{
  "contractName": "BeaconContract",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_initLogic",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newLogic",
          "type": "address"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initLogic\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newLogic\",\"type\":\"address\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/BeaconContract.sol\":\"BeaconContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x6ec71aef5659f3f74011169948d2fcda8c6599be5bb38f986380a8737f96cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://362f12aebd1022d643235e6a7fa6ccfb38c13f3a0d1b006d5d1aea51af4bb852\",\"dweb:/ipfs/QmSUQ7pM4UnBawMfP2Di8EqawxaoU195DgsSLxHejvSpPz\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/src/contracts/BeaconContract.sol\":{\"keccak256\":\"0x0936810c2ded39aaa17f73b49c91f6e5bb2a1a0a9399984b5ffe5dc8d4f9bf55\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e287f0f3f2f8ea41f3be61ec9f92dd4e811b28d374f43d1da1fc1617bcd75279\",\"dweb:/ipfs/QmNXKFa2dxepPxDHk7pEST4towJpuyqX86623u6WU5UzGU\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610abf380380610abf83398101604081905261002f916101dd565b610038336100a6565b80604051610045906101d0565b6001600160a01b039091168152602001604051809103906000f080158015610071573d6000803e3d6000fd5b506001600160a01b03908116608052600180546001600160a01b0319169183169190911790556100a0326100f6565b5061020d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100fe610174565b6001600160a01b0381166101685760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610171816100a6565b50565b6000546001600160a01b031633146101ce5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161015f565b565b61052f8061059083390190565b6000602082840312156101ef57600080fd5b81516001600160a01b038116811461020657600080fd5b9392505050565b608051610368610228600039600061011601526103686000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063715018a611610050578063715018a6146100aa5780638da5cb5b146100b2578063f2fde38b146100c357600080fd5b80631c1b87721461006c5780635c60da1b14610081575b600080fd5b61007f61007a366004610302565b6100d6565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61007f6101a2565b6000546001600160a01b031661008e565b61007f6100d1366004610302565b6101b6565b6100de61024b565b6040517f3659cfe60000000000000000000000000000000000000000000000000000000081526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690633659cfe690602401600060405180830381600087803b15801561015a57600080fd5b505af115801561016e573d6000803e3d6000fd5b50506001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0394909416939093179092555050565b6101aa61024b565b6101b460006102a5565b565b6101be61024b565b6001600160a01b03811661023f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610248816102a5565b50565b6000546001600160a01b031633146101b45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610236565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561031457600080fd5b81356001600160a01b038116811461032b57600080fd5b939250505056fea264697066735822122000c50683b3f7a69155ed44d4728a2710cfa0434d447b75cf0baea6d7699edcc964736f6c634300080e0033608060405234801561001057600080fd5b5060405161052f38038061052f83398101604081905261002f91610151565b61003833610047565b61004181610097565b50610181565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100aa8161014260201b6101c71760201c565b6101205760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03163b151590565b60006020828403121561016357600080fd5b81516001600160a01b038116811461017a57600080fd5b9392505050565b61039f806101906000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063715018a611610050578063715018a6146100aa5780638da5cb5b146100b2578063f2fde38b146100c357600080fd5b80633659cfe61461006c5780635c60da1b14610081575b600080fd5b61007f61007a366004610339565b6100d6565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61007f61011e565b6000546001600160a01b031661008e565b61007f6100d1366004610339565b610132565b6100de6101d6565b6100e781610230565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6101266101d6565b61013060006102dc565b565b61013a6101d6565b6001600160a01b0381166101bb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6101c4816102dc565b50565b6001600160a01b03163b151590565b6000546001600160a01b031633146101305760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101b2565b6001600160a01b0381163b6102ad5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e74726163740000000000000000000000000060648201526084016101b2565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561034b57600080fd5b81356001600160a01b038116811461036257600080fd5b939250505056fea2646970667358221220980c1bb9372a223e46fdec03561ec3031f57c8d23afc5d38c6d9aa03ce25a61864736f6c634300080e0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c8063715018a611610050578063715018a6146100aa5780638da5cb5b146100b2578063f2fde38b146100c357600080fd5b80631c1b87721461006c5780635c60da1b14610081575b600080fd5b61007f61007a366004610302565b6100d6565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61007f6101a2565b6000546001600160a01b031661008e565b61007f6100d1366004610302565b6101b6565b6100de61024b565b6040517f3659cfe60000000000000000000000000000000000000000000000000000000081526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690633659cfe690602401600060405180830381600087803b15801561015a57600080fd5b505af115801561016e573d6000803e3d6000fd5b50506001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0394909416939093179092555050565b6101aa61024b565b6101b460006102a5565b565b6101be61024b565b6001600160a01b03811661023f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610248816102a5565b50565b6000546001600160a01b031633146101b45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610236565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561031457600080fd5b81356001600160a01b038116811461032b57600080fd5b939250505056fea264697066735822122000c50683b3f7a69155ed44d4728a2710cfa0434d447b75cf0baea6d7699edcc964736f6c634300080e0033",
  "immutableReferences": {
    "11687": [
      {
        "length": 32,
        "start": 278
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1282:75",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:75",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:75"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:75"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:75"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:75",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:75",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:75"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:75"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:75",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:75"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:75"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:75"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:75"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:75",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:75",
                "type": ""
              }
            ],
            "src": "14:290:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "410:102:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "420:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "432:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "443:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "428:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "428:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "420:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "462:9:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "477:6:75"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "493:3:75",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "498:1:75",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "489:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "489:11:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "502:1:75",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "485:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "485:19:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "473:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "473:32:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "455:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "455:51:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "455:51:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "379:9:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "390:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "401:4:75",
                "type": ""
              }
            ],
            "src": "309:203:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "691:228:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "708:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "719:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "701:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "701:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "701:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "742:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "753:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "738:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "738:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "758:2:75",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "731:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "731:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "731:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "781:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "792:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "777:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "777:18:75"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "797:34:75",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "770:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "770:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "770:62:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "852:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "863:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "848:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "848:18:75"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "868:8:75",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "841:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "841:36:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "841:36:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "886:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "898:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "909:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "894:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "894:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "886:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "668:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "682:4:75",
                "type": ""
              }
            ],
            "src": "517:402:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1098:182:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1115:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1126:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1108:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1108:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1108:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1149:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1160:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1145:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1145:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1165:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1138:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1138:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1138:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1188:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1199:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1184:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1184:18:75"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1204:34:75",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1177:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1177:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1177:62:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1248:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1260:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1271:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1256:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1256:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1248:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1075:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1089:4:75",
                "type": ""
              }
            ],
            "src": "924:356:75"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 75,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1324:75",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:75",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:239:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:75"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "277:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "286:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "289:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "279:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "279:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "279:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:75"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "231:42:75",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:54:75"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:65:75"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:73:75"
                  },
                  "nodeType": "YulIf",
                  "src": "200:93:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "302:15:75",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "312:5:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "302:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:75",
                "type": ""
              }
            ],
            "src": "14:309:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "429:125:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "439:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "451:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "462:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "447:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "447:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "439:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "481:9:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "496:6:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "504:42:75",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "492:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "492:55:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "474:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "474:74:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "474:74:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "398:9:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "409:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "420:4:75",
                "type": ""
              }
            ],
            "src": "328:226:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "733:228:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "750:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "761:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "743:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "743:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "743:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "784:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "795:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "780:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "780:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "800:2:75",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "773:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "773:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "773:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "823:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "834:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "819:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "819:18:75"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "839:34:75",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "812:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "812:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "812:62:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "894:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "905:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "890:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "890:18:75"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "910:8:75",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "883:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "883:36:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "883:36:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "928:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "940:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "951:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "936:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "936:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "928:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "710:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "724:4:75",
                "type": ""
              }
            ],
            "src": "559:402:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1140:182:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1157:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1168:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1150:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1150:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1150:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1191:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1202:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1187:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1187:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1207:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1180:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1180:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1180:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1230:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1241:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1226:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1226:18:75"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1246:34:75",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1219:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1219:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1219:62:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1290:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1302:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1313:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1298:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1298:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1290:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1117:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1131:4:75",
                "type": ""
              }
            ],
            "src": "966:356:75"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 75,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "253:534:63:-:0;;;379:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:32;719:10:57;936:18:32;:32::i;:::-;451:10:63;429:33;;;;;:::i;:::-;-1:-1:-1;;;;;473:32:75;;;455:51;;443:2;428:18;429:33:63;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;422:40:63;;;;;473:5;:16;;-1:-1:-1;;;;;;473:16:63;;;;;;;;;;500:28;518:9;500:17;:28::i;:::-;379:157;253:534;;2433:187:32;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:32;;;-1:-1:-1;;;;;;2541:17:32;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;2081:198::-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:32;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:32;;719:2:75;2161:73:32::1;::::0;::::1;701:21:75::0;758:2;738:18;;;731:30;797:34;777:18;;;770:62;-1:-1:-1;;;848:18:75;;;841:36;894:19;;2161:73:32::1;;;;;;;;;2244:28;2263:8:::0;2244:18:::1;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:32;719:10:57;1422:23:32;1414:68;;;;-1:-1:-1;;;1414:68:32;;1126:2:75;1414:68:32;;;1108:21:75;;;1145:18;;;1138:30;1204:34;1184:18;;;1177:62;1256:18;;1414:68:32;924:356:75;1414:68:32;1359:130::o;253:534:63:-;;;;;;;;:::o;14:290:75:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:75;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:75:o;924:356::-;253:534:63;;;;;;;;;;;;",
  "deployedSourceMap": "253:534:63:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:147;;;;;;:::i;:::-;;:::i;:::-;;699:85;771:5;;-1:-1:-1;;;;;771:5:63;699:85;;;-1:-1:-1;;;;;492:55:75;;;474:74;;462:2;447:18;699:85:63;;;;;;;1831:101:32;;;:::i;1201:85::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:32;1201:85;;2081:198;;;;;;:::i;:::-;;:::i;544:147:63:-;1094:13:32;:11;:13::i;:::-;630:27:63::1;::::0;;;;-1:-1:-1;;;;;492:55:75;;;630:27:63::1;::::0;::::1;474:74:75::0;630:6:63::1;:16;::::0;::::1;::::0;447:18:75;;630:27:63::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;668:5:63::1;:15:::0;;-1:-1:-1;;668:15:63::1;-1:-1:-1::0;;;;;668:15:63;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;544:147:63:o;1831:101:32:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2081:198::-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:32;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:32;;761:2:75;2161:73:32::1;::::0;::::1;743:21:75::0;800:2;780:18;;;773:30;839:34;819:18;;;812:62;910:8;890:18;;;883:36;936:19;;2161:73:32::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:32;719:10:57;1422:23:32;1414:68;;;;-1:-1:-1;;;1414:68:32;;1168:2:75;1414:68:32;;;1150:21:75;;;1187:18;;;1180:30;1246:34;1226:18;;;1219:62;1298:18;;1414:68:32;966:356:75;2433:187:32;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:32;;;-1:-1:-1;;2541:17:32;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:309:75:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;-1:-1:-1;;;;;224:5:75;220:54;213:5;210:65;200:93;;289:1;286;279:12;200:93;312:5;14:309;-1:-1:-1;;;14:309:75:o",
  "source": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.14;\r\n\r\nimport \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\";\r\nimport \"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract BeaconContract is Ownable, IBeacon {\r\n\r\n    UpgradeableBeacon immutable beacon;\r\n\r\n    address private logic;\r\n\r\n    constructor(address _initLogic) {\r\n        beacon=new UpgradeableBeacon(_initLogic);\r\n        logic=_initLogic;\r\n        transferOwnership(tx.origin);\r\n    }\r\n\r\n    function update(address _newLogic)\r\n        public\r\n        onlyOwner\r\n    {\r\n        beacon.upgradeTo(_newLogic);\r\n        logic=_newLogic;\r\n    }\r\n\r\n    function implementation() public view returns(address){\r\n        return logic;\r\n    }\r\n}\r\n",
  "sourcePath": "Z:\\Github\\marketplace\\src\\contracts\\BeaconContract.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/BeaconContract.sol",
    "exportedSymbols": {
      "Address": [10517],
      "BeaconContract": [11739],
      "Context": [10539],
      "IBeacon": [6848],
      "Ownable": [6364],
      "UpgradeableBeacon": [6923]
    },
    "id": 11740,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11677,
        "literals": ["solidity", "0.8", ".14"],
        "nodeType": "PragmaDirective",
        "src": "40:23:63"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "file": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "id": 11678,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11740,
        "sourceUnit": 6924,
        "src": "67:68:63",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "file": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "id": 11679,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11740,
        "sourceUnit": 6849,
        "src": "137:58:63",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 11680,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11740,
        "sourceUnit": 6365,
        "src": "197:52:63",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11681,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6364,
              "src": "280:7:63"
            },
            "id": 11682,
            "nodeType": "InheritanceSpecifier",
            "src": "280:7:63"
          },
          {
            "baseName": {
              "id": 11683,
              "name": "IBeacon",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6848,
              "src": "289:7:63"
            },
            "id": 11684,
            "nodeType": "InheritanceSpecifier",
            "src": "289:7:63"
          }
        ],
        "canonicalName": "BeaconContract",
        "contractDependencies": [6923],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 11739,
        "linearizedBaseContracts": [11739, 6848, 6364, 10539],
        "name": "BeaconContract",
        "nameLocation": "262:14:63",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 11687,
            "mutability": "immutable",
            "name": "beacon",
            "nameLocation": "334:6:63",
            "nodeType": "VariableDeclaration",
            "scope": 11739,
            "src": "306:34:63",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_UpgradeableBeacon_$6923",
              "typeString": "contract UpgradeableBeacon"
            },
            "typeName": {
              "id": 11686,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11685,
                "name": "UpgradeableBeacon",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6923,
                "src": "306:17:63"
              },
              "referencedDeclaration": 6923,
              "src": "306:17:63",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UpgradeableBeacon_$6923",
                "typeString": "contract UpgradeableBeacon"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 11689,
            "mutability": "mutable",
            "name": "logic",
            "nameLocation": "365:5:63",
            "nodeType": "VariableDeclaration",
            "scope": 11739,
            "src": "349:21:63",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11688,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "349:7:63",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 11711,
              "nodeType": "Block",
              "src": "411:125:63",
              "statements": [
                {
                  "expression": {
                    "id": 11700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11694,
                      "name": "beacon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11687,
                      "src": "422:6:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UpgradeableBeacon_$6923",
                        "typeString": "contract UpgradeableBeacon"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 11698,
                          "name": "_initLogic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11691,
                          "src": "451:10:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 11697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "429:21:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_UpgradeableBeacon_$6923_$",
                          "typeString": "function (address) returns (contract UpgradeableBeacon)"
                        },
                        "typeName": {
                          "id": 11696,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 11695,
                            "name": "UpgradeableBeacon",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 6923,
                            "src": "433:17:63"
                          },
                          "referencedDeclaration": 6923,
                          "src": "433:17:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UpgradeableBeacon_$6923",
                            "typeString": "contract UpgradeableBeacon"
                          }
                        }
                      },
                      "id": 11699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "429:33:63",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UpgradeableBeacon_$6923",
                        "typeString": "contract UpgradeableBeacon"
                      }
                    },
                    "src": "422:40:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UpgradeableBeacon_$6923",
                      "typeString": "contract UpgradeableBeacon"
                    }
                  },
                  "id": 11701,
                  "nodeType": "ExpressionStatement",
                  "src": "422:40:63"
                },
                {
                  "expression": {
                    "id": 11704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11702,
                      "name": "logic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11689,
                      "src": "473:5:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11703,
                      "name": "_initLogic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11691,
                      "src": "479:10:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "473:16:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11705,
                  "nodeType": "ExpressionStatement",
                  "src": "473:16:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11707,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967270,
                          "src": "518:2:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 11708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "518:9:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11706,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6343,
                      "src": "500:17:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 11709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "500:28:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11710,
                  "nodeType": "ExpressionStatement",
                  "src": "500:28:63"
                }
              ]
            },
            "id": 11712,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11691,
                  "mutability": "mutable",
                  "name": "_initLogic",
                  "nameLocation": "399:10:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 11712,
                  "src": "391:18:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "391:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "390:20:63"
            },
            "returnParameters": {
              "id": 11693,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "411:0:63"
            },
            "scope": 11739,
            "src": "379:157:63",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11729,
              "nodeType": "Block",
              "src": "619:72:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11722,
                        "name": "_newLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11714,
                        "src": "647:9:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11719,
                        "name": "beacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11687,
                        "src": "630:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableBeacon_$6923",
                          "typeString": "contract UpgradeableBeacon"
                        }
                      },
                      "id": 11721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "upgradeTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6903,
                      "src": "630:16:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 11723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "630:27:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11724,
                  "nodeType": "ExpressionStatement",
                  "src": "630:27:63"
                },
                {
                  "expression": {
                    "id": 11727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11725,
                      "name": "logic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11689,
                      "src": "668:5:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11726,
                      "name": "_newLogic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11714,
                      "src": "674:9:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "668:15:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11728,
                  "nodeType": "ExpressionStatement",
                  "src": "668:15:63"
                }
              ]
            },
            "functionSelector": "1c1b8772",
            "id": 11730,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11717,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11716,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6283,
                  "src": "604:9:63"
                },
                "nodeType": "ModifierInvocation",
                "src": "604:9:63"
              }
            ],
            "name": "update",
            "nameLocation": "553:6:63",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11714,
                  "mutability": "mutable",
                  "name": "_newLogic",
                  "nameLocation": "568:9:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 11730,
                  "src": "560:17:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "560:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "559:19:63"
            },
            "returnParameters": {
              "id": 11718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "619:0:63"
            },
            "scope": 11739,
            "src": "544:147:63",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [6847],
            "body": {
              "id": 11737,
              "nodeType": "Block",
              "src": "753:31:63",
              "statements": [
                {
                  "expression": {
                    "id": 11735,
                    "name": "logic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11689,
                    "src": "771:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 11734,
                  "id": 11736,
                  "nodeType": "Return",
                  "src": "764:12:63"
                }
              ]
            },
            "functionSelector": "5c60da1b",
            "id": 11738,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nameLocation": "708:14:63",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "722:2:63"
            },
            "returnParameters": {
              "id": 11734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11733,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11738,
                  "src": "745:7:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11732,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "744:9:63"
            },
            "scope": 11739,
            "src": "699:85:63",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11740,
        "src": "253:534:63",
        "usedErrors": []
      }
    ],
    "src": "40:749:63"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xD60a9535AeF0912500bb8AeC41a59c018fa99a54",
      "transactionHash": "0x1361868f45fc1608cd51867318879b34c14531cdc22b1864faea64c0c9c51b88"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-08-14T08:45:34.589Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "implementation()": {
        "details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}
