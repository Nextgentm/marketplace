{
  "contractName": "ERC2981",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first. Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the fee is specified in basis points by default. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/common/ERC2981.sol\":\"ERC2981\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/src/contracts/common/ERC2981.sol\":{\"keccak256\":\"0xf706d95f67a4db41d4cc4e8af6cecb2e46e79f74a1c5f89aa906470568b9d7b8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://495a0c499e43ab89ee0f89de7ef126d6272880d57632689392f44f24f74c8393\",\"dweb:/ipfs/QmcMdwmxLDwLseqPKZA6n5oVWJL3H3rWMqNUkBBpRezxfi\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.14;\n\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC2981.sol\";\n\n/**\n * @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n *\n * Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n * specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n *\n * Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n * fee is specified in basis points by default.\n *\n * IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n * https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to\n * voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n *\n * _Available since v4.5._\n */\n\nabstract contract ERC2981 is IERC2981, ERC165 {\n    struct RoyaltyInfo {\n        address receiver;\n        uint96 royaltyFraction;\n    }\n\n    mapping(uint256 => RoyaltyInfo) private _tokenRoyaltyInfo;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(IERC165, ERC165)\n        returns (bool)\n    {\n        return\n            interfaceId == type(IERC2981).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @inheritdoc IERC2981\n     */\n    function royaltyInfo(uint256 _tokenId, uint256 _salePrice)\n        public\n        view\n        virtual\n        override\n        returns (address, uint256)\n    {\n        RoyaltyInfo memory royalty = _tokenRoyaltyInfo[_tokenId];\n\n        uint256 royaltyAmount = (_salePrice * royalty.royaltyFraction) /\n            _feeDenominator();\n\n        return (royalty.receiver, royaltyAmount);\n    }\n\n    /**\n     * @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n     * fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n     * override.\n     */\n    function _feeDenominator() internal pure virtual returns (uint96) {\n        return 1000;\n    }\n\n    /**\n     * @dev Sets the royalty information for a specific token id, overriding the global default.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setTokenRoyalty(\n        uint256 tokenId,\n        address receiver,\n        uint96 feeNumerator\n    ) internal virtual {\n        require(\n            feeNumerator <= _feeDenominator(),\n            \"ERC2981: royalty fee will exceed salePrice\"\n        );\n        require(receiver != address(0), \"ERC2981: Invalid parameters\");\n\n        _tokenRoyaltyInfo[tokenId] = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Resets royalty information for the token id back to the global default.\n     */\n    function _resetTokenRoyalty(uint256 tokenId) internal virtual {\n        delete _tokenRoyaltyInfo[tokenId];\n    }\n}\n",
  "sourcePath": "/Users/mujtabasiddiqui/Desktop/Mujtaba/lootmogul/marketplace/src/contracts/common/ERC2981.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/common/ERC2981.sol",
    "exportedSymbols": {
      "ERC165": [
        11233
      ],
      "ERC2981": [
        14652
      ],
      "IERC165": [
        11245
      ],
      "IERC2981": [
        6726
      ]
    },
    "id": 14653,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14514,
        "literals": [
          "solidity",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:77"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "id": 14515,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14653,
        "sourceUnit": 11234,
        "src": "64:64:77",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/interfaces/IERC2981.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC2981.sol",
        "id": 14516,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14653,
        "sourceUnit": 6727,
        "src": "129:57:77",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 14518,
              "name": "IERC2981",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6726,
              "src": "1093:8:77"
            },
            "id": 14519,
            "nodeType": "InheritanceSpecifier",
            "src": "1093:8:77"
          },
          {
            "baseName": {
              "id": 14520,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11233,
              "src": "1103:6:77"
            },
            "id": 14521,
            "nodeType": "InheritanceSpecifier",
            "src": "1103:6:77"
          }
        ],
        "canonicalName": "ERC2981",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 14517,
          "nodeType": "StructuredDocumentation",
          "src": "188:874:77",
          "text": " @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n fee is specified in basis points by default.\n IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to\n voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n _Available since v4.5._"
        },
        "fullyImplemented": true,
        "id": 14652,
        "linearizedBaseContracts": [
          14652,
          11233,
          6726,
          11245
        ],
        "name": "ERC2981",
        "nameLocation": "1082:7:77",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ERC2981.RoyaltyInfo",
            "id": 14526,
            "members": [
              {
                "constant": false,
                "id": 14523,
                "mutability": "mutable",
                "name": "receiver",
                "nameLocation": "1153:8:77",
                "nodeType": "VariableDeclaration",
                "scope": 14526,
                "src": "1145:16:77",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14522,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1145:7:77",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14525,
                "mutability": "mutable",
                "name": "royaltyFraction",
                "nameLocation": "1178:15:77",
                "nodeType": "VariableDeclaration",
                "scope": 14526,
                "src": "1171:22:77",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 14524,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "1171:6:77",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RoyaltyInfo",
            "nameLocation": "1123:11:77",
            "nodeType": "StructDefinition",
            "scope": 14652,
            "src": "1116:84:77",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14531,
            "mutability": "mutable",
            "name": "_tokenRoyaltyInfo",
            "nameLocation": "1246:17:77",
            "nodeType": "VariableDeclaration",
            "scope": 14652,
            "src": "1206:57:77",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$14526_storage_$",
              "typeString": "mapping(uint256 => struct ERC2981.RoyaltyInfo)"
            },
            "typeName": {
              "id": 14530,
              "keyType": {
                "id": 14527,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1214:7:77",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1206:31:77",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$14526_storage_$",
                "typeString": "mapping(uint256 => struct ERC2981.RoyaltyInfo)"
              },
              "valueType": {
                "id": 14529,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 14528,
                  "name": "RoyaltyInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14526,
                  "src": "1225:11:77"
                },
                "referencedDeclaration": 14526,
                "src": "1225:11:77",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RoyaltyInfo_$14526_storage_ptr",
                  "typeString": "struct ERC2981.RoyaltyInfo"
                }
              }
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              11232,
              11244
            ],
            "body": {
              "id": 14554,
              "nodeType": "Block",
              "src": "1483:129:77",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 14552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 14547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 14542,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14534,
                        "src": "1512:11:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 14544,
                              "name": "IERC2981",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6726,
                              "src": "1532:8:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$6726_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$6726_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            ],
                            "id": 14543,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967269,
                            "src": "1527:4:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 14545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1527:14:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981_$6726",
                            "typeString": "type(contract IERC2981)"
                          }
                        },
                        "id": 14546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "1527:26:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "1512:41:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 14550,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14534,
                          "src": "1593:11:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 14548,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967271,
                          "src": "1569:5:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC2981_$14652_$",
                            "typeString": "type(contract super ERC2981)"
                          }
                        },
                        "id": 14549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11232,
                        "src": "1569:23:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 14551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1569:36:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1512:93:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 14541,
                  "id": 14553,
                  "nodeType": "Return",
                  "src": "1493:112:77"
                }
              ]
            },
            "documentation": {
              "id": 14532,
              "nodeType": "StructuredDocumentation",
              "src": "1270:56:77",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 14555,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1340:17:77",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14538,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 14536,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11245,
                  "src": "1439:7:77"
                },
                {
                  "id": 14537,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11233,
                  "src": "1448:6:77"
                }
              ],
              "src": "1430:25:77"
            },
            "parameters": {
              "id": 14535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14534,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1365:11:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 14555,
                  "src": "1358:18:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 14533,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1358:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1357:20:77"
            },
            "returnParameters": {
              "id": 14541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14540,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14555,
                  "src": "1473:4:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14539,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1473:4:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1472:6:77"
            },
            "scope": 14652,
            "src": "1331:281:77",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6725
            ],
            "body": {
              "id": 14591,
              "nodeType": "Block",
              "src": "1821:229:77",
              "statements": [
                {
                  "assignments": [
                    14570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14570,
                      "mutability": "mutable",
                      "name": "royalty",
                      "nameLocation": "1850:7:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 14591,
                      "src": "1831:26:77",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RoyaltyInfo_$14526_memory_ptr",
                        "typeString": "struct ERC2981.RoyaltyInfo"
                      },
                      "typeName": {
                        "id": 14569,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14568,
                          "name": "RoyaltyInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14526,
                          "src": "1831:11:77"
                        },
                        "referencedDeclaration": 14526,
                        "src": "1831:11:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RoyaltyInfo_$14526_storage_ptr",
                          "typeString": "struct ERC2981.RoyaltyInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14574,
                  "initialValue": {
                    "baseExpression": {
                      "id": 14571,
                      "name": "_tokenRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14531,
                      "src": "1860:17:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$14526_storage_$",
                        "typeString": "mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"
                      }
                    },
                    "id": 14573,
                    "indexExpression": {
                      "id": 14572,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14558,
                      "src": "1878:8:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1860:27:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RoyaltyInfo_$14526_storage",
                      "typeString": "struct ERC2981.RoyaltyInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1831:56:77"
                },
                {
                  "assignments": [
                    14576
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14576,
                      "mutability": "mutable",
                      "name": "royaltyAmount",
                      "nameLocation": "1906:13:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 14591,
                      "src": "1898:21:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14575,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1898:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14585,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 14577,
                            "name": "_salePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14560,
                            "src": "1923:10:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "expression": {
                              "id": 14578,
                              "name": "royalty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14570,
                              "src": "1936:7:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RoyaltyInfo_$14526_memory_ptr",
                                "typeString": "struct ERC2981.RoyaltyInfo memory"
                              }
                            },
                            "id": 14579,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "royaltyFraction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14525,
                            "src": "1936:23:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "1923:36:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 14581,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1922:38:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 14582,
                        "name": "_feeDenominator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14601,
                        "src": "1975:15:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint96_$",
                          "typeString": "function () pure returns (uint96)"
                        }
                      },
                      "id": 14583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1975:17:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "1922:70:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1898:94:77"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 14586,
                          "name": "royalty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14570,
                          "src": "2011:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RoyaltyInfo_$14526_memory_ptr",
                            "typeString": "struct ERC2981.RoyaltyInfo memory"
                          }
                        },
                        "id": 14587,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "receiver",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14523,
                        "src": "2011:16:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14588,
                        "name": "royaltyAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14576,
                        "src": "2029:13:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 14589,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2010:33:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "functionReturnParameters": 14567,
                  "id": 14590,
                  "nodeType": "Return",
                  "src": "2003:40:77"
                }
              ]
            },
            "documentation": {
              "id": 14556,
              "nodeType": "StructuredDocumentation",
              "src": "1618:39:77",
              "text": " @inheritdoc IERC2981"
            },
            "functionSelector": "2a55205a",
            "id": 14592,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "royaltyInfo",
            "nameLocation": "1671:11:77",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14562,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1773:8:77"
            },
            "parameters": {
              "id": 14561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14558,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1691:8:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 14592,
                  "src": "1683:16:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1683:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14560,
                  "mutability": "mutable",
                  "name": "_salePrice",
                  "nameLocation": "1709:10:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 14592,
                  "src": "1701:18:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1701:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1682:38:77"
            },
            "returnParameters": {
              "id": 14567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14564,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14592,
                  "src": "1799:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1799:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14566,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14592,
                  "src": "1808:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1808:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1798:18:77"
            },
            "scope": 14652,
            "src": "1662:388:77",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14600,
              "nodeType": "Block",
              "src": "2391:28:77",
              "statements": [
                {
                  "expression": {
                    "hexValue": "31303030",
                    "id": 14598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2408:4:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    },
                    "value": "1000"
                  },
                  "functionReturnParameters": 14597,
                  "id": 14599,
                  "nodeType": "Return",
                  "src": "2401:11:77"
                }
              ]
            },
            "documentation": {
              "id": 14593,
              "nodeType": "StructuredDocumentation",
              "src": "2056:264:77",
              "text": " @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n override."
            },
            "id": 14601,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_feeDenominator",
            "nameLocation": "2334:15:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2349:2:77"
            },
            "returnParameters": {
              "id": 14597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14596,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14601,
                  "src": "2383:6:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 14595,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "2383:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2382:8:77"
            },
            "scope": 14652,
            "src": "2325:94:77",
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14638,
              "nodeType": "Block",
              "src": "2818:286:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "id": 14615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14612,
                          "name": "feeNumerator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14608,
                          "src": "2849:12:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 14613,
                            "name": "_feeDenominator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14601,
                            "src": "2865:15:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint96_$",
                              "typeString": "function () pure returns (uint96)"
                            }
                          },
                          "id": 14614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2865:17:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "src": "2849:33:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323938313a20726f79616c7479206665652077696c6c206578636565642073616c655072696365",
                        "id": 14616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2896:44:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dcda5bd52710522f2cc94635314fdacbfec7cf9b64adb69f4a07b374f938990d",
                          "typeString": "literal_string \"ERC2981: royalty fee will exceed salePrice\""
                        },
                        "value": "ERC2981: royalty fee will exceed salePrice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dcda5bd52710522f2cc94635314fdacbfec7cf9b64adb69f4a07b374f938990d",
                          "typeString": "literal_string \"ERC2981: royalty fee will exceed salePrice\""
                        }
                      ],
                      "id": 14611,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2828:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2828:122:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14618,
                  "nodeType": "ExpressionStatement",
                  "src": "2828:122:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14620,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14606,
                          "src": "2968:8:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 14623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2988:1:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2980:7:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14621,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2980:7:77",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2980:10:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2968:22:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323938313a20496e76616c696420706172616d6574657273",
                        "id": 14626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2992:29:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d20a09dd8b4080dbbc254e38d9f607ef83a2c7a38b671ae8f8f162ffe46e2084",
                          "typeString": "literal_string \"ERC2981: Invalid parameters\""
                        },
                        "value": "ERC2981: Invalid parameters"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d20a09dd8b4080dbbc254e38d9f607ef83a2c7a38b671ae8f8f162ffe46e2084",
                          "typeString": "literal_string \"ERC2981: Invalid parameters\""
                        }
                      ],
                      "id": 14619,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2960:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2960:62:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14628,
                  "nodeType": "ExpressionStatement",
                  "src": "2960:62:77"
                },
                {
                  "expression": {
                    "id": 14636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14629,
                        "name": "_tokenRoyaltyInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14531,
                        "src": "3033:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$14526_storage_$",
                          "typeString": "mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"
                        }
                      },
                      "id": 14631,
                      "indexExpression": {
                        "id": 14630,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14604,
                        "src": "3051:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3033:26:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RoyaltyInfo_$14526_storage",
                        "typeString": "struct ERC2981.RoyaltyInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 14633,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14606,
                          "src": "3074:8:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 14634,
                          "name": "feeNumerator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14608,
                          "src": "3084:12:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        ],
                        "id": 14632,
                        "name": "RoyaltyInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14526,
                        "src": "3062:11:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_RoyaltyInfo_$14526_storage_ptr_$",
                          "typeString": "type(struct ERC2981.RoyaltyInfo storage pointer)"
                        }
                      },
                      "id": 14635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3062:35:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RoyaltyInfo_$14526_memory_ptr",
                        "typeString": "struct ERC2981.RoyaltyInfo memory"
                      }
                    },
                    "src": "3033:64:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RoyaltyInfo_$14526_storage",
                      "typeString": "struct ERC2981.RoyaltyInfo storage ref"
                    }
                  },
                  "id": 14637,
                  "nodeType": "ExpressionStatement",
                  "src": "3033:64:77"
                }
              ]
            },
            "documentation": {
              "id": 14602,
              "nodeType": "StructuredDocumentation",
              "src": "2425:259:77",
              "text": " @dev Sets the royalty information for a specific token id, overriding the global default.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."
            },
            "id": 14639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTokenRoyalty",
            "nameLocation": "2698:16:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14604,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2732:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 14639,
                  "src": "2724:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2724:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14606,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2757:8:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 14639,
                  "src": "2749:16:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2749:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14608,
                  "mutability": "mutable",
                  "name": "feeNumerator",
                  "nameLocation": "2782:12:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 14639,
                  "src": "2775:19:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 14607,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "2775:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2714:86:77"
            },
            "returnParameters": {
              "id": 14610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2818:0:77"
            },
            "scope": 14652,
            "src": "2689:415:77",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14650,
              "nodeType": "Block",
              "src": "3272:50:77",
              "statements": [
                {
                  "expression": {
                    "id": 14648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3282:33:77",
                    "subExpression": {
                      "baseExpression": {
                        "id": 14645,
                        "name": "_tokenRoyaltyInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14531,
                        "src": "3289:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$14526_storage_$",
                          "typeString": "mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"
                        }
                      },
                      "id": 14647,
                      "indexExpression": {
                        "id": 14646,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14642,
                        "src": "3307:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3289:26:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RoyaltyInfo_$14526_storage",
                        "typeString": "struct ERC2981.RoyaltyInfo storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14649,
                  "nodeType": "ExpressionStatement",
                  "src": "3282:33:77"
                }
              ]
            },
            "documentation": {
              "id": 14640,
              "nodeType": "StructuredDocumentation",
              "src": "3110:95:77",
              "text": " @dev Resets royalty information for the token id back to the global default."
            },
            "id": 14651,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_resetTokenRoyalty",
            "nameLocation": "3219:18:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14642,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3246:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 14651,
                  "src": "3238:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3238:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3237:17:77"
            },
            "returnParameters": {
              "id": 14644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3272:0:77"
            },
            "scope": 14652,
            "src": "3210:112:77",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 14653,
        "src": "1064:2260:77",
        "usedErrors": []
      }
    ],
    "src": "39:3286:77"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-03-26T10:27:41.587Z",
  "devdoc": {
    "details": "Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first. Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the fee is specified in basis points by default. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported. _Available since v4.5._",
    "kind": "dev",
    "methods": {
      "royaltyInfo(uint256,uint256)": {
        "details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}